!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	./src/c++/lib/blt_util/monogt.hh	/^    A,$/;"	e	enum:MONOGT::index_t
A	./src/c++/lib/blt_util/seq_util.hh	/^    A,$/;"	e	enum:BASE_ID::index_t
A	./src/c++/lib/htsapi/bam_seq.hh	/^    A = 0x1,$/;"	e	enum:BAM_BASE::index_t
AA	./src/c++/lib/blt_util/digt.hh	/^    AA,$/;"	e	enum:DIGT::index_t
AC	./src/c++/lib/blt_util/digt.hh	/^    AC,$/;"	e	enum:DIGT::index_t
AG	./src/c++/lib/blt_util/digt.hh	/^    AG,$/;"	e	enum:DIGT::index_t
AG_GENOTYPE	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^namespace AG_GENOTYPE$/;"	n
ALIGNPATH	./src/c++/lib/blt_util/align_path.cpp	/^namespace ALIGNPATH$/;"	n	file:
ALIGNPATH	./src/c++/lib/blt_util/align_path.hh	/^namespace ALIGNPATH$/;"	n
ALIGNPATH	./src/c++/lib/blt_util/align_path_impl.hh	/^namespace ALIGNPATH$/;"	n
ALIGNPATH	./src/c++/lib/blt_util/align_path_match_descriptor.cpp	/^namespace ALIGNPATH$/;"	n	file:
ALIGNPATH	./src/c++/lib/blt_util/align_path_match_descriptor.hh	/^namespace ALIGNPATH$/;"	n
ALIGNPATH	./src/c++/lib/blt_util/align_path_util.hh	/^namespace ALIGNPATH$/;"	n
ALIGN_ISSUE	./src/c++/lib/blt_util/align_path.hh	/^namespace ALIGN_ISSUE$/;"	n	namespace:ALIGNPATH
ALLWARN	./src/c++/lib/blt_common/blt_shared.hh	/^    ALLWARN = 1  \/\/\/< all other warnings$/;"	e	enum:LOG_LEVEL::index_t
ALT	./src/c++/lib/htsapi/vcf_util.hh	/^    ALT,$/;"	e	enum:VCFID::index_t
ANY	./src/c++/lib/blt_util/seq_util.hh	/^    ANY,$/;"	e	enum:BASE_ID::index_t
ANY	./src/c++/lib/htsapi/bam_seq.hh	/^    ANY = 0xF$/;"	e	enum:BAM_BASE::index_t
AT	./src/c++/lib/blt_util/digt.hh	/^    AT,$/;"	e	enum:DIGT::index_t
ActiveRegion	./src/c++/lib/starling_common/ActiveRegion.hh	/^    ActiveRegion(const pos_range& posRange,$/;"	f	class:ActiveRegion
ActiveRegion	./src/c++/lib/starling_common/ActiveRegion.hh	/^class ActiveRegion$/;"	c
ActiveRegionDetector	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    ActiveRegionDetector($/;"	f	class:ActiveRegionDetector
ActiveRegionDetector	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^class ActiveRegionDetector$/;"	c
ActiveRegionId	./src/c++/lib/starling_common/starling_types.hh	/^typedef pos_t ActiveRegionId;$/;"	t
ActiveRegionReadBuffer	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    ActiveRegionReadBuffer($/;"	f	class:ActiveRegionReadBuffer
ActiveRegionReadBuffer	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^class ActiveRegionReadBuffer$/;"	c
ActiveRegionReadInfo	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^struct ActiveRegionReadInfo$/;"	s
AdaptiveIndelErrorModel	./src/c++/lib/calibration/IndelErrorModel.cpp	/^AdaptiveIndelErrorModel::AdaptiveIndelErrorModel($/;"	f	class:AdaptiveIndelErrorModel
AdaptiveIndelErrorModel	./src/c++/lib/calibration/IndelErrorModel.hh	/^class AdaptiveIndelErrorModel$/;"	c
AdaptiveIndelErrorModelLogParams	./src/c++/lib/calibration/IndelErrorModel.hh	/^class AdaptiveIndelErrorModelLogParams$/;"	c
AlignInfo	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^struct AlignInfo$/;"	s
AlignState	./src/c++/lib/alignment/Alignment.hh	/^struct AlignState$/;"	s
AlignerBase	./src/c++/lib/alignment/AlignerBase.hh	/^    AlignerBase($/;"	f	struct:AlignerBase
AlignerBase	./src/c++/lib/alignment/AlignerBase.hh	/^struct AlignerBase$/;"	s
AlignerUtil	./src/c++/lib/alignment/AlignerUtil.hh	/^struct AlignerUtil$/;"	s
Alignment	./src/c++/lib/alignment/Alignment.hh	/^struct Alignment$/;"	s
AlignmentFileOptions	./src/c++/lib/options/AlignmentFileOptions.hh	/^struct AlignmentFileOptions$/;"	s
AlignmentInfo	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^struct AlignmentInfo$/;"	s	file:
AlignmentResult	./src/c++/lib/alignment/SingleRefAlignerShared.hh	/^    AlignmentResult()$/;"	f	struct:AlignmentResult
AlignmentResult	./src/c++/lib/alignment/SingleRefAlignerShared.hh	/^struct AlignmentResult$/;"	s
AlignmentScores	./src/c++/lib/alignment/AlignmentScores.hh	/^    AlignmentScores($/;"	f	struct:AlignmentScores
AlignmentScores	./src/c++/lib/alignment/AlignmentScores.hh	/^struct AlignmentScores$/;"	s
AlleleCountLogOddsRatio	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        AlleleCountLogOddsRatio,$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
AlleleCountLogOddsRatio	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        AlleleCountLogOddsRatio,$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
AlleleIter_t	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.hh	/^    typedef IndelBuffer::const_iterator AlleleIter_t;$/;"	t	struct:OrthogonalVariantAlleleCandidateGroup
AlleleReportInfo	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    AlleleReportInfo() {}$/;"	f	struct:AlleleReportInfo
AlleleReportInfo	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^struct AlleleReportInfo$/;"	s
AlleleSampleReportInfo	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    AlleleSampleReportInfo() {}$/;"	f	struct:AlleleSampleReportInfo
AlleleSampleReportInfo	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^struct AlleleSampleReportInfo$/;"	s
AnalysisRegionInfo	./src/c++/lib/starling_common/starling_ref_seq.hh	/^struct AnalysisRegionInfo$/;"	s
AssembledContig	./src/c++/lib/assembly/AssembledContig.hh	/^struct AssembledContig$/;"	s
Assembly	./src/c++/lib/assembly/AssembledContig.hh	/^typedef std::vector<AssembledContig> Assembly;$/;"	t
AssemblyReadInfo	./src/c++/lib/assembly/AssemblyReadInfo.hh	/^struct AssemblyReadInfo$/;"	s
AssemblyReadInput	./src/c++/lib/assembly/AssemblyReadInfo.hh	/^typedef std::vector<std::string> AssemblyReadInput;$/;"	t
AssemblyReadOutput	./src/c++/lib/assembly/AssemblyReadInfo.hh	/^typedef std::vector<AssemblyReadInfo> AssemblyReadOutput;$/;"	t
BAM	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    BAM,$/;"	e	enum:HTS_TYPE::index_t
BAM_BASE	./src/c++/lib/htsapi/bam_seq.hh	/^namespace BAM_BASE$/;"	n
BAM_FLAG	./src/c++/lib/htsapi/bam_util.hh	/^namespace BAM_FLAG$/;"	n
BASE_ID	./src/c++/lib/blt_util/seq_util.hh	/^namespace BASE_ID$/;"	n
BASE_MASK	./src/c++/lib/blt_common/hapscore.hh	/^           BASE_MASK = 0x3,$/;"	e	enum:hap_cand::__anon29
BCNoise	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    BCNoise,$/;"	e	enum:SOMATIC_VARIANT_VCF_FILTERS::index_t
BED	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    BED$/;"	e	enum:HTS_TYPE::index_t
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAligner1 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerDelete )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerEdgeDeletionOff )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerEdgeDeletionOn )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerEdgeDeletionOnMini1 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerEdgeDeletionOnMini2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerGlocal )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerInsert )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerInsertDelete )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerInsertDelete2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerLeftShift )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerLeftShift2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerNoClip )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerNoClipEdgeIndel )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerNoClipEdgeIndelInsertDelete )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerNoClipEdgeIndelLeftShiftDelete )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerNoClipEdgeIndelLeftShiftInsert )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerNoClipEdgeIndelMini1 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerNoClipEdgeIndelMini2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerShortRef1 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerShortRef2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_GlobalAlignerShortRef3 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/applications/starling/test/VariantOverlapResolver_test.cpp	/^BOOST_AUTO_TEST_CASE( simple_indel_test )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/applications/starling/test/VariantPhaserTest.cpp	/^BOOST_AUTO_TEST_CASE( multiSamplePhasingTest )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/applications/starling/test/VariantPhaserTest.cpp	/^BOOST_AUTO_TEST_CASE( phasingConflictTest )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/applications/starling/test/continuous_variant_caller_test.cpp	/^BOOST_AUTO_TEST_CASE( compute_sb )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/applications/starling/test/continuous_variant_caller_test.cpp	/^BOOST_AUTO_TEST_CASE( qscore_calculation )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/applications/starling/test/gvcf_writer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_removeCommonPrefix )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/applications/strelka/test/SiteNoise_test.cpp	/^BOOST_AUTO_TEST_CASE( test_SiteNoise )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/assembly/test/IterativeAssemblerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_BasicAssembler )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/assembly/test/IterativeAssemblerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_CircleDetector )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/assembly/test/IterativeAssemblerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_IterativeKmer )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/assembly/test/IterativeAssemblerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_branching_basic )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/assembly/test/IterativeAssemblerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_branching_iterative )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/assembly/test/SmallAssemblerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_PoisonRead )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/assembly/test/SmallAssemblerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_SmallAssembler1 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/assembly/test/SmallAssemblerTest.cpp	/^BOOST_AUTO_TEST_CASE( test_supportingReadConsistency )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_common/test/ref_context_test.cpp	/^BOOST_AUTO_TEST_CASE( testLeftShiftedStrSize )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_common/test/ref_context_test.cpp	/^BOOST_AUTO_TEST_CASE( testSearchForStr )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_common/test/ref_context_test.cpp	/^BOOST_AUTO_TEST_CASE( test_computeContextCompressability )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_common/test/ref_context_test.cpp	/^BOOST_AUTO_TEST_CASE( test_interrupted_hpol_size )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_common/test/ref_context_test.cpp	/^BOOST_AUTO_TEST_CASE( test_interrupted_hpol_size2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_common/test/ref_context_test.cpp	/^BOOST_AUTO_TEST_CASE( test_left_shifted_hpol_size )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_common/test/ref_context_test.cpp	/^BOOST_AUTO_TEST_CASE( test_shortestUnencountered )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_common/test/ref_context_test.cpp	/^BOOST_AUTO_TEST_CASE( test_snp_hpol_size )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/CircularCounter_test.cpp	/^BOOST_AUTO_TEST_CASE( test_CircularCounter1 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/IntegerLogCompressor_test.cpp	/^BOOST_AUTO_TEST_CASE( test_bias )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/IntegerLogCompressor_test.cpp	/^BOOST_AUTO_TEST_CASE( test_compression )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/MedianDepthTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_MDT0 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/MedianDepthTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_MDT1 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/MedianDepthTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_MDT2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/MedianDepthTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_MDT3 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RangeMap_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RangeMap )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RangeMap_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RangeMap2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RangeMap_test.cpp	/^BOOST_AUTO_TEST_CASE( test_rangeMap3 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RangeMap_test.cpp	/^BOOST_AUTO_TEST_CASE( test_rangeMap_dataSizeBoundary )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RangeMap_test.cpp	/^BOOST_AUTO_TEST_CASE( test_rangeMap_eraseTo )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RangeMap_test.cpp	/^BOOST_AUTO_TEST_CASE( test_rangeMap_eraseTo2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RegionTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_PayloadRegionTrackerSubset )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RegionTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RegionPayloadTracker )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RegionTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RegionPayloadTracker2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RegionTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RegionPayloadTracker3 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RegionTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RegionPayloadTracker4 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RegionTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RegionTracker3 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RegionTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RegionTrackerPosIntersect )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RegionTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RegionTrackerRegionIntersect )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RegionTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RegionTrackerSimple )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/RegionTracker_test.cpp	/^BOOST_AUTO_TEST_CASE( test_RegionTrackerSubset )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/algo_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_getDuplicates )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/align_path_test.cpp	/^BOOST_AUTO_TEST_CASE( test_align_path_cigar_conversion )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/align_path_test.cpp	/^BOOST_AUTO_TEST_CASE( test_align_path_cleaner )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/align_path_test.cpp	/^BOOST_AUTO_TEST_CASE( test_align_path_read_length )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/align_path_test.cpp	/^BOOST_AUTO_TEST_CASE( test_align_path_ref_length )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/align_path_test.cpp	/^BOOST_AUTO_TEST_CASE( test_apath_add_seqmatch )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/align_path_test.cpp	/^BOOST_AUTO_TEST_CASE( test_apath_clean_seqmatch )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/align_path_test.cpp	/^BOOST_AUTO_TEST_CASE( test_apath_clip_trail )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/align_path_test.cpp	/^BOOST_AUTO_TEST_CASE( test_apath_indel_count )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/align_path_test.cpp	/^BOOST_AUTO_TEST_CASE( test_apath_limit_read_length )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/align_path_test.cpp	/^BOOST_AUTO_TEST_CASE( test_apath_limit_ref_length )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/binomial_test_test.cpp	/^BOOST_AUTO_TEST_CASE( test_binomial_gte_min_count )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/binomial_test_test.cpp	/^BOOST_AUTO_TEST_CASE( test_binomial_pvalue_0_5_manyvals )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/binomial_test_test.cpp	/^BOOST_AUTO_TEST_CASE( test_binomial_pvalue_many_p_manyvals )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/binomial_test_test.cpp	/^BOOST_AUTO_TEST_CASE( test_exact_binomial_pval )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/binomial_test_test.cpp	/^BOOST_AUTO_TEST_CASE( test_simple_binomial_test )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/compat_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_basename )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/compat_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_round )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/depth_buffer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_depth_buffer_clear )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/depth_buffer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_depth_buffer_compressible_clear )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/depth_buffer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_depth_buffer_compressible_val )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/depth_buffer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_depth_buffer_range )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/depth_buffer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_depth_buffer_val )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/fastRanksum_test.cpp	/^BOOST_AUTO_TEST_CASE( test_fastRanksum )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/fastRanksum_test.cpp	/^BOOST_AUTO_TEST_CASE( test_fastRanksum2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/fisher_exact_test_test.cpp	/^BOOST_AUTO_TEST_CASE( test_fisher_exact_examples )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/fisher_exact_test_test.cpp	/^BOOST_AUTO_TEST_CASE( test_fisher_exact_pval )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/id_map_test.cpp	/^BOOST_AUTO_TEST_CASE( test_id_map )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/id_map_test.cpp	/^BOOST_AUTO_TEST_CASE( test_id_set )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/io_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_StreamScoper )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/istream_line_splitter_test.cpp	/^BOOST_AUTO_TEST_CASE( test_istream_line_splitter_long_line )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/istream_line_splitter_test.cpp	/^BOOST_AUTO_TEST_CASE( test_istream_line_splitter_parse )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/known_pos_range2_test.cpp	/^BOOST_AUTO_TEST_CASE( test_known_pos_range2_intersect_window )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/known_pos_range2_test.cpp	/^BOOST_AUTO_TEST_CASE( test_known_pos_range2_is_pos_intersect )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/known_pos_range2_test.cpp	/^BOOST_AUTO_TEST_CASE( test_known_pos_range2_is_range_intersect )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/known_pos_range2_test.cpp	/^BOOST_AUTO_TEST_CASE( test_pos_range_semibound_is_pos_intersect )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/math_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_log_sum )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/math_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_median )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/observer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_multi_observer )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/observer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_notifier_copy )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/observer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_simple_observer )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_double )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_double_exp )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_double_inf )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_double_rval )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_double_str )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_double_str_bad_input )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_double_str_bad_input2 )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_int )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_int_big )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_int_empty )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_int_rval )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_int_small )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_int_str )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_int_str_bad_input )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_int_tolerate_suffix )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_long )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_long_big )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_long_empty )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_long_rval )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_long_small )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_long_str )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_unsigned )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_unsigned_big )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_unsigned_empty )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_unsigned_rval )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_unsigned_small )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_unsigned_str )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_unsigned_str_bad_input )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/parse_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_parse_unsigned_tolerate_suffix )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/pos_range_test.cpp	/^BOOST_AUTO_TEST_CASE( test_pos_range_is_pos_intersect )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/pos_range_test.cpp	/^BOOST_AUTO_TEST_CASE( test_pos_range_is_range_intersect )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/pos_range_test.cpp	/^BOOST_AUTO_TEST_CASE( test_pos_range_is_superset_of )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/pos_range_test.cpp	/^BOOST_AUTO_TEST_CASE( test_pos_range_semibound_is_pos_intersect )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/prob_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_prob_comp )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/prob_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_softmax )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/prob_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_softmax_edgecase )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/prob_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_softmax_factor_scale )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/prob_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_softmax_range )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/qscore_test.cpp	/^BOOST_AUTO_TEST_CASE( boundary_qscore_test )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/qscore_test.cpp	/^BOOST_AUTO_TEST_CASE( simple_qscore_test )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/ranksum_test.cpp	/^BOOST_AUTO_TEST_CASE( test_ranksum )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/seq_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_seq_repeat )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/set_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_set_subtract )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^BOOST_AUTO_TEST_CASE( test_stage_data_bad_id )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^BOOST_AUTO_TEST_CASE( test_stage_data_bad_parent )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^BOOST_AUTO_TEST_CASE( test_stage_data_dist )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^BOOST_AUTO_TEST_CASE( test_stage_manager )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^BOOST_AUTO_TEST_CASE( test_stage_manager_reset )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/stream_stat_test.cpp	/^BOOST_AUTO_TEST_CASE( test_stream_stat )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/string_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_destructive_split_string )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/string_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_split_match )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/string_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_split_string )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/string_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_split_string_cstr )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/blt_util/test/window_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_window )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/align_path_bam_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_edit_bam_cigar )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/bam_streamer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_bam_streamer_bam_read )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/bam_streamer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_bam_streamer_cram_read )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/bam_streamer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_bam_streamer_cram_read_fail )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/bed_streamer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_bed_streamer_region )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/vcf_record_test.cpp	/^BOOST_AUTO_TEST_CASE( test_site )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/vcf_record_test.cpp	/^BOOST_AUTO_TEST_CASE( test_snv )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/vcf_record_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_vcf_record_util )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/vcf_streamer_test.cpp	/^BOOST_AUTO_TEST_CASE( test_vcf_streamer_region )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/vcf_util_test.cpp	/^BOOST_AUTO_TEST_CASE( vcf_allele_to_genotype_test )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/htsapi/test/vcf_util_test.cpp	/^BOOST_AUTO_TEST_CASE( vcf_genotype_to_allele_test )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^BOOST_AUTO_TEST_CASE( test_indelCandidacy )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^BOOST_AUTO_TEST_CASE( test_jumpingPositions )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^BOOST_AUTO_TEST_CASE( test_leftShiftIndel )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^BOOST_AUTO_TEST_CASE( test_multiSampleMMDF )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/IndelErrorModelTest.cpp	/^BOOST_AUTO_TEST_CASE( test_findingAnchors )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/ReferenceRepeatFinderTest.cpp	/^BOOST_AUTO_TEST_CASE( test_findingAnchors )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/alignment_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_alignment_range_types )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/alignment_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_alignment_zone )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/alignment_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_getLowestFwdReadPosForRefRange )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/alignment_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_matchify_insertions )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/alignment_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_matchify_soft_clip )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/alignment_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_remove_edge_deletion )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/indel_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_indel_intersect_deletion )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/indel_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_range_adjacent_delete )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/indel_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_range_adjacent_insert )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/indel_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_range_adjacent_swap )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/indel_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_range_intersect_delete )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/indel_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_range_intersect_insert )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/indel_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_range_intersect_swap )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/min_count_binom_gte_cache_test.cpp	/^BOOST_AUTO_TEST_CASE( test_compare_reject_to_is_reject_binomial_gte_n_success_exact )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/min_count_binom_gte_cache_test.cpp	/^BOOST_AUTO_TEST_CASE( test_count )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/min_count_binom_gte_cache_test.cpp	/^BOOST_AUTO_TEST_CASE( test_reject )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/normalizeAlignment_test.cpp	/^BOOST_AUTO_TEST_CASE( test_normalizeAlignment )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/normalizeAlignment_test.cpp	/^BOOST_AUTO_TEST_CASE( test_normalizeAlignmentFromBamRecord )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/ploidy_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_vcf_ploidy_parse )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/starling_pos_processor_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_subregions_from_bed )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/starling_pos_processor_util_test.cpp	/^BOOST_AUTO_TEST_CASE( test_vcf_to_allele )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/starling_read_align_test.cpp	/^BOOST_AUTO_TEST_CASE( test_end_pin_start_pos )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/starling_read_align_test.cpp	/^BOOST_AUTO_TEST_CASE( test_make_start_pos_alignment )$/;"	f
BOOST_AUTO_TEST_CASE	./src/c++/lib/starling_common/test/starling_read_align_test.cpp	/^BOOST_AUTO_TEST_CASE( test_realign_and_score_read )$/;"	f
BOOST_TEST_MODULE	./src/c++/lib/alignment/test/test_main.cpp	20;"	d	file:
BOOST_TEST_MODULE	./src/c++/lib/applications/starling/test/test_main.cpp	20;"	d	file:
BOOST_TEST_MODULE	./src/c++/lib/applications/strelka/test/test_main.cpp	20;"	d	file:
BOOST_TEST_MODULE	./src/c++/lib/assembly/test/test_main.cpp	20;"	d	file:
BOOST_TEST_MODULE	./src/c++/lib/blt_common/test/test_main.cpp	20;"	d	file:
BOOST_TEST_MODULE	./src/c++/lib/blt_util/test/test_main.cpp	20;"	d	file:
BOOST_TEST_MODULE	./src/c++/lib/htsapi/test/test_main.cpp	20;"	d	file:
BOOST_TEST_MODULE	./src/c++/lib/starling_common/test/test_main.cpp	20;"	d	file:
BOOST_TIMER_HELPER	./src/c++/lib/blt_util/time_util.hh	/^namespace BOOST_TIMER_HELPER$/;"	n
BP_LEFT	./src/c++/lib/starling_common/indel_core.hh	/^    BP_LEFT,$/;"	e	enum:INDEL::index_t
BP_RIGHT	./src/c++/lib/starling_common/indel_core.hh	/^    BP_RIGHT,$/;"	e	enum:INDEL::index_t
BREAKPOINT	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    BREAKPOINT,$/;"	e	enum:SimplifiedIndelReportType::index_t
BackTrace	./src/c++/lib/alignment/AlignerUtil.hh	/^struct BackTrace$/;"	s
BaseErrorContext	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    BaseErrorContext() {}$/;"	f	struct:BaseErrorContext
BaseErrorContext	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^struct BaseErrorContext$/;"	s
BaseErrorContextInputObservation	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^struct BaseErrorContextInputObservation$/;"	s
BaseErrorContextObservation	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^struct BaseErrorContextObservation$/;"	s
BaseErrorContextObservationData	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^struct BaseErrorContextObservationData$/;"	s
BaseErrorContextObservationExportData	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^struct BaseErrorContextObservationExportData$/;"	s
BaseErrorContextObservationExportObservation	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^struct BaseErrorContextObservationExportObservation$/;"	s
BaseErrorContextObservationExportStrandObservation	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^struct BaseErrorContextObservationExportStrandObservation$/;"	s
BaseErrorCounts	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^struct BaseErrorCounts$/;"	s
BaseErrorData	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^struct BaseErrorData$/;"	s
BaseQRankSum	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    double BaseQRankSum = 0;    \/\/ Uses Mann-Whitney Rank Sum Test for BQs (ref bases vs alternate alleles)$/;"	m	struct:GermlineSiteSampleInfo
BreakpointInsertSequenceManager	./src/c++/lib/starling_common/IndelData.hh	/^struct BreakpointInsertSequenceManager$/;"	s
C	./src/c++/lib/blt_util/monogt.hh	/^    C,$/;"	e	enum:MONOGT::index_t
C	./src/c++/lib/blt_util/seq_util.hh	/^    C,$/;"	e	enum:BASE_ID::index_t
C	./src/c++/lib/htsapi/bam_seq.hh	/^    C = 0x2,$/;"	e	enum:BAM_BASE::index_t
CALIBRATION	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^    CALIBRATION,$/;"	e	enum:SMODEL_ENTRY_TYPE::index_t	file:
CALL_REGION	./src/c++/lib/applications/starling/starling_run.cpp	/^    CALL_REGION$/;"	e	enum:INPUT_TYPE::index_t	file:
CALL_REGION	./src/c++/lib/applications/strelka/strelka_run.cpp	/^    CALL_REGION$/;"	e	enum:INPUT_TYPE::index_t	file:
CANDIDATE_INDELS	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsRun.cpp	/^    CANDIDATE_INDELS,$/;"	e	enum:INPUT_TYPE::index_t	file:
CANDIDATE_INDELS	./src/c++/lib/applications/starling/starling_run.cpp	/^    CANDIDATE_INDELS,$/;"	e	enum:INPUT_TYPE::index_t	file:
CANDIDATE_INDELS	./src/c++/lib/applications/strelka/strelka_run.cpp	/^    CANDIDATE_INDELS,$/;"	e	enum:INPUT_TYPE::index_t	file:
CANDIDATE_INDELS	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_run.cpp	/^    CANDIDATE_INDELS,$/;"	e	enum:INPUT_TYPE::index_t	file:
CC	./src/c++/lib/blt_util/digt.hh	/^    CC,$/;"	e	enum:DIGT::index_t
CG	./src/c++/lib/blt_util/digt.hh	/^    CG,$/;"	e	enum:DIGT::index_t
CHROM	./src/c++/lib/htsapi/vcf_util.hh	/^    CHROM,$/;"	e	enum:VCFID::index_t
CLEAR_INDEL_BUFFER	./src/c++/lib/starling_common/starling_pos_processor_base_stages.hh	/^    CLEAR_INDEL_BUFFER,$/;"	e	enum:STAGE::index_t
CLEAR_READ_BUFFER	./src/c++/lib/starling_common/starling_pos_processor_base_stages.hh	/^    CLEAR_READ_BUFFER, \/\/ placement depends on various options$/;"	e	enum:STAGE::index_t
CLEAR_SITE_ANNOTATION	./src/c++/lib/starling_common/starling_pos_processor_base_stages.hh	/^    CLEAR_SITE_ANNOTATION,$/;"	e	enum:STAGE::index_t
CLIPPING	./src/c++/lib/blt_util/align_path.hh	/^    CLIPPING,$/;"	e	enum:ALIGNPATH::ALIGN_ISSUE::issue_t
CODEMIN_USE_BOOST	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	31;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	30;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	31;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	29;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	28;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	31;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	30;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	33;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/blt_common/position_nonref_2allele_test.cpp	32;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/blt_common/position_nonref_test.cpp	32;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/blt_common/position_snp_call_lrt.cpp	27;"	d	file:
CODEMIN_USE_BOOST	./src/c++/lib/blt_common/position_strand_distro_anomaly_lrt.cpp	29;"	d	file:
CONFLICT	./src/c++/lib/applications/strelka/somatic_call_shared.hh	/^               CONFLICT,$/;"	e	enum:NTYPE::index_t
CONFLICT	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^        CONFLICT$/;"	e	enum:__anon10::ref_map_type::map_t	file:
CT	./src/c++/lib/blt_util/digt.hh	/^    CT,$/;"	e	enum:DIGT::index_t
CandidateAlignment	./src/c++/lib/starling_common/CandidateAlignment.hh	/^struct CandidateAlignment$/;"	s
CandidateSnvBuffer	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    explicit CandidateSnvBuffer(const unsigned sampleCount):$/;"	f	class:CandidateSnvBuffer
CandidateSnvBuffer	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^class CandidateSnvBuffer$/;"	c
ChromDepthOptions	./src/c++/lib/applications/GetChromDepth/ChromDepthOptions.hh	/^struct ChromDepthOptions$/;"	s
ChromDepthTracker	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    ChromDepthTracker() :$/;"	f	struct:ChromDepthTracker
ChromDepthTracker	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^struct ChromDepthTracker$/;"	s	file:
CircularCounter	./src/c++/lib/blt_util/CircularCounter.hh	/^    CircularCounter($/;"	f	struct:CircularCounter
CircularCounter	./src/c++/lib/blt_util/CircularCounter.hh	/^struct CircularCounter$/;"	s
CleanPileup	./src/c++/lib/starling_common/PileupCleaner.hh	/^    CleanPileup($/;"	f	struct:PileupCleaner
CleanPileupErrorProb	./src/c++/lib/starling_common/PileupCleaner.cpp	/^CleanPileupErrorProb($/;"	f	class:PileupCleaner
CleanPileupFilter	./src/c++/lib/starling_common/PileupCleaner.cpp	/^CleanPileupFilter($/;"	f	class:PileupCleaner
Clean_string	./src/c++/lib/calibration/IndelErrorModelMetadata.cpp	/^Clean_string(const std::string& str)$/;"	f	file:
Clean_string	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^Clean_string(const std::string& str)$/;"	f	file:
CleanedPileup	./src/c++/lib/starling_common/PileupCleaner.hh	/^    CleanedPileup()$/;"	f	struct:CleanedPileup
CleanedPileup	./src/c++/lib/starling_common/PileupCleaner.hh	/^struct CleanedPileup$/;"	s
ClearHaplotypeIdForBase	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^struct ClearHaplotypeIdForBase$/;"	s
ClearT	./src/c++/lib/blt_util/RangeMap.hh	/^struct ClearT$/;"	s
ConservativeGenotypeQuality	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        ConservativeGenotypeQuality,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
ConservativeGenotypeQuality	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        ConservativeGenotypeQuality,$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
ConservativeGenotypeQuality	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        ConservativeGenotypeQuality,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
ConservativeGenotypeQuality	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        ConservativeGenotypeQuality,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
ContextCompressability	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        ContextCompressability,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
ContextGenotypePriors	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^struct ContextGenotypePriors$/;"	s
ContextTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModel1.cpp	/^struct ContextTotal$/;"	s	namespace:__anon25	file:
CpuTimes	./src/c++/lib/blt_util/time_util.hh	/^    CpuTimes($/;"	f	struct:CpuTimes
CpuTimes	./src/c++/lib/blt_util/time_util.hh	/^    CpuTimes() {}$/;"	f	struct:CpuTimes
CpuTimes	./src/c++/lib/blt_util/time_util.hh	/^struct CpuTimes$/;"	s
DATE	./src/c++/lib/calibration/IndelErrorModelMetadata.cpp	/^    DATE,$/;"	e	enum:IMODEL_ENTRY_TYPE::index_t	file:
DATE	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^    DATE,$/;"	e	enum:SMODEL_ENTRY_TYPE::index_t	file:
DDIGT	./src/c++/lib/applications/strelka/strelka_digt_states.cpp	/^namespace DDIGT$/;"	n	file:
DDIGT	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^namespace DDIGT$/;"	n
DDIGT_GRID	./src/c++/lib/applications/strelka/strelka_digt_states.cpp	/^namespace DDIGT_GRID$/;"	n	file:
DDIGT_GRID	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^namespace DDIGT_GRID$/;"	n
DECISION	./src/c++/lib/calibration/RandomForestModel.cpp	/^    DECISION,$/;"	e	enum:DTREE_NODE_TYPE::index_t	file:
DEFAULT	./src/c++/lib/blt_common/blt_shared.hh	/^    DEFAULT = 0, \/\/\/< errors and low-frequency warnings$/;"	e	enum:LOG_LEVEL::index_t
DELETE	./src/c++/lib/alignment/Alignment.hh	/^        DELETE,$/;"	e	enum:AlignState::index_t
DELETE	./src/c++/lib/blt_util/align_path.hh	/^    DELETE,$/;"	e	enum:ALIGNPATH::align_t
DELETE	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    DELETE,$/;"	e	enum:IndelErrorRateType::index_t
DELETE	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    DELETE,$/;"	e	enum:INDEL_TYPE::index_t
DELETE	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^        DELETE,$/;"	e	enum:ActiveRegionReadBuffer::VariantType
DELETE	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    DELETE,$/;"	e	enum:SimplifiedIndelReportType::index_t
DELETE_1	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    DELETE_1,$/;"	e	enum:INDEL_SIGNAL_TYPE::index_t
DELETE_2	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    DELETE_2,$/;"	e	enum:INDEL_SIGNAL_TYPE::index_t
DELETE_GE3	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    DELETE_GE3,$/;"	e	enum:INDEL_SIGNAL_TYPE::index_t
DIGT	./src/c++/lib/blt_util/digt.hh	/^namespace DIGT$/;"	n
DIGT_GRID	./src/c++/lib/applications/strelka/strelka_digt_states.cpp	/^namespace DIGT_GRID$/;"	n	file:
DIGT_GRID	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^namespace DIGT_GRID$/;"	n
DSECOptions	./src/c++/lib/applications/DumpSequenceErrorCounts/DSECOptions.hh	/^struct DSECOptions$/;"	s
DTREE_NODE_TYPE	./src/c++/lib/calibration/RandomForestModel.cpp	/^namespace DTREE_NODE_TYPE$/;"	n	file:
DUPLICATE	./src/c++/lib/htsapi/bam_util.hh	/^    DUPLICATE     = 0x400,$/;"	e	enum:BAM_FLAG::index_t
DUPLICATE	./src/c++/lib/starling_common/starling_read_filter_shared.hh	/^    DUPLICATE,$/;"	e	enum:READ_FILTER_TYPE::index_t
DecisionTree	./src/c++/lib/calibration/RandomForestModel.hh	/^    struct DecisionTree$/;"	s	struct:RandomForestModel
DecisionTreeNode	./src/c++/lib/calibration/RandomForestModel.hh	/^    struct DecisionTreeNode$/;"	s	struct:RandomForestModel
DepthTracker	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^struct DepthTracker$/;"	s	file:
Deserialize	./src/c++/lib/calibration/RandomForestModel.cpp	/^Deserialize($/;"	f	class:RandomForestModel
Deserialize	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^Deserialize($/;"	f	class:VariantScoringModelMetadata
DummyVariantSink	./src/c++/lib/applications/starling/test/VariantOverlapResolver_test.cpp	/^    DummyVariantSink() : variant_pipe_stage_base() {}$/;"	f	struct:DummyVariantSink
DummyVariantSink	./src/c++/lib/applications/starling/test/VariantOverlapResolver_test.cpp	/^struct DummyVariantSink : public variant_pipe_stage_base$/;"	s	file:
DummyVariantSink	./src/c++/lib/applications/starling/test/VariantPhaserTest.cpp	/^    DummyVariantSink() : variant_pipe_stage_base() {}$/;"	f	struct:DummyVariantSink
DummyVariantSink	./src/c++/lib/applications/starling/test/VariantPhaserTest.cpp	/^struct DummyVariantSink : public variant_pipe_stage_base$/;"	s	file:
DumpSequenceErrorCounts	./src/c++/lib/applications/DumpSequenceErrorCounts/DumpSequenceErrorCounts.hh	/^struct DumpSequenceErrorCounts : public illumina::Program$/;"	s
EDGE_DELETE	./src/c++/lib/blt_util/align_path.hh	/^    EDGE_DELETE,$/;"	e	enum:ALIGNPATH::ALIGN_ISSUE::issue_t
EDGE_SKIP	./src/c++/lib/blt_util/align_path.hh	/^    EDGE_SKIP,$/;"	e	enum:ALIGNPATH::ALIGN_ISSUE::issue_t
EPECOptions	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^struct EPECOptions$/;"	s
EPECOptions	./src/c++/lib/applications/EstimateVariantErrorRates/EPECOptions.hh	/^struct EPECOptions$/;"	s
EVS	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    double EVS = 0;$/;"	m	struct:strelka_shared_modifiers
EXCLUDE_REGION	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsRun.cpp	/^    EXCLUDE_REGION,$/;"	e	enum:INPUT_TYPE::index_t	file:
EmptyPosSet	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    EmptyPosSet()$/;"	f	struct:EmptyPosSet
EmptyPosSet	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^struct EmptyPosSet$/;"	s
EstimateParametersFromErrorCounts	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EstimateParametersFromErrorCounts.hh	/^struct EstimateParametersFromErrorCounts : public illumina::Program$/;"	s
EstimateVariantErrorRates	./src/c++/lib/applications/EstimateVariantErrorRates/EstimateVariantErrorRates.hh	/^struct EstimateVariantErrorRates : public illumina::Program$/;"	s
ExceptionData	./src/c++/lib/common/Exceptions.cpp	/^ExceptionData::ExceptionData(int errorNumber, const std::string& message)$/;"	f	class:illumina::common::ExceptionData
ExceptionData	./src/c++/lib/common/Exceptions.hh	/^class ExceptionData : public boost::exception$/;"	c	namespace:illumina::common
ExportedIndelObservations	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^struct ExportedIndelObservations$/;"	s
FEATURES	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^    FEATURES,$/;"	e	enum:SMODEL_ENTRY_TYPE::index_t	file:
FILT	./src/c++/lib/htsapi/vcf_util.hh	/^    FILT,$/;"	e	enum:VCFID::index_t
FILTER	./src/c++/lib/htsapi/bam_util.hh	/^    FILTER        = 0x200,$/;"	e	enum:BAM_FLAG::index_t
FILTERCUTOFF	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^    FILTERCUTOFF,$/;"	e	enum:SMODEL_ENTRY_TYPE::index_t	file:
FIRST_READ	./src/c++/lib/htsapi/bam_util.hh	/^    FIRST_READ    = 0x040,$/;"	e	enum:BAM_FLAG::index_t
FISHER_EXACT	./src/c++/lib/blt_util/fisher_exact_test.hh	/^enum class FISHER_EXACT : unsigned int$/;"	c
FLANK_SIZE	./src/c++/lib/blt_common/hapscore.hh	/^    enum { FLANK_SIZE = 10,$/;"	e	enum:hap_cand::__anon29
FLOATING	./src/c++/lib/blt_util/align_path.hh	/^    FLOATING,$/;"	e	enum:ALIGNPATH::ALIGN_ISSUE::issue_t
FORCED_GT_VARIANTS	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsRun.cpp	/^    FORCED_GT_VARIANTS,$/;"	e	enum:INPUT_TYPE::index_t	file:
FORCED_GT_VARIANTS	./src/c++/lib/applications/starling/starling_run.cpp	/^    FORCED_GT_VARIANTS,$/;"	e	enum:INPUT_TYPE::index_t	file:
FORCED_GT_VARIANTS	./src/c++/lib/applications/strelka/strelka_run.cpp	/^    FORCED_GT_VARIANTS,$/;"	e	enum:INPUT_TYPE::index_t	file:
FORCED_GT_VARIANTS	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_run.cpp	/^    FORCED_GT_VARIANTS,$/;"	e	enum:INPUT_TYPE::index_t	file:
FORMAT	./src/c++/lib/htsapi/vcf_util.hh	/^    FORMAT,$/;"	e	enum:VCFID::index_t
F_DP	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        F_DP,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
F_DPF	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        F_DPF,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
F_DPI	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        F_DPI,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
F_DPI_NORM	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        F_DPI_NORM,$/;"	e	enum:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
F_DPI_NORM	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        F_DPI_NORM,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQ	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        F_GQ,$/;"	e	enum:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQ	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        F_GQ,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQ	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        F_GQ,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQ	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        F_GQ,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQX_NORM	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        F_GQX_NORM,$/;"	e	enum:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQX_NORM	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        F_GQX_NORM,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQX_NORM	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        F_GQX_NORM,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQX_NORM	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        F_GQX_NORM,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQ_NORM	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        F_GQ_NORM,$/;"	e	enum:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQ_NORM	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        F_GQ_NORM,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQ_NORM	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        F_GQ_NORM,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
F_GQ_NORM	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        F_GQ_NORM,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
F_OK	./src/c++/lib/blt_util/compat_unistd.h	23;"	d
FeatureSet	./src/c++/lib/calibration/featuresetUtil.hh	/^struct FeatureSet : public PolymorphicObject$/;"	s
G	./src/c++/lib/blt_util/monogt.hh	/^    G,$/;"	e	enum:MONOGT::index_t
G	./src/c++/lib/blt_util/seq_util.hh	/^    G,$/;"	e	enum:BASE_ID::index_t
G	./src/c++/lib/htsapi/bam_seq.hh	/^    G = 0x4,$/;"	e	enum:BAM_BASE::index_t
GENOME_SUBMAP_READ	./src/c++/lib/starling_common/indel_align_type.hh	/^    GENOME_SUBMAP_READ$/;"	e	enum:INDEL_ALIGN_TYPE::index_t
GENOME_TIER1_READ	./src/c++/lib/starling_common/indel_align_type.hh	/^    GENOME_TIER1_READ,$/;"	e	enum:INDEL_ALIGN_TYPE::index_t
GENOME_TIER2_READ	./src/c++/lib/starling_common/indel_align_type.hh	/^    GENOME_TIER2_READ,$/;"	e	enum:INDEL_ALIGN_TYPE::index_t
GENOTYPE_STATUS	./src/c++/lib/blt_util/RecordTracker.hh	/^namespace GENOTYPE_STATUS$/;"	n
GERMLINE	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^    GERMLINE,$/;"	e	enum:SCORING_CALL_TYPE::index_t
GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^struct GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES : public FeatureSet$/;"	s
GERMLINE_INDEL_SCORING_FEATURES	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^struct GERMLINE_INDEL_SCORING_FEATURES : public FeatureSet$/;"	s
GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^struct GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES : public FeatureSet$/;"	s
GERMLINE_SNV_SCORING_FEATURES	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^struct GERMLINE_SNV_SCORING_FEATURES : public FeatureSet$/;"	s
GERMLINE_VARIANT_VCF_FILTERS	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^namespace GERMLINE_VARIANT_VCF_FILTERS$/;"	n
GG	./src/c++/lib/blt_util/digt.hh	/^    GG,$/;"	e	enum:DIGT::index_t
GREATER	./src/c++/lib/blt_util/fisher_exact_test.hh	/^    GREATER   = 2,$/;"	m	class:FISHER_EXACT
GT	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        GT,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
GT	./src/c++/lib/blt_util/digt.hh	/^    GT,$/;"	e	enum:DIGT::index_t
GenotypeCategory	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        GenotypeCategory,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
GenotypeCategory	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        GenotypeCategory,$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
GenotypeLikelihoods	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GenotypeLikelihoods$/;"	s
GenotypePriorSet	./src/c++/lib/starling_common/AlleleGroupGenotype.cpp	/^GenotypePriorSet($/;"	f	class:GenotypePriorSet
GenotypePriorSet	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^struct GenotypePriorSet$/;"	s
GermlineContinuousIndelLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    GermlineContinuousIndelLocusInfo($/;"	f	struct:GermlineContinuousIndelLocusInfo
GermlineContinuousIndelLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GermlineContinuousIndelLocusInfo : public GermlineIndelLocusInfo$/;"	s
GermlineContinuousSiteLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    GermlineContinuousSiteLocusInfo($/;"	f	struct:GermlineContinuousSiteLocusInfo
GermlineContinuousSiteLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GermlineContinuousSiteLocusInfo : public GermlineSiteLocusInfo$/;"	s
GermlineContinuousSiteSampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GermlineContinuousSiteSampleInfo$/;"	s
GermlineDiploidIndelLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    GermlineDiploidIndelLocusInfo($/;"	f	struct:GermlineDiploidIndelLocusInfo
GermlineDiploidIndelLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GermlineDiploidIndelLocusInfo : public GermlineIndelLocusInfo$/;"	s
GermlineDiploidSiteLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    GermlineDiploidSiteLocusInfo($/;"	f	struct:GermlineDiploidSiteLocusInfo
GermlineDiploidSiteLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GermlineDiploidSiteLocusInfo : public GermlineSiteLocusInfo$/;"	s
GermlineFilterKeeper	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GermlineFilterKeeper$/;"	s
GermlineIndelAlleleInfo	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    GermlineIndelAlleleInfo($/;"	f	struct:GermlineIndelAlleleInfo
GermlineIndelAlleleInfo	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^struct GermlineIndelAlleleInfo : public GermlineVariantAlleleInfo$/;"	s
GermlineIndelLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    GermlineIndelLocusInfo($/;"	f	struct:GermlineIndelLocusInfo
GermlineIndelLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GermlineIndelLocusInfo : public LocusInfo$/;"	s
GermlineIndelSampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GermlineIndelSampleInfo$/;"	s
GermlineSiteAlleleInfo	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    GermlineSiteAlleleInfo(const BASE_ID::index_t initBaseId = BASE_ID::ANY)$/;"	f	struct:GermlineSiteAlleleInfo
GermlineSiteAlleleInfo	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^struct GermlineSiteAlleleInfo : public GermlineVariantAlleleInfo$/;"	s
GermlineSiteLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    GermlineSiteLocusInfo($/;"	f	struct:GermlineSiteLocusInfo
GermlineSiteLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GermlineSiteLocusInfo : public LocusInfo$/;"	s
GermlineSiteSampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct GermlineSiteSampleInfo$/;"	s
GermlineVariantAlleleInfo	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    GermlineVariantAlleleInfo()$/;"	f	struct:GermlineVariantAlleleInfo
GermlineVariantAlleleInfo	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^struct GermlineVariantAlleleInfo : public PolymorphicObject$/;"	s
GetChromDepth	./src/c++/lib/applications/GetChromDepth/GetChromDepth.hh	/^struct GetChromDepth : public illumina::Program$/;"	s
GetSequenceErrorCounts	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCounts.hh	/^struct GetSequenceErrorCounts : public illumina::Program$/;"	s
GetSequenceErrorCountsInfo	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsInfo.hh	/^    GetSequenceErrorCountsInfo() {}$/;"	f	struct:GetSequenceErrorCountsInfo
GetSequenceErrorCountsInfo	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsInfo.hh	/^struct GetSequenceErrorCountsInfo : public prog_info_base$/;"	s
GlobalAligner	./src/c++/lib/alignment/GlobalAligner.hh	/^    GlobalAligner($/;"	f	struct:GlobalAligner
GlobalAligner	./src/c++/lib/alignment/GlobalAligner.hh	/^struct GlobalAligner : public SingleRefAlignerBase<ScoreType>$/;"	s
HAP_SIZE	./src/c++/lib/blt_common/hapscore.hh	/^           HAP_SIZE = FLANK_SIZE*2+1,$/;"	e	enum:hap_cand::__anon29
HARD_CLIP	./src/c++/lib/blt_util/align_path.hh	/^    HARD_CLIP,$/;"	e	enum:ALIGNPATH::align_t
HEAD	./src/c++/lib/starling_common/starling_pos_processor_base_stages.hh	/^    HEAD,$/;"	e	enum:STAGE::index_t
HET	./src/c++/lib/applications/strelka/somatic_call_shared.hh	/^               HET,$/;"	e	enum:NTYPE::index_t
HET	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^    HET,$/;"	e	enum:SOMATIC_DIGT::index_t
HET	./src/c++/lib/blt_util/RecordTracker.hh	/^    HET,$/;"	e	enum:GENOTYPE_STATUS::genotype_t
HET	./src/c++/lib/starling_common/starling_diploid_indel.hh	/^    HET,$/;"	e	enum:STAR_DIINDEL::index_t
HET0	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    HET0, \/\/\/< ref + most likely alt$/;"	e	enum:AG_GENOTYPE::index_t
HET01	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    HET01, \/\/\/< most likely alt + any other alt$/;"	e	enum:AG_GENOTYPE::index_t
HET1	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    HET1, \/\/\/< ref + any other alt$/;"	e	enum:AG_GENOTYPE::index_t
HETALT	./src/c++/lib/blt_util/RecordTracker.hh	/^    HETALT,$/;"	e	enum:GENOTYPE_STATUS::genotype_t
HET_COUNT	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^                 HET_COUNT = HET_RES*2+1,$/;"	e	enum:DIGT_GRID::constants
HET_RES	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum constants { HET_RES = 9,$/;"	e	enum:DIGT_GRID::constants
HET_SIZE	./src/c++/lib/blt_util/digt.hh	/^    HET_SIZE = SIZE-N_BASE,$/;"	e	enum:DIGT::constants
HOM	./src/c++/lib/applications/strelka/somatic_call_shared.hh	/^               HOM,$/;"	e	enum:NTYPE::index_t
HOM	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^    HOM,$/;"	e	enum:SOMATIC_DIGT::index_t
HOM	./src/c++/lib/starling_common/starling_diploid_indel.hh	/^    HOM,$/;"	e	enum:STAR_DIINDEL::index_t
HOM0	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    HOM0, \/\/\/< most likely alt$/;"	e	enum:AG_GENOTYPE::index_t
HOM1	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    HOM1, \/\/\/< any other alt$/;"	e	enum:AG_GENOTYPE::index_t
HOMALT	./src/c++/lib/blt_util/RecordTracker.hh	/^    HOMALT,$/;"	e	enum:GENOTYPE_STATUS::genotype_t
HOMREF	./src/c++/lib/blt_util/RecordTracker.hh	/^    HOMREF,$/;"	e	enum:GENOTYPE_STATUS::genotype_t
HOMREF	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    HOMREF,$/;"	e	enum:AG_GENOTYPE::index_t
HOM_SIZE	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^                 HOM_SIZE = 2,$/;"	e	enum:DIGT_GRID::constants
HTS_TYPE	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^namespace HTS_TYPE$/;"	n
HaplotypeId	./src/c++/lib/starling_common/ActiveRegion.hh	/^typedef uint8_t HaplotypeId;$/;"	t
HaplotypeId	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^typedef uint8_t HaplotypeId;$/;"	t
HaplotypeIdAndCountRatio	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^struct HaplotypeIdAndCountRatio$/;"	s
HaplotypeToAlignIdSet	./src/c++/lib/starling_common/ActiveRegion.hh	/^typedef std::map<std::string, std::vector<align_id_t>> HaplotypeToAlignIdSet;$/;"	t
HighBaseFilt	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    HighBaseFilt,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
HighDepth	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    HighDepth,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
HighDepth	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    HighDepth,$/;"	e	enum:SOMATIC_VARIANT_VCF_FILTERS::index_t
HighRefRep	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    HighRefRep,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
HighSNVHPOL	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    HighSNVHPOL,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
HighSNVSB	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    HighSNVSB,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
HtsData	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    struct HtsData$/;"	s	struct:HtsMergeStreamer
HtsMergeStreamer	./src/c++/lib/starling_common/HtsMergeStreamer.cpp	/^HtsMergeStreamer($/;"	f	class:HtsMergeStreamer
HtsMergeStreamer	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^struct HtsMergeStreamer$/;"	s
HtsRecordSortData	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        HtsRecordSortData($/;"	f	struct:HtsMergeStreamer::HtsRecordSortData
HtsRecordSortData	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    struct HtsRecordSortData$/;"	s	struct:HtsMergeStreamer
ID	./src/c++/lib/htsapi/vcf_util.hh	/^    ID,$/;"	e	enum:VCFID::index_t
IMODEL_ENTRY_TYPE	./src/c++/lib/calibration/IndelErrorModelMetadata.cpp	/^namespace IMODEL_ENTRY_TYPE$/;"	n	file:
INDEL	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^    INDEL,$/;"	e	enum:MODEL_TYPE::index_t
INDEL	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^    INDEL,$/;"	e	enum:SCORING_VARIANT_TYPE::index_t
INDEL	./src/c++/lib/starling_common/indel_core.hh	/^    INDEL,$/;"	e	enum:INDEL::index_t
INDEL	./src/c++/lib/starling_common/indel_core.hh	/^namespace INDEL$/;"	n
INDEL_ALIGN_TYPE	./src/c++/lib/starling_common/indel_align_type.hh	/^namespace INDEL_ALIGN_TYPE$/;"	n
INDEL_BEGIN	./src/c++/lib/blt_util/align_path_match_descriptor.cpp	/^    INDEL_BEGIN='^',$/;"	e	enum:__anon6	file:
INDEL_END	./src/c++/lib/blt_util/align_path_match_descriptor.cpp	/^    INDEL_END='$'$/;"	e	enum:__anon6	file:
INDEL_SIGNAL_TYPE	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^namespace INDEL_SIGNAL_TYPE$/;"	n
INDEL_TYPE	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^namespace INDEL_TYPE$/;"	n
INFO	./src/c++/lib/htsapi/vcf_util.hh	/^    INFO,$/;"	e	enum:VCFID::index_t
INPUT_TYPE	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsRun.cpp	/^namespace INPUT_TYPE$/;"	n	file:
INPUT_TYPE	./src/c++/lib/applications/starling/starling_run.cpp	/^namespace INPUT_TYPE$/;"	n	file:
INPUT_TYPE	./src/c++/lib/applications/strelka/strelka_run.cpp	/^namespace INPUT_TYPE$/;"	n	file:
INPUT_TYPE	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_run.cpp	/^namespace INPUT_TYPE$/;"	n	file:
INSERT	./src/c++/lib/alignment/Alignment.hh	/^        INSERT,$/;"	e	enum:AlignState::index_t
INSERT	./src/c++/lib/blt_util/align_path.hh	/^    INSERT,$/;"	e	enum:ALIGNPATH::align_t
INSERT	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    INSERT,$/;"	e	enum:IndelErrorRateType::index_t
INSERT	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    INSERT,$/;"	e	enum:INDEL_TYPE::index_t
INSERT	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^        INSERT,$/;"	e	enum:ActiveRegionReadBuffer::VariantType
INSERT	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    INSERT,$/;"	e	enum:SimplifiedIndelReportType::index_t
INSERT	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^        INSERT,$/;"	e	enum:__anon10::ref_map_type::map_t	file:
INSERT_1	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    INSERT_1,$/;"	e	enum:INDEL_SIGNAL_TYPE::index_t
INSERT_2	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    INSERT_2,$/;"	e	enum:INDEL_SIGNAL_TYPE::index_t
INSERT_GE3	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    INSERT_GE3,$/;"	e	enum:INDEL_SIGNAL_TYPE::index_t
I_AvgBaseQ	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        I_AvgBaseQ,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
I_BaseQRankSum	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        I_BaseQRankSum,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
I_BaseQRankSum	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        I_BaseQRankSum,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
I_RawBaseQ	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        I_RawBaseQ,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
I_RawPos	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        I_RawPos,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
IlluminaException	./src/c++/lib/common/Exceptions.hh	/^    IlluminaException(const IlluminaException& e) : std::exception(e), ExceptionData(e) {}$/;"	f	class:illumina::common::IlluminaException
IlluminaException	./src/c++/lib/common/Exceptions.hh	/^    IlluminaException(int errorNumber, const std::string& message) : ExceptionData(errorNumber, message) {}$/;"	f	class:illumina::common::IlluminaException
IlluminaException	./src/c++/lib/common/Exceptions.hh	/^class IlluminaException : public std::exception, public ExceptionData$/;"	c	namespace:illumina::common
IndelBCNoise	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    IndelBCNoise,$/;"	e	enum:SOMATIC_VARIANT_VCF_FILTERS::index_t
IndelBackgroundObservation	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^struct IndelBackgroundObservation$/;"	s
IndelBackgroundObservationData	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^struct IndelBackgroundObservationData$/;"	s
IndelBuffer	./src/c++/lib/starling_common/IndelBuffer.hh	/^    IndelBuffer($/;"	f	struct:IndelBuffer
IndelBuffer	./src/c++/lib/starling_common/IndelBuffer.hh	/^struct IndelBuffer$/;"	s
IndelBufferPtr	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^typedef std::unique_ptr<IndelBuffer> IndelBufferPtr;$/;"	t	file:
IndelBufferSampleData	./src/c++/lib/starling_common/IndelBuffer.hh	/^        IndelBufferSampleData($/;"	f	struct:IndelBuffer::IndelBufferSampleData
IndelBufferSampleData	./src/c++/lib/starling_common/IndelBuffer.hh	/^    struct IndelBufferSampleData$/;"	s	struct:IndelBuffer
IndelCategory	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        IndelCategory,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
IndelConflict	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    IndelConflict,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
IndelData	./src/c++/lib/starling_common/IndelData.hh	/^    IndelData($/;"	f	struct:IndelData
IndelData	./src/c++/lib/starling_common/IndelData.hh	/^struct IndelData$/;"	s
IndelDepthSupportTotal	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    IndelDepthSupportTotal($/;"	f	struct:IndelDepthSupportTotal
IndelDepthSupportTotal	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^struct IndelDepthSupportTotal$/;"	s
IndelErrorContext	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    IndelErrorContext($/;"	f	struct:IndelErrorContext
IndelErrorContext	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^struct IndelErrorContext$/;"	s
IndelErrorContextObservation	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    IndelErrorContextObservation()$/;"	f	struct:IndelErrorContextObservation
IndelErrorContextObservation	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^struct IndelErrorContextObservation$/;"	s
IndelErrorContextObservationData	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^struct IndelErrorContextObservationData$/;"	s
IndelErrorCounts	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^struct IndelErrorCounts$/;"	s
IndelErrorData	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^struct IndelErrorData$/;"	s
IndelErrorModel	./src/c++/lib/calibration/IndelErrorModel.cpp	/^IndelErrorModel($/;"	f	class:IndelErrorModel
IndelErrorModel	./src/c++/lib/calibration/IndelErrorModel.hh	/^struct IndelErrorModel$/;"	s
IndelErrorModelJson	./src/c++/lib/calibration/IndelErrorModelJson.cpp	/^IndelErrorModelJson(const std::string& sampleName)$/;"	f	class:IndelErrorModelJson
IndelErrorModelJson	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^class IndelErrorModelJson$/;"	c
IndelErrorModelMetadata	./src/c++/lib/calibration/IndelErrorModelMetadata.hh	/^    IndelErrorModelMetadata() {}$/;"	f	struct:IndelErrorModelMetadata
IndelErrorModelMetadata	./src/c++/lib/calibration/IndelErrorModelMetadata.hh	/^struct IndelErrorModelMetadata$/;"	s
IndelErrorRateSet	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^struct IndelErrorRateSet$/;"	s
IndelErrorRateType	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^namespace IndelErrorRateType$/;"	n
IndelErrorRates	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    struct IndelErrorRates$/;"	s	struct:IndelErrorRateSet
IndelErrorRates	./src/c++/lib/starling_common/IndelData.hh	/^struct IndelErrorRates$/;"	s
IndelGenotype	./src/c++/lib/blt_util/RecordTracker.hh	/^    IndelGenotype($/;"	f	struct:IndelGenotype
IndelGenotype	./src/c++/lib/blt_util/RecordTracker.hh	/^struct IndelGenotype$/;"	s
IndelGenotypeSort	./src/c++/lib/blt_util/RecordTracker.hh	/^struct IndelGenotypeSort$/;"	s
IndelKey	./src/c++/lib/starling_common/IndelKey.hh	/^    IndelKey($/;"	f	struct:IndelKey
IndelKey	./src/c++/lib/starling_common/IndelKey.hh	/^struct IndelKey$/;"	s
IndelModelBinomialMixture	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^class IndelModelBinomialMixture$/;"	c
IndelModelProduction	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^IndelModelProduction($/;"	f	class:IndelModelProduction
IndelModelProduction	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^class IndelModelProduction$/;"	c
IndelMotifBinomialMixture	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^class IndelMotifBinomialMixture$/;"	c
IndelObservation	./src/c++/lib/starling_common/indel.hh	/^struct IndelObservation$/;"	s
IndelObservationData	./src/c++/lib/starling_common/IndelData.hh	/^struct IndelObservationData$/;"	s
IndelRepeatCount	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        IndelRepeatCount,$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
IndelSampleData	./src/c++/lib/starling_common/IndelData.hh	/^struct IndelSampleData$/;"	s
IndelWeight	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    static const int IndelWeight = 4;$/;"	m	class:ActiveRegionReadBuffer
InterruptedHomopolymerLength	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        InterruptedHomopolymerLength,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
InterruptedHomopolymerLength	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        InterruptedHomopolymerLength,$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
InvalidOptionException	./src/c++/lib/common/Exceptions.cpp	/^InvalidOptionException::InvalidOptionException(const std::string& message)$/;"	f	class:illumina::common::InvalidOptionException
InvalidOptionException	./src/c++/lib/common/Exceptions.hh	/^class InvalidOptionException: public std::logic_error, public ExceptionData$/;"	c	namespace:illumina::common
InvalidParameterException	./src/c++/lib/common/Exceptions.cpp	/^InvalidParameterException::InvalidParameterException(const std::string& message)$/;"	f	class:illumina::common::InvalidParameterException
InvalidParameterException	./src/c++/lib/common/Exceptions.hh	/^class InvalidParameterException: public std::logic_error, public ExceptionData$/;"	c	namespace:illumina::common
IoException	./src/c++/lib/common/Exceptions.cpp	/^IoException::IoException(int errorNumber, const std::string& message)$/;"	f	class:illumina::common::IoException
IoException	./src/c++/lib/common/Exceptions.hh	/^class IoException: public std::ios_base::failure, public ExceptionData$/;"	c	namespace:illumina::common
IterativeAssemblerOptions	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^struct IterativeAssemblerOptions$/;"	s
JUMP	./src/c++/lib/alignment/Alignment.hh	/^        JUMP, \/\/ allows for an arbitrarily large hop between two reference regions$/;"	e	enum:AlignState::index_t
JUMPINS	./src/c++/lib/alignment/Alignment.hh	/^        JUMPINS = SPLICE, \/\/ analogous to jump state, but for very large insertions, reuse SPLICE state, in current applications we don't need both states in the same model.$/;"	e	enum:AlignState::index_t
KNOWN_VARIANTS	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsRun.cpp	/^    KNOWN_VARIANTS,$/;"	e	enum:INPUT_TYPE::index_t	file:
LENGTH	./src/c++/lib/blt_util/align_path.hh	/^    LENGTH$/;"	e	enum:ALIGNPATH::ALIGN_ISSUE::issue_t
LESS	./src/c++/lib/blt_util/fisher_exact_test.hh	/^    LESS      = 1,$/;"	m	class:FISHER_EXACT
LN_DELETE_ERROR_RATE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    LN_DELETE_ERROR_RATE,$/;"	e	enum:__anon18::MIN_PARAMS3::index_t	file:
LN_DELETE_ERROR_RATE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    LN_DELETE_ERROR_RATE,$/;"	e	enum:__anon22::MIN_PARAMS::index_t	file:
LN_DELETE_ERROR_RATE	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    LN_DELETE_ERROR_RATE,$/;"	e	enum:MIN_PARAMS3::index_t	file:
LN_INDEL_ERROR_CONCENTRATION	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    LN_INDEL_ERROR_CONCENTRATION,$/;"	e	enum:__anon20::MIN_PARAMS4::index_t	file:
LN_INDEL_ERROR_MEAN	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    LN_INDEL_ERROR_MEAN,$/;"	e	enum:__anon20::MIN_PARAMS4::index_t	file:
LN_INDEL_ERROR_RATE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    LN_INDEL_ERROR_RATE,$/;"	e	enum:__anon26::MIN_PARAMS3::index_t	file:
LN_INDEL_ERROR_RATE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    LN_INDEL_ERROR_RATE,$/;"	e	enum:__anon21::MIN_PARAMS::index_t	file:
LN_INSERT_ERROR_RATE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    LN_INSERT_ERROR_RATE,$/;"	e	enum:__anon18::MIN_PARAMS3::index_t	file:
LN_INSERT_ERROR_RATE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    LN_INSERT_ERROR_RATE,$/;"	e	enum:__anon22::MIN_PARAMS::index_t	file:
LN_INSERT_ERROR_RATE	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    LN_INSERT_ERROR_RATE,$/;"	e	enum:MIN_PARAMS3::index_t	file:
LN_NOISY_LOCUS_RATE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    LN_NOISY_LOCUS_RATE,$/;"	e	enum:__anon18::MIN_PARAMS3::index_t	file:
LN_NOISY_LOCUS_RATE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    LN_NOISY_LOCUS_RATE,$/;"	e	enum:__anon26::MIN_PARAMS3::index_t	file:
LN_NOISY_LOCUS_RATE	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    LN_NOISY_LOCUS_RATE,$/;"	e	enum:MIN_PARAMS3::index_t	file:
LN_THETA	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    LN_THETA,$/;"	e	enum:__anon20::MIN_PARAMS4::index_t	file:
LN_THETA	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    LN_THETA,$/;"	e	enum:__anon18::MIN_PARAMS3::index_t	file:
LN_THETA	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    LN_THETA,$/;"	e	enum:__anon26::MIN_PARAMS3::index_t	file:
LN_THETA	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    LN_THETA,$/;"	e	enum:__anon22::MIN_PARAMS::index_t	file:
LN_THETA	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    LN_THETA,$/;"	e	enum:__anon21::MIN_PARAMS::index_t	file:
LN_THETA	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    LN_THETA,$/;"	e	enum:MIN_PARAMS3::index_t	file:
LOG_LEVEL	./src/c++/lib/blt_common/blt_shared.hh	/^namespace LOG_LEVEL$/;"	n
LinearScaler	./src/c++/lib/blt_util/LinearScaler.hh	/^    LinearScaler($/;"	f	struct:LinearScaler
LinearScaler	./src/c++/lib/blt_util/LinearScaler.hh	/^    LinearScaler() :$/;"	f	struct:LinearScaler
LinearScaler	./src/c++/lib/blt_util/LinearScaler.hh	/^struct LinearScaler$/;"	s
LocusBuffer	./src/c++/lib/applications/starling/VariantPhaser.hh	/^typedef std::vector<std::unique_ptr<LocusInfo>> LocusBuffer;$/;"	t
LocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    LocusInfo($/;"	f	struct:LocusInfo
LocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct LocusInfo : public PolymorphicObject$/;"	s
LocusSampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^struct LocusSampleInfo$/;"	s
LocusSupportingReadStats	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^struct LocusSupportingReadStats$/;"	s
LogValuePair	./src/c++/lib/blt_util/LogValuePair.hh	/^struct LogValuePair$/;"	s
LogicException	./src/c++/lib/common/Exceptions.hh	/^    LogicException(const std::string& message) :$/;"	f	struct:illumina::common::LogicException
LogicException	./src/c++/lib/common/Exceptions.hh	/^struct LogicException: public std::logic_error, public ExceptionData$/;"	s	namespace:illumina::common
LowDepth	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    LowDepth,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
LowDepth	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    LowDepth,$/;"	e	enum:SOMATIC_VARIANT_VCF_FILTERS::index_t
LowEVSindel	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    LowEVSindel,$/;"	e	enum:SOMATIC_VARIANT_VCF_FILTERS::index_t
LowEVSsnv	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    LowEVSsnv,$/;"	e	enum:SOMATIC_VARIANT_VCF_FILTERS::index_t
LowGQX	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    LowGQX,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
MAPLEVEL	./src/c++/lib/blt_common/map_level.hh	/^namespace MAPLEVEL$/;"	n
MATCH	./src/c++/lib/alignment/Alignment.hh	/^        MATCH,$/;"	e	enum:AlignState::index_t
MATCH	./src/c++/lib/blt_util/align_path.hh	/^    MATCH,$/;"	e	enum:ALIGNPATH::align_t
MATCH	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^        MATCH,$/;"	e	enum:ActiveRegionReadBuffer::VariantType
MATCH	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^        MATCH,$/;"	e	enum:__anon10::ref_map_type::map_t	file:
MATE_STRAND	./src/c++/lib/htsapi/bam_util.hh	/^    MATE_STRAND   = 0x020,$/;"	e	enum:BAM_FLAG::index_t
MATE_UNMAPPED	./src/c++/lib/htsapi/bam_util.hh	/^    MATE_UNMAPPED = 0x008,$/;"	e	enum:BAM_FLAG::index_t
MAX_INDEX	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^    enum contanst { MAX_QSCORE = 64, MAX_INDEX = 12 };$/;"	e	enum:het_ratio_cache::contanst
MAX_MAP	./src/c++/lib/blt_util/qscore_cache.hh	/^           MAX_MAP = 90$/;"	e	enum:qphred_cache::__anon3
MAX_QSCORE	./src/c++/lib/blt_common/adjust_joint_eprob.hh	/^    enum { MAX_QSCORE = 64 };$/;"	e	enum:dependent_prob_cache::__anon31
MAX_QSCORE	./src/c++/lib/blt_util/qscore_cache.hh	/^    enum { MAX_QSCORE = 70,$/;"	e	enum:qphred_cache::__anon3
MAX_QSCORE	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^    enum contanst { MAX_QSCORE = 64, MAX_INDEX = 12 };$/;"	e	enum:het_ratio_cache::contanst
MAX_QVAL	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^    enum { MAX_QVAL=70 };$/;"	e	enum:qval_distro::__anon13	file:
MAX_QVAL	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^    enum { MAX_QVAL=70 };$/;"	e	enum:qval_distro::__anon16	file:
MAX_WORD_COUNT	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    enum { MAX_WORD_COUNT = 50 };$/;"	e	enum:istream_line_splitter::__anon5
MIN_PARAMS	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^namespace MIN_PARAMS$/;"	n	namespace:__anon22	file:
MIN_PARAMS	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^namespace MIN_PARAMS$/;"	n	namespace:__anon21	file:
MIN_PARAMS3	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^namespace MIN_PARAMS3$/;"	n	namespace:__anon18	file:
MIN_PARAMS3	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^namespace MIN_PARAMS3$/;"	n	namespace:__anon26	file:
MIN_PARAMS3	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^namespace MIN_PARAMS3$/;"	n	file:
MIN_PARAMS4	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^namespace MIN_PARAMS4$/;"	n	namespace:__anon20	file:
MIN_RANGES	./src/c++/lib/applications/starling/starling_run.cpp	261;"	d	file:
MISMATCH	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^        MISMATCH,$/;"	e	enum:ActiveRegionReadBuffer::VariantType
MISMATCH_INSERT	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^        MISMATCH_INSERT$/;"	e	enum:ActiveRegionReadBuffer::VariantType
MODELTYPE	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^    MODELTYPE,$/;"	e	enum:SMODEL_ENTRY_TYPE::index_t	file:
MODEL_TYPE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^namespace MODEL_TYPE$/;"	n
MODIFIED_SITE_GT	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^namespace MODIFIED_SITE_GT$/;"	n
MONOGT	./src/c++/lib/blt_util/monogt.hh	/^namespace MONOGT$/;"	n
MQRankSum	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    double MQRankSum = 0;       \/\/ Uses Mann-Whitney Rank Sum Test for MQs (ref bases vs alternate alleles)$/;"	m	struct:GermlineSiteSampleInfo
MRSOptions	./src/c++/lib/applications/MergeRunStats/MRSOptions.hh	/^struct MRSOptions$/;"	s
MSECOptions	./src/c++/lib/applications/MergeSequenceErrorCounts/MSECOptions.hh	/^struct MSECOptions$/;"	s
M_	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    double M_;$/;"	m	struct:depth_stream_stat
M_	./src/c++/lib/blt_util/stream_stat.hh	/^    double M_;$/;"	m	struct:stream_stat
MapqTracker	./src/c++/lib/blt_common/MapqTracker.hh	/^struct MapqTracker$/;"	s
MaxAssemblyPadding	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    static const pos_t MaxAssemblyPadding = (pos_t)9u;$/;"	m	class:ActiveRegionReadBuffer
MaxAssemblyWordSize	./src/c++/lib/starling_common/ActiveRegion.hh	/^    const unsigned MaxAssemblyWordSize = 76u;$/;"	m	class:ActiveRegion
MaxBufferSize	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    static const unsigned MaxBufferSize = 1000u;$/;"	m	class:ActiveRegionReadBuffer
MaxDepth	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    static const unsigned MaxDepth = 1000u;$/;"	m	class:ActiveRegionReadBuffer
MaxDistanceBetweenTwoVariants	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    static const unsigned MaxDistanceBetweenTwoVariants = 13u;$/;"	m	class:ActiveRegionDetector
MaxRefSpanToBypassAssembly	./src/c++/lib/starling_common/ActiveRegion.hh	/^    static const unsigned MaxRefSpanToBypassAssembly = 250u;$/;"	m	class:ActiveRegion
MaxRepeatUnitLength	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    static const unsigned MaxRepeatUnitLength = 50u;$/;"	m	class:ActiveRegionReadBuffer
MeanDepthTracker	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^struct MeanDepthTracker$/;"	s	file:
MeanTracker	./src/c++/lib/blt_util/MeanTracker.hh	/^struct MeanTracker$/;"	s
MedianDepthTracker	./src/c++/lib/blt_util/MedianDepthTracker.hh	/^struct MedianDepthTracker$/;"	s
MergeRunStats	./src/c++/lib/applications/MergeRunStats/MergeRunStats.hh	/^struct MergeRunStats : public illumina::Program$/;"	s
MergeSequenceErrorCounts	./src/c++/lib/applications/MergeSequenceErrorCounts/MergeSequenceErrorCounts.hh	/^struct MergeSequenceErrorCounts : public illumina::Program$/;"	s
MinAlternativeAlleleFraction	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    const float MinAlternativeAlleleFraction = 0.2;$/;"	m	class:ActiveRegionReadBuffer
MinAlternativeAlleleFractionLowDepth	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    const float MinAlternativeAlleleFractionLowDepth = 0.35;$/;"	m	class:ActiveRegionReadBuffer
MinAssemblyCoverage	./src/c++/lib/starling_common/ActiveRegion.hh	/^    const unsigned MinAssemblyCoverage = 3u;$/;"	m	class:ActiveRegion
MinFracReadsCoveringRegion	./src/c++/lib/starling_common/ActiveRegion.hh	/^    float MinFracReadsCoveringRegion = 0.65f;$/;"	m	class:ActiveRegion
MinHaplotypeCount	./src/c++/lib/starling_common/ActiveRegion.hh	/^    static const unsigned MinHaplotypeCount = 3u;$/;"	m	class:ActiveRegion
MinNumReadsToBypassAssembly	./src/c++/lib/starling_common/ActiveRegion.hh	/^    static const unsigned MinNumReadsToBypassAssembly = 1000u;$/;"	m	class:ActiveRegion
MinNumVariantsPerPosition	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    static const unsigned MinNumVariantsPerPosition = 9u;$/;"	m	class:ActiveRegionReadBuffer
MinNumVariantsPerRegion	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    static const unsigned MinNumVariantsPerRegion = 2u;$/;"	m	class:ActiveRegionDetector
MinRepeatSpan	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    static const unsigned MinRepeatSpan = (pos_t)3u;$/;"	m	class:ActiveRegionReadBuffer
MismatchWeight	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    static const int MismatchWeight = 1;$/;"	m	class:ActiveRegionReadBuffer
ModelType	./src/c++/lib/calibration/VariantScoringModelMetadata.hh	/^    std::string ModelType;$/;"	m	struct:VariantScoringModelMetadata
NAME	./src/c++/lib/calibration/IndelErrorModelMetadata.cpp	/^    NAME,$/;"	e	enum:IMODEL_ENTRY_TYPE::index_t	file:
NAME	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^    NAME,$/;"	e	enum:SMODEL_ENTRY_TYPE::index_t	file:
NOCOMPRESS_REGION	./src/c++/lib/applications/starling/starling_run.cpp	/^    NOCOMPRESS_REGION,$/;"	e	enum:INPUT_TYPE::index_t	file:
NOINDEL	./src/c++/lib/starling_common/starling_diploid_indel.hh	/^    NOINDEL,$/;"	e	enum:STAR_DIINDEL::index_t
NOISE_VARIANTS	./src/c++/lib/applications/strelka/strelka_run.cpp	/^    NOISE_VARIANTS,$/;"	e	enum:INPUT_TYPE::index_t	file:
NOISYLOCUS	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    NOISYLOCUS,$/;"	e	enum:IndelErrorRateType::index_t
NONE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^    NONE = SIZE$/;"	e	enum:MODEL_TYPE::index_t
NONE	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^    NONE,$/;"	e	enum:VARQUEUE::index_t	file:
NONE	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    NONE,$/;"	e	enum:MODIFIED_SITE_GT::index_t
NONE	./src/c++/lib/blt_util/align_path.hh	/^    NONE,$/;"	e	enum:ALIGNPATH::ALIGN_ISSUE::issue_t
NONE	./src/c++/lib/blt_util/align_path.hh	/^    NONE,$/;"	e	enum:ALIGNPATH::align_t
NONE	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    NONE,$/;"	e	enum:HTS_TYPE::index_t
NONE	./src/c++/lib/starling_common/indel_core.hh	/^    NONE,$/;"	e	enum:INDEL::index_t
NONE	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^        NONE,$/;"	e	enum:__anon10::ref_map_type::map_t	file:
NONE	./src/c++/lib/starling_common/starling_read_filter_shared.hh	/^    NONE$/;"	e	enum:READ_FILTER_TYPE::index_t
NONREF	./src/c++/lib/blt_common/position_nonref_test.hh	/^    NONREF,$/;"	e	enum:NRTEST::index_t
NONREF_MF	./src/c++/lib/blt_common/position_nonref_2allele_test.hh	/^    NONREF_MF,       \/\/ reference allele mixed with single signal allele$/;"	e	enum:NR2TEST::index_t
NONREF_MF_NOISE	./src/c++/lib/blt_common/position_nonref_2allele_test.hh	/^    NONREF_MF_NOISE, \/\/ reference allele mixed with site specific error$/;"	e	enum:NR2TEST::index_t
NONREF_OTHER	./src/c++/lib/blt_common/position_nonref_2allele_test.hh	/^    NONREF_OTHER,    \/\/ reference allele mixed with non-signal allele (lhood is approximated to 0 for this state)$/;"	e	enum:NR2TEST::index_t
NONVARIANT_INDEL	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^    NONVARIANT_INDEL,$/;"	e	enum:VARQUEUE::index_t	file:
NON_SOMATIC	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^    NON_SOMATIC,$/;"	e	enum:SOMATIC_STATE::index_t
NORMAL	./src/c++/lib/applications/strelka/StrelkaSampleSetSummary.hh	/^enum index_t { NORMAL, TUMOR, SIZE };$/;"	e	enum:STRELKA_SAMPLE_TYPE::index_t
NR2TEST	./src/c++/lib/blt_common/position_nonref_2allele_test.hh	/^namespace NR2TEST$/;"	n
NRTEST	./src/c++/lib/blt_common/position_nonref_test.hh	/^namespace NRTEST$/;"	n
NTYPE	./src/c++/lib/applications/strelka/somatic_call_shared.hh	/^namespace NTYPE$/;"	n
N_AF	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        N_AF,$/;"	e	enum:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
N_BASE	./src/c++/lib/blt_util/seq_util.hh	/^enum { N_BASE=4 };$/;"	e	enum:__anon4
N_BCN	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        N_BCN,$/;"	e	enum:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
N_OF	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        N_OF,$/;"	e	enum:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
NoiseBuffer	./src/c++/lib/applications/strelka/NoiseBuffer.hh	/^struct NoiseBuffer$/;"	s
NormalSampleFilteredDepthFraction	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        NormalSampleFilteredDepthFraction,$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
NormalSampleRelativeTotalLocusDepth	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        NormalSampleRelativeTotalLocusDepth,$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
NormalSampleSpanningDeletionFraction	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        NormalSampleSpanningDeletionFraction,$/;"	e	enum:SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
NormalizedAltHaplotypeCountRatio	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        NormalizedAltHaplotypeCountRatio,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
NormalizedAltHaplotypeCountRatio	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        NormalizedAltHaplotypeCountRatio,$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
ONE	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    ONE$/;"	e	enum:MODIFIED_SITE_GT::index_t
OTHER	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    OTHER$/;"	e	enum:IndelErrorRateType::index_t
OTHER	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    OTHER$/;"	e	enum:SimplifiedIndelReportType::index_t
OrderData	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        OrderData($/;"	f	struct:HtsMergeStreamer::OrderData
OrderData	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    struct OrderData$/;"	s	struct:HtsMergeStreamer
OrthogonalAlleleSetLocusReportInfo	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^struct OrthogonalAlleleSetLocusReportInfo$/;"	s
OrthogonalAlleleSetLocusReportInfoAlleleDetails	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^struct OrthogonalAlleleSetLocusReportInfoAlleleDetails$/;"	s
OrthogonalVariantAlleleCandidateGroup	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.hh	/^struct OrthogonalVariantAlleleCandidateGroup$/;"	s
OutStream	./src/c++/lib/common/OutStream.cpp	/^OutStream(const std::string& fileName) :$/;"	f	class:OutStream
OutStream	./src/c++/lib/common/OutStream.hh	/^struct OutStream$/;"	s
PAD	./src/c++/lib/blt_util/align_path.hh	/^    PAD,$/;"	e	enum:ALIGNPATH::align_t
PAIRED	./src/c++/lib/htsapi/bam_util.hh	/^    PAIRED        = 0x001,$/;"	e	enum:BAM_FLAG::index_t
PLOIDY_REGION	./src/c++/lib/applications/starling/starling_run.cpp	/^    PLOIDY_REGION,$/;"	e	enum:INPUT_TYPE::index_t	file:
POS	./src/c++/lib/htsapi/vcf_util.hh	/^    POS,$/;"	e	enum:VCFID::index_t
POST_ALIGN	./src/c++/lib/starling_common/starling_pos_processor_base_stages.hh	/^    POST_ALIGN,$/;"	e	enum:STAGE::index_t
POST_CALL	./src/c++/lib/starling_common/starling_pos_processor_base_stages.hh	/^    POST_CALL,$/;"	e	enum:STAGE::index_t
PRESTRAND_SIZE	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^                 PRESTRAND_SIZE = HOM_SIZE+HET_COUNT,$/;"	e	enum:DIGT_GRID::constants
PRESTRAND_SIZE	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum constants { PRESTRAND_SIZE = DIGT_GRID::PRESTRAND_SIZE*DIGT_GRID::PRESTRAND_SIZE };$/;"	e	enum:DDIGT_GRID::constants
PRIMARY	./src/c++/lib/starling_common/starling_read_filter_shared.hh	/^    PRIMARY,$/;"	e	enum:READ_FILTER_TYPE::index_t
PROPER_PAIR	./src/c++/lib/htsapi/bam_util.hh	/^    PROPER_PAIR   = 0x002,$/;"	e	enum:BAM_FLAG::index_t
PhasingConflict	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    PhasingConflict,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
PileupCleaner	./src/c++/lib/starling_common/PileupCleaner.hh	/^    PileupCleaner($/;"	f	struct:PileupCleaner
PileupCleaner	./src/c++/lib/starling_common/PileupCleaner.hh	/^struct PileupCleaner$/;"	s
PloidyConflict	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    PloidyConflict,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
PolymorphicObject	./src/c++/lib/blt_util/PolymorphicObject.hh	/^struct PolymorphicObject$/;"	s
PosData	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^        PosData(const reference_contig_segment& ref_init) : ref(ref_init) {}$/;"	f	struct:pos_basecall_buffer::PosData
PosData	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    struct PosData : public pdata_t$/;"	s	struct:pos_basecall_buffer
PosRangeEndSort	./src/c++/lib/blt_util/RegionTracker.hh	/^struct PosRangeEndSort$/;"	s
PostConditionException	./src/c++/lib/common/Exceptions.cpp	/^PostConditionException::PostConditionException(const std::string& message)$/;"	f	class:illumina::common::PostConditionException
PostConditionException	./src/c++/lib/common/Exceptions.hh	/^class PostConditionException: public std::logic_error, public ExceptionData$/;"	c	namespace:illumina::common
PreConditionException	./src/c++/lib/common/Exceptions.cpp	/^PreConditionException::PreConditionException(const std::string& message)$/;"	f	class:illumina::common::PreConditionException
PreConditionException	./src/c++/lib/common/Exceptions.hh	/^class PreConditionException: public std::logic_error, public ExceptionData$/;"	c	namespace:illumina::common
PrettyFloat	./src/c++/lib/blt_util/PrettyFloat.hh	/^    PrettyFloat($/;"	f	struct:PrettyFloat
PrettyFloat	./src/c++/lib/blt_util/PrettyFloat.hh	/^struct PrettyFloat$/;"	s
Program	./src/c++/lib/common/Program.hh	/^struct Program$/;"	s	namespace:illumina
PtrVal	./src/c++/lib/alignment/GlobalAligner.hh	/^    struct PtrVal$/;"	s	struct:GlobalAligner
QSI_ref	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    QSI_ref,$/;"	e	enum:SOMATIC_VARIANT_VCF_FILTERS::index_t
QSS_ref	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    QSS_ref,$/;"	e	enum:SOMATIC_VARIANT_VCF_FILTERS::index_t
QUAL	./src/c++/lib/htsapi/vcf_util.hh	/^    QUAL,$/;"	e	enum:VCFID::index_t
QUAL_NORM	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        QUAL_NORM,$/;"	e	enum:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
QUAL_NORM	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        QUAL_NORM,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
QUAL_NORM	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        QUAL_NORM,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
QUAL_NORM	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        QUAL_NORM,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
QUAL_SHIFT	./src/c++/lib/blt_common/hapscore.hh	/^           QUAL_SHIFT = 2$/;"	e	enum:hap_cand::__anon29
Q_	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    double Q_;$/;"	m	struct:depth_stream_stat
Q_	./src/c++/lib/blt_util/stream_stat.hh	/^    double Q_;$/;"	m	struct:stream_stat
RANGE_MSG_OFS	./src/c++/lib/applications/starling/starling_run.cpp	260;"	d	file:
RATIO_INCREMENT	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^const blt_float_t RATIO_INCREMENT = 0.5f\/static_cast<blt_float_t>(DIGT_GRID::HET_RES+1);$/;"	m	namespace:DIGT_GRID
READ_BUFFER	./src/c++/lib/starling_common/starling_pos_processor_base_stages.hh	/^    READ_BUFFER,$/;"	e	enum:STAGE::index_t
READ_FILTER_TYPE	./src/c++/lib/starling_common/starling_read_filter_shared.hh	/^namespace READ_FILTER_TYPE$/;"	n
REF	./src/c++/lib/applications/strelka/somatic_call_shared.hh	/^enum index_t { REF,$/;"	e	enum:NTYPE::index_t
REF	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^    REF,$/;"	e	enum:SOMATIC_DIGT::index_t
REF	./src/c++/lib/blt_common/position_nonref_2allele_test.hh	/^    REF,             \/\/ reference allele only$/;"	e	enum:NR2TEST::index_t
REF	./src/c++/lib/blt_common/position_nonref_test.hh	/^    REF,$/;"	e	enum:NRTEST::index_t
REF	./src/c++/lib/htsapi/bam_seq.hh	/^    REF = 0x0,$/;"	e	enum:BAM_BASE::index_t
REF	./src/c++/lib/htsapi/vcf_util.hh	/^    REF,$/;"	e	enum:VCFID::index_t
REPEATED_SEGMENT	./src/c++/lib/blt_util/align_path.hh	/^    REPEATED_SEGMENT,$/;"	e	enum:ALIGNPATH::ALIGN_ISSUE::issue_t
RMSMappingQuality	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        RMSMappingQuality,$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
RNA	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^    RNA,$/;"	e	enum:SCORING_CALL_TYPE::index_t
RNA_INDEL_SCORING_DEVELOPMENT_FEATURES	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^struct RNA_INDEL_SCORING_DEVELOPMENT_FEATURES : public FeatureSet$/;"	s
RNA_INDEL_SCORING_FEATURES	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^struct RNA_INDEL_SCORING_FEATURES : public FeatureSet$/;"	s
RNA_SNV_SCORING_DEVELOPMENT_FEATURES	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^struct RNA_SNV_SCORING_DEVELOPMENT_FEATURES : public FeatureSet$/;"	s
RNA_SNV_SCORING_FEATURES	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^struct RNA_SNV_SCORING_FEATURES : public FeatureSet$/;"	s
R_OK	./src/c++/lib/blt_util/compat_unistd.h	20;"	d
RandomForestModel	./src/c++/lib/calibration/RandomForestModel.hh	/^    RandomForestModel() {}$/;"	f	struct:RandomForestModel
RandomForestModel	./src/c++/lib/calibration/RandomForestModel.hh	/^struct RandomForestModel : public VariantScoringModelBase$/;"	s
RangeMap	./src/c++/lib/blt_util/RangeMap.hh	/^    RangeMap(const unsigned minChunk = defaultMinChunk) :$/;"	f	struct:RangeMap
RangeMap	./src/c++/lib/blt_util/RangeMap.hh	/^struct RangeMap$/;"	s
ReadPathScores	./src/c++/lib/starling_common/IndelData.hh	/^    ReadPathScores($/;"	f	struct:ReadPathScores
ReadPathScores	./src/c++/lib/starling_common/IndelData.hh	/^struct ReadPathScores$/;"	s
ReadPosRankSum	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    double ReadPosRankSum = 0;  \/\/ Uses Mann-Whitney Rank Sum Test for the distance from the end of the read containing an alternate allele.$/;"	m	struct:GermlineSiteSampleInfo
ReadPositionInfo	./src/c++/lib/blt_common/snp_pos_info.hh	/^    struct ReadPositionInfo$/;"	s	struct:snp_pos_info
RecordTracker	./src/c++/lib/blt_util/RecordTracker.hh	/^struct RecordTracker$/;"	s
RefRepeatCount	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        RefRepeatCount,$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
ReferenceRepeatFinder	./src/c++/lib/starling_common/ReferenceRepeatFinder.hh	/^    ReferenceRepeatFinder($/;"	f	class:ReferenceRepeatFinder
ReferenceRepeatFinder	./src/c++/lib/starling_common/ReferenceRepeatFinder.hh	/^class ReferenceRepeatFinder$/;"	c
ReferenceSTRContext	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^struct ReferenceSTRContext$/;"	s	file:
RegionPayloadTracker	./src/c++/lib/blt_util/RegionTracker.hh	/^struct RegionPayloadTracker$/;"	s
RegionProcessor	./src/c++/lib/blt_util/RegionProcessor.hh	/^    RegionProcessor($/;"	f	struct:RegionProcessor
RegionProcessor	./src/c++/lib/blt_util/RegionProcessor.hh	/^struct RegionProcessor$/;"	s
RegionTracker	./src/c++/lib/blt_util/RegionTracker.hh	/^struct RegionTracker$/;"	s
RelativeTotalLocusDepth	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        RelativeTotalLocusDepth,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
RelativeTotalLocusDepth	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        RelativeTotalLocusDepth,$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
RepeatUnitLength	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        RepeatUnitLength,$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
RunStats	./src/c++/lib/appstats/RunStats.hh	/^struct RunStats$/;"	s
RunStatsData	./src/c++/lib/appstats/RunStats.hh	/^struct RunStatsData$/;"	s
RunStatsManager	./src/c++/lib/appstats/RunStatsManager.cpp	/^RunStatsManager($/;"	f	class:RunStatsManager
RunStatsManager	./src/c++/lib/appstats/RunStatsManager.hh	/^struct RunStatsManager : private boost::noncopyable$/;"	s
SAMPLE	./src/c++/lib/htsapi/vcf_util.hh	/^    SAMPLE,$/;"	e	enum:VCFID::index_t
SCORING_CALL_TYPE	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^namespace SCORING_CALL_TYPE$/;"	n
SCORING_VARIANT_TYPE	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^namespace SCORING_VARIANT_TYPE$/;"	n
SECONDARY	./src/c++/lib/htsapi/bam_util.hh	/^    SECONDARY     = 0x100,$/;"	e	enum:BAM_FLAG::index_t
SECONDARY	./src/c++/lib/starling_common/starling_read_filter_shared.hh	/^    SECONDARY,$/;"	e	enum:READ_FILTER_TYPE::index_t
SECOND_READ	./src/c++/lib/htsapi/bam_util.hh	/^    SECOND_READ   = 0x080,$/;"	e	enum:BAM_FLAG::index_t
SEQ_MATCH	./src/c++/lib/blt_util/align_path.hh	/^    SEQ_MATCH,$/;"	e	enum:ALIGNPATH::align_t
SEQ_MISMATCH	./src/c++/lib/blt_util/align_path.hh	/^    SEQ_MISMATCH$/;"	e	enum:ALIGNPATH::align_t
SIM_GERMLINE	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    SIM_GERMLINE,$/;"	e	enum:sim_mode_t
SIM_GERMLINE	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    SIM_GERMLINE,$/;"	e	enum:sim_mode_t
SIM_NOISE	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    SIM_NOISE,$/;"	e	enum:sim_mode_t
SIM_NOISE	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    SIM_NOISE,$/;"	e	enum:sim_mode_t
SIM_RANDOM	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    SIM_RANDOM,$/;"	e	enum:sim_mode_t
SIM_RANDOM	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    SIM_RANDOM,$/;"	e	enum:sim_mode_t
SIM_REF	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    SIM_REF$/;"	e	enum:sim_mode_t
SIM_REF	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    SIM_REF$/;"	e	enum:sim_mode_t
SIM_SOMATIC	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    SIM_SOMATIC,$/;"	e	enum:sim_mode_t
SITE	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^    SITE$/;"	e	enum:VARQUEUE::index_t	file:
SIZE	./src/c++/lib/alignment/Alignment.hh	/^        SIZE$/;"	e	enum:AlignState::index_t
SIZE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^    SIZE,$/;"	e	enum:MODEL_TYPE::index_t
SIZE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    SIZE$/;"	e	enum:__anon20::MIN_PARAMS4::index_t	file:
SIZE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    SIZE$/;"	e	enum:__anon18::MIN_PARAMS3::index_t	file:
SIZE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    SIZE$/;"	e	enum:__anon26::MIN_PARAMS3::index_t	file:
SIZE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    SIZE$/;"	e	enum:__anon22::MIN_PARAMS::index_t	file:
SIZE	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    SIZE$/;"	e	enum:__anon21::MIN_PARAMS::index_t	file:
SIZE	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    SIZE$/;"	e	enum:MIN_PARAMS3::index_t	file:
SIZE	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
SIZE	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
SIZE	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SIZE	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
SIZE	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    SIZE$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
SIZE	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
SIZE	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:RNA_INDEL_SCORING_FEATURES::index_t
SIZE	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SIZE	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:RNA_SNV_SCORING_FEATURES::index_t
SIZE	./src/c++/lib/applications/strelka/StrelkaSampleSetSummary.hh	/^enum index_t { NORMAL, TUMOR, SIZE };$/;"	e	enum:STRELKA_SAMPLE_TYPE::index_t
SIZE	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
SIZE	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
SIZE	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SIZE	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        SIZE$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
SIZE	./src/c++/lib/applications/strelka/somatic_call_shared.hh	/^               SIZE$/;"	e	enum:NTYPE::index_t
SIZE	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^    SIZE$/;"	e	enum:SOMATIC_DIGT::index_t
SIZE	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^    SIZE$/;"	e	enum:SOMATIC_STATE::index_t
SIZE	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum index_t { SIZE = PRESTRAND_SIZE+DIGT_GRID::STRAND_STATE_SIZE };$/;"	e	enum:DDIGT_GRID::index_t
SIZE	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum index_t { SIZE = PRESTRAND_SIZE+STRAND_STATE_SIZE };$/;"	e	enum:DIGT_GRID::index_t
SIZE	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum index_t { SIZE = SOMATIC_DIGT::SIZE*SOMATIC_STATE::SIZE };$/;"	e	enum:DDIGT::index_t
SIZE	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    SIZE$/;"	e	enum:SOMATIC_VARIANT_VCF_FILTERS::index_t
SIZE	./src/c++/lib/blt_common/position_nonref_2allele_test.hh	/^    SIZE$/;"	e	enum:NR2TEST::index_t
SIZE	./src/c++/lib/blt_common/position_nonref_test.hh	/^    SIZE$/;"	e	enum:NRTEST::index_t
SIZE	./src/c++/lib/blt_util/RecordTracker.hh	/^    SIZE$/;"	e	enum:GENOTYPE_STATUS::genotype_t
SIZE	./src/c++/lib/blt_util/digt.hh	/^    SIZE$/;"	e	enum:DIGT::index_t
SIZE	./src/c++/lib/blt_util/monogt.hh	/^    SIZE$/;"	e	enum:MONOGT::index_t
SIZE	./src/c++/lib/blt_util/seq_util.hh	/^    SIZE$/;"	e	enum:BASE_ID::index_t
SIZE	./src/c++/lib/calibration/IndelErrorModelMetadata.cpp	/^    SIZE$/;"	e	enum:IMODEL_ENTRY_TYPE::index_t	file:
SIZE	./src/c++/lib/calibration/RandomForestModel.cpp	/^    SIZE$/;"	e	enum:DTREE_NODE_TYPE::index_t	file:
SIZE	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^    SIZE$/;"	e	enum:SMODEL_ENTRY_TYPE::index_t	file:
SIZE	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^    SIZE$/;"	e	enum:SCORING_CALL_TYPE::index_t
SIZE	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^    SIZE$/;"	e	enum:SCORING_VARIANT_TYPE::index_t
SIZE	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    SIZE$/;"	e	enum:INDEL_SIGNAL_TYPE::index_t
SIZE	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    SIZE$/;"	e	enum:INDEL_TYPE::index_t
SIZE	./src/c++/lib/htsapi/vcf_util.hh	/^    SIZE$/;"	e	enum:VCFID::index_t
SIZE	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    SIZE$/;"	e	enum:AG_GENOTYPE::index_t
SIZE	./src/c++/lib/starling_common/starling_diploid_indel.hh	/^    SIZE$/;"	e	enum:STAR_DIINDEL::index_t
SIZE	./src/c++/lib/starling_common/starling_pos_processor_base_stages.hh	/^    SIZE$/;"	e	enum:STAGE::index_t
SKIP	./src/c++/lib/blt_util/align_path.hh	/^    SKIP,$/;"	e	enum:ALIGNPATH::align_t
SMODEL_ENTRY_TYPE	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^namespace SMODEL_ENTRY_TYPE$/;"	n	file:
SNV	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^    SNV,$/;"	e	enum:MODEL_TYPE::index_t
SNV	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^    SNV,$/;"	e	enum:SCORING_VARIANT_TYPE::index_t
SOFT_CLIP	./src/c++/lib/blt_util/align_path.hh	/^    SOFT_CLIP,$/;"	e	enum:ALIGNPATH::align_t
SOFT_CLIP	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^        SOFT_CLIP,$/;"	e	enum:ActiveRegionReadBuffer::VariantType
SOFT_CLIP	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^        SOFT_CLIP,$/;"	e	enum:__anon10::ref_map_type::map_t	file:
SOMATIC	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^    SOMATIC,$/;"	e	enum:SOMATIC_STATE::index_t
SOMATIC	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^    SOMATIC,$/;"	e	enum:SCORING_CALL_TYPE::index_t
SOMATIC_DIGT	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^namespace SOMATIC_DIGT$/;"	n
SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^struct SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES : public FeatureSet$/;"	s
SOMATIC_INDEL_SCORING_FEATURES	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^struct SOMATIC_INDEL_SCORING_FEATURES : public FeatureSet$/;"	s
SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^struct SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES : public FeatureSet$/;"	s
SOMATIC_SNV_SCORING_FEATURES	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^struct SOMATIC_SNV_SCORING_FEATURES : public FeatureSet$/;"	s
SOMATIC_STATE	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^namespace SOMATIC_STATE$/;"	n
SOMATIC_VARIANT_VCF_FILTERS	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^namespace SOMATIC_VARIANT_VCF_FILTERS$/;"	n
SPLICE	./src/c++/lib/alignment/Alignment.hh	/^        SPLICE,$/;"	e	enum:AlignState::index_t
STAGE	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^namespace STAGE$/;"	n	file:
STAGE	./src/c++/lib/starling_common/starling_pos_processor_base_stages.hh	/^namespace STAGE$/;"	n
STAR_DIINDEL	./src/c++/lib/starling_common/starling_diploid_indel.hh	/^namespace STAR_DIINDEL$/;"	n
STDERR_FILENO	./src/c++/lib/blt_util/compat_unistd.h	41;"	d
STDIN_FILENO	./src/c++/lib/blt_util/compat_unistd.h	39;"	d
STDOUT_FILENO	./src/c++/lib/blt_util/compat_unistd.h	40;"	d
STRAND	./src/c++/lib/htsapi/bam_util.hh	/^    STRAND        = 0x010,$/;"	e	enum:BAM_FLAG::index_t
STRAND_STATE_SIZE	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^                 STRAND_STATE_SIZE = HET_RES$/;"	e	enum:DIGT_GRID::constants
STRELKA_MAX_READ_SIZE	./src/c++/lib/starling_common/starling_base_shared.hh	/^enum { STRELKA_MAX_READ_SIZE = 25000 };$/;"	e	enum:__anon11
STRELKA_SAMPLE_TYPE	./src/c++/lib/applications/strelka/StrelkaSampleSetSummary.hh	/^namespace STRELKA_SAMPLE_TYPE$/;"	n
STRRepeatCount	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^    unsigned STRRepeatCount = 1;$/;"	m	struct:ReferenceSTRContext	file:
SUB_MAPPED	./src/c++/lib/blt_common/map_level.hh	/^    SUB_MAPPED,   \/\/\/< Any mapped read which does not meet tier 1 or 2 criteria$/;"	e	enum:MAPLEVEL::index_t
SUPPLEMENT	./src/c++/lib/htsapi/bam_util.hh	/^    SUPPLEMENT    = 0x800$/;"	e	enum:BAM_FLAG::index_t
SUPPLEMENT	./src/c++/lib/starling_common/starling_read_filter_shared.hh	/^    SUPPLEMENT,$/;"	e	enum:READ_FILTER_TYPE::index_t
SWAP	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    SWAP,$/;"	e	enum:SimplifiedIndelReportType::index_t
SampleCandidateSnvMap	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^typedef RangeMap<pos_t,HaplotypeIdAndCountRatio, ClearHaplotypeIdForBase> SampleCandidateSnvMap;$/;"	t
SampleIndelAlleleBias	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleIndelAlleleBias,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
SampleIndelAlleleBias	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleIndelAlleleBias,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SampleIndelAlleleBias	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleIndelAlleleBias,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
SampleIndelAlleleBiasLower	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleIndelAlleleBiasLower,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
SampleIndelAlleleBiasLower	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleIndelAlleleBiasLower,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SampleIndelAlleleBiasLower	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleIndelAlleleBiasLower,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
SampleIndelMeanDistanceFromReadEdge	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleIndelMeanDistanceFromReadEdge,$/;"	e	enum:RNA_INDEL_SCORING_FEATURES::index_t
SampleIndelRepeatCount	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleIndelRepeatCount,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
SampleIndelRepeatCount	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleIndelRepeatCount,$/;"	e	enum:RNA_INDEL_SCORING_FEATURES::index_t
SampleIndelRepeatUnitSize	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleIndelRepeatUnitSize,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
SampleIndelRepeatUnitSize	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleIndelRepeatUnitSize,$/;"	e	enum:RNA_INDEL_SCORING_FEATURES::index_t
SampleMeanDistanceFromReadEdge	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleMeanDistanceFromReadEdge,$/;"	e	enum:RNA_SNV_SCORING_FEATURES::index_t
SamplePloidyState	./src/c++/lib/applications/starling/ploidyUtil.hh	/^    SamplePloidyState(const int ploidy = 2)$/;"	f	struct:SamplePloidyState
SamplePloidyState	./src/c++/lib/applications/starling/ploidyUtil.hh	/^struct SamplePloidyState$/;"	s
SamplePrimaryAltAlleleDepth	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SamplePrimaryAltAlleleDepth,$/;"	e	enum:RNA_INDEL_SCORING_FEATURES::index_t
SamplePrimaryAltAlleleDepth	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SamplePrimaryAltAlleleDepth,$/;"	e	enum:RNA_SNV_SCORING_FEATURES::index_t
SamplePrimaryAltAlleleDepthFraction	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SamplePrimaryAltAlleleDepthFraction,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
SamplePrimaryAltAlleleDepthFraction	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SamplePrimaryAltAlleleDepthFraction,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SamplePrimaryAltAlleleDepthFraction	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SamplePrimaryAltAlleleDepthFraction,$/;"	e	enum:RNA_INDEL_SCORING_FEATURES::index_t
SamplePrimaryAltAlleleDepthFraction	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SamplePrimaryAltAlleleDepthFraction,$/;"	e	enum:RNA_SNV_SCORING_FEATURES::index_t
SampleProxyRMSMappingQuality	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleProxyRMSMappingQuality,$/;"	e	enum:GERMLINE_INDEL_SCORING_FEATURES::index_t
SampleProxyRMSMappingQuality	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleProxyRMSMappingQuality,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
SampleRMSMappingQuality	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleRMSMappingQuality,$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
SampleRMSMappingQuality	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleRMSMappingQuality,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SampleRMSMappingQualityRankSum	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleRMSMappingQualityRankSum,$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
SampleRMSMappingQualityRankSum	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleRMSMappingQualityRankSum,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SampleReadPosRankSum	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleReadPosRankSum,$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
SampleReadPosRankSum	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleReadPosRankSum,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SampleRefAlleleDepth	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleRefAlleleDepth,$/;"	e	enum:RNA_INDEL_SCORING_FEATURES::index_t
SampleRefAlleleDepth	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleRefAlleleDepth,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SampleRefAlleleDepthFraction	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleRefAlleleDepthFraction,$/;"	e	enum:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
SampleRefAlleleDepthFraction	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleRefAlleleDepthFraction,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SampleRefAlleleDepthFraction	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleRefAlleleDepthFraction,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
SampleRefAlleleDepthFraction	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleRefAlleleDepthFraction,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
SampleRefRepeatCount	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleRefRepeatCount,$/;"	e	enum:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
SampleRefRepeatCount	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleRefRepeatCount,$/;"	e	enum:RNA_INDEL_SCORING_FEATURES::index_t
SampleSetSummary	./src/c++/lib/starling_common/SampleSetSummary.hh	/^    SampleSetSummary() {}$/;"	f	struct:SampleSetSummary
SampleSetSummary	./src/c++/lib/starling_common/SampleSetSummary.hh	/^struct SampleSetSummary$/;"	s
SampleStrandBias	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleStrandBias,$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
SampleStrandBias	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleStrandBias,$/;"	e	enum:RNA_SNV_SCORING_FEATURES::index_t
SampleUsedDepthFraction	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SampleUsedDepthFraction,$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
SampleUsedDepthFraction	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SampleUsedDepthFraction,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
ScoreExtend	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    static const int ScoreExtend = -1;$/;"	m	class:ActiveRegionDetector
ScoreMatch	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    static const int ScoreMatch = 1;$/;"	m	class:ActiveRegionDetector
ScoreMismatch	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    static const int ScoreMismatch = -4;$/;"	m	class:ActiveRegionDetector
ScoreOffEdge	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    static const int ScoreOffEdge = -100;$/;"	m	class:ActiveRegionDetector
ScoreOpen	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    static const int ScoreOpen = -5;$/;"	m	class:ActiveRegionDetector
ScoreVal	./src/c++/lib/alignment/GlobalAligner.hh	/^    struct ScoreVal$/;"	s	struct:GlobalAligner
ScoreVec	./src/c++/lib/alignment/GlobalAligner.hh	/^    typedef std::vector<ScoreVal> ScoreVec;$/;"	t	struct:GlobalAligner
ScoringModelManager	./src/c++/lib/applications/starling/ScoringModelManager.cpp	/^ScoringModelManager($/;"	f	class:ScoringModelManager
ScoringModelManager	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^struct ScoringModelManager$/;"	s
SegmentTimeTracker	./src/c++/lib/common/SegmentTimeTracker.cpp	/^SegmentTimeTracker($/;"	f	class:SegmentTimeTracker
SegmentTimeTracker	./src/c++/lib/common/SegmentTimeTracker.hh	/^struct SegmentTimeTracker : private boost::noncopyable$/;"	s
SequenceErrorCounts	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^struct SequenceErrorCounts$/;"	s
SequenceErrorCountsDerivOptions	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.cpp	/^SequenceErrorCountsDerivOptions(const SequenceErrorCountsOptions& opt)$/;"	f	class:SequenceErrorCountsDerivOptions
SequenceErrorCountsDerivOptions	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^struct SequenceErrorCountsDerivOptions : public starling_base_deriv_options$/;"	s
SequenceErrorCountsOptions	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    SequenceErrorCountsOptions()$/;"	f	struct:SequenceErrorCountsOptions
SequenceErrorCountsOptions	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^struct SequenceErrorCountsOptions : public starling_base_options$/;"	s
SequenceErrorCountsPosProcessor	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^SequenceErrorCountsPosProcessor($/;"	f	class:SequenceErrorCountsPosProcessor
SequenceErrorCountsPosProcessor	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^struct SequenceErrorCountsPosProcessor : public starling_pos_processor_base$/;"	s
SequenceErrorCountsStreams	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsStreams.cpp	/^SequenceErrorCountsStreams($/;"	f	class:SequenceErrorCountsStreams
SequenceErrorCountsStreams	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsStreams.hh	/^struct SequenceErrorCountsStreams : public starling_streams_base$/;"	s
SignalGroupTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModel1.cpp	/^struct SignalGroupTotal$/;"	s	namespace:__anon23	file:
SignalGroupTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^struct SignalGroupTotal$/;"	s	namespace:__anon20	file:
SignalGroupTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^struct SignalGroupTotal$/;"	s	namespace:__anon18	file:
SignalGroupTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^struct SignalGroupTotal$/;"	s	namespace:__anon26	file:
SignalGroupTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^struct SignalGroupTotal$/;"	s	namespace:__anon22	file:
SignalGroupTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^struct SignalGroupTotal$/;"	s	namespace:__anon21	file:
SignalGroupTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^struct SignalGroupTotal$/;"	s	namespace:__anon19	file:
SignalGroupTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^struct SignalGroupTotal$/;"	s	namespace:__anon24	file:
SimplifiedIndelReportType	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^namespace SimplifiedIndelReportType$/;"	n
SingleRefAlignerBase	./src/c++/lib/alignment/SingleRefAlignerShared.hh	/^    SingleRefAlignerBase($/;"	f	struct:SingleRefAlignerBase
SingleRefAlignerBase	./src/c++/lib/alignment/SingleRefAlignerShared.hh	/^struct SingleRefAlignerBase : public AlignerBase<ScoreType>$/;"	s
SiteConflict	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    SiteConflict,$/;"	e	enum:GERMLINE_VARIANT_VCF_FILTERS::index_t
SiteHomopolymerLength	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        SiteHomopolymerLength,$/;"	e	enum:GERMLINE_SNV_SCORING_FEATURES::index_t
SiteHomopolymerLength	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        SiteHomopolymerLength,$/;"	e	enum:RNA_SNV_SCORING_FEATURES::index_t
SiteNoise	./src/c++/lib/applications/strelka/SiteNoise.hh	/^struct SiteNoise$/;"	s
SmallAssemblerOptions	./src/c++/lib/options/SmallAssemblerOptions.hh	/^struct SmallAssemblerOptions$/;"	s
SomaticCallableProcessor	./src/c++/lib/applications/strelka/SomaticCallableProcessor.hh	/^    SomaticCallableProcessor($/;"	f	struct:SomaticCallableProcessor
SomaticCallableProcessor	./src/c++/lib/applications/strelka/SomaticCallableProcessor.hh	/^struct SomaticCallableProcessor : public RegionProcessor$/;"	s
SomaticEVSVcfInfoTag	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    const std::string SomaticEVSVcfInfoTag = "SomaticEVS";$/;"	m	struct:strelka_options
SomaticIndelQualityAndHomRefGermlineGenotype	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        SomaticIndelQualityAndHomRefGermlineGenotype,$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
SomaticIndelVcfInfo	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^struct SomaticIndelVcfInfo$/;"	s
SomaticIndelVcfWriter	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    SomaticIndelVcfWriter($/;"	f	struct:SomaticIndelVcfWriter
SomaticIndelVcfWriter	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^struct SomaticIndelVcfWriter$/;"	s
SomaticSNVQualityAndHomRefGermlineGenotype	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        SomaticSNVQualityAndHomRefGermlineGenotype,$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
SpanDel	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    SpanDel,$/;"	e	enum:SOMATIC_VARIANT_VCF_FILTERS::index_t
StrandBaseCounts	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^struct StrandBaseCounts$/;"	s
StrandBiasCounts	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^struct StrandBiasCounts$/;"	s	file:
StreamScoper	./src/c++/lib/blt_util/io_util.cpp	/^StreamScoper($/;"	f	class:StreamScoper
StreamScoper	./src/c++/lib/blt_util/io_util.hh	/^struct StreamScoper$/;"	s
StrelkaNoiseExtractor	./src/c++/lib/applications/strelkaNoiseExtractor/strelkaNoiseExtractor.hh	/^struct StrelkaNoiseExtractor : public illumina::Program$/;"	s
StrelkaSampleSetSummary	./src/c++/lib/applications/strelka/StrelkaSampleSetSummary.hh	/^    StrelkaSampleSetSummary() : SampleSetSummary() {}$/;"	f	struct:StrelkaSampleSetSummary
StrelkaSampleSetSummary	./src/c++/lib/applications/strelka/StrelkaSampleSetSummary.hh	/^struct StrelkaSampleSetSummary : public SampleSetSummary$/;"	s
SupportingReadCountGroup	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    SupportingReadCountGroup()$/;"	f	struct:SupportingReadCountGroup
SupportingReadCountGroup	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^struct SupportingReadCountGroup$/;"	s
T	./src/c++/lib/blt_util/monogt.hh	/^    T,$/;"	e	enum:MONOGT::index_t
T	./src/c++/lib/blt_util/seq_util.hh	/^    T,$/;"	e	enum:BASE_ID::index_t
T	./src/c++/lib/htsapi/bam_seq.hh	/^    T = 0x8,$/;"	e	enum:BAM_BASE::index_t
TIER1_MAPPED	./src/c++/lib/blt_common/map_level.hh	/^    TIER1_MAPPED, \/\/\/< The read has a high-quality mapping which is approximated as true for most purposes$/;"	e	enum:MAPLEVEL::index_t
TIER2_MAPPED	./src/c++/lib/blt_common/map_level.hh	/^    TIER2_MAPPED, \/\/\/< The read has a lower-quality mapping, and thus is only used for specialized tasks, eg. normal sample evidence to disprove a putative somatic hypothesis$/;"	e	enum:MAPLEVEL::index_t
TREE	./src/c++/lib/calibration/RandomForestModel.cpp	/^    TREE,$/;"	e	enum:DTREE_NODE_TYPE::index_t	file:
TT	./src/c++/lib/blt_util/digt.hh	/^    TT,$/;"	e	enum:DIGT::index_t
TUMOR	./src/c++/lib/applications/strelka/StrelkaSampleSetSummary.hh	/^enum index_t { NORMAL, TUMOR, SIZE };$/;"	e	enum:STRELKA_SAMPLE_TYPE::index_t
TWOTAILED	./src/c++/lib/blt_util/fisher_exact_test.hh	/^    TWOTAILED = 3,$/;"	m	class:FISHER_EXACT
T_AF	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        T_AF,$/;"	e	enum:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
T_BCN	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        T_BCN,$/;"	e	enum:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
T_OF	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        T_OF,$/;"	e	enum:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
TestIndelBuffer	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^    TestIndelBuffer($/;"	f	struct:TestIndelBuffer
TestIndelBuffer	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^struct TestIndelBuffer$/;"	s	file:
Tier2Options	./src/c++/lib/starling_common/Tier2Options.hh	/^struct Tier2Options$/;"	s
TimeScoper	./src/c++/lib/blt_util/time_util.hh	/^    TimeScoper(TimeTracker& t) : _t(t)$/;"	f	struct:TimeScoper
TimeScoper	./src/c++/lib/blt_util/time_util.hh	/^struct TimeScoper : private boost::noncopyable$/;"	s
TimeTracker	./src/c++/lib/blt_util/time_util.hh	/^    TimeTracker()$/;"	f	struct:TimeTracker
TimeTracker	./src/c++/lib/blt_util/time_util.hh	/^struct TimeTracker$/;"	s
TreeNode	./src/c++/lib/calibration/RandomForestModel.hh	/^        TreeNode() : isInit(false) {}$/;"	f	struct:RandomForestModel::TreeNode
TreeNode	./src/c++/lib/calibration/RandomForestModel.hh	/^    struct TreeNode$/;"	s	struct:RandomForestModel
TumorNormalAlignmentFileOptions	./src/c++/lib/options/TumorNormalAlignmentFileOptions.hh	/^struct TumorNormalAlignmentFileOptions : public AlignmentFileOptions$/;"	s
TumorNormalIndelAlleleLogOdds	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorNormalIndelAlleleLogOdds,$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
TumorSampleAbsLogStrandOddsRatio	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleAbsLogStrandOddsRatio,$/;"	e	enum:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
TumorSampleAbsReadPosRankSum	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleAbsReadPosRankSum,$/;"	e	enum:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
TumorSampleAltAlleleFraction	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleAltAlleleFraction,$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
TumorSampleAltAlleleMedianReadPos	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleAltAlleleMedianReadPos,$/;"	e	enum:SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
TumorSampleAltAlleleMedianReadPosVariation	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleAltAlleleMedianReadPosVariation,$/;"	e	enum:SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
TumorSampleFilteredDepthFraction	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleFilteredDepthFraction,$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
TumorSampleIndelNoiseLogOdds	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleIndelNoiseLogOdds,$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
TumorSampleLogStrandOddsRatio	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleLogStrandOddsRatio,$/;"	e	enum:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
TumorSampleLogSymmetricStrandOddsRatio	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleLogSymmetricStrandOddsRatio,$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
TumorSampleReadPosRankSum	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleReadPosRankSum,$/;"	e	enum:SOMATIC_INDEL_SCORING_FEATURES::index_t
TumorSampleReadPosRankSum	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleReadPosRankSum,$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
TumorSampleSpanningDeletionFraction	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleSpanningDeletionFraction,$/;"	e	enum:SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
TumorSampleStrandBias	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        TumorSampleStrandBias,$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
UNKNOWN	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    UNKNOWN,$/;"	e	enum:MODIFIED_SITE_GT::index_t
UNKNOWN	./src/c++/lib/blt_common/map_level.hh	/^    UNKNOWN,      \/\/\/< MAPLEVEL initialization state, this does not describe any read mapping$/;"	e	enum:MAPLEVEL::index_t
UNKNOWN	./src/c++/lib/blt_util/RecordTracker.hh	/^    UNKNOWN,$/;"	e	enum:GENOTYPE_STATUS::genotype_t
UNKNOWN_SEGMENT	./src/c++/lib/blt_util/align_path.hh	/^    UNKNOWN_SEGMENT,$/;"	e	enum:ALIGNPATH::ALIGN_ISSUE::issue_t
UNMAPPED	./src/c++/lib/blt_common/map_level.hh	/^    UNMAPPED      \/\/\/< The read is unmapped$/;"	e	enum:MAPLEVEL::index_t
UNMAPPED	./src/c++/lib/htsapi/bam_util.hh	/^    UNMAPPED      = 0x004,$/;"	e	enum:BAM_FLAG::index_t
UNMAPPED	./src/c++/lib/starling_common/starling_read_filter_shared.hh	/^    UNMAPPED,$/;"	e	enum:READ_FILTER_TYPE::index_t
UnsupportedVersionException	./src/c++/lib/common/Exceptions.cpp	/^UnsupportedVersionException::UnsupportedVersionException(const std::string& message)$/;"	f	class:illumina::common::UnsupportedVersionException
UnsupportedVersionException	./src/c++/lib/common/Exceptions.hh	/^class UnsupportedVersionException: public std::logic_error, public ExceptionData$/;"	c	namespace:illumina::common
VARIANT_INDEL	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^    VARIANT_INDEL,$/;"	e	enum:VARQUEUE::index_t	file:
VARQUEUE	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^namespace VARQUEUE$/;"	n	file:
VCF	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    VCF,$/;"	e	enum:HTS_TYPE::index_t
VCFID	./src/c++/lib/htsapi/vcf_util.hh	/^namespace VCFID$/;"	n
VERSION	./src/c++/lib/calibration/IndelErrorModelMetadata.cpp	/^    VERSION,$/;"	e	enum:IMODEL_ENTRY_TYPE::index_t	file:
VERSION	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^    VERSION,$/;"	e	enum:SMODEL_ENTRY_TYPE::index_t	file:
VOTE	./src/c++/lib/calibration/RandomForestModel.cpp	/^    VOTE,$/;"	e	enum:DTREE_NODE_TYPE::index_t	file:
VariantAlleleQuality	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        VariantAlleleQuality,$/;"	e	enum:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
VariantAlleleQuality	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        VariantAlleleQuality,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
VariantAlleleQuality	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        VariantAlleleQuality,$/;"	e	enum:RNA_INDEL_SCORING_FEATURES::index_t
VariantAlleleQuality	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        VariantAlleleQuality,$/;"	e	enum:RNA_SNV_SCORING_FEATURES::index_t
VariantOverlapResolver	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^    VariantOverlapResolver($/;"	f	struct:VariantOverlapResolver
VariantOverlapResolver	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^struct VariantOverlapResolver : public variant_pipe_stage_base$/;"	s
VariantPhaser	./src/c++/lib/applications/starling/VariantPhaser.hh	/^    VariantPhaser($/;"	f	struct:VariantPhaser
VariantPhaser	./src/c++/lib/applications/starling/VariantPhaser.hh	/^struct VariantPhaser : public variant_pipe_stage_base$/;"	s
VariantScoringFeatureKeeper	./src/c++/lib/calibration/featuresetUtil.hh	/^    VariantScoringFeatureKeeper($/;"	f	struct:VariantScoringFeatureKeeper
VariantScoringFeatureKeeper	./src/c++/lib/calibration/featuresetUtil.hh	/^struct VariantScoringFeatureKeeper$/;"	s
VariantScoringModelBase	./src/c++/lib/calibration/VariantScoringModelBase.hh	/^struct VariantScoringModelBase : public PolymorphicObject$/;"	s
VariantScoringModelMetadata	./src/c++/lib/calibration/VariantScoringModelMetadata.hh	/^    VariantScoringModelMetadata() {}$/;"	f	struct:VariantScoringModelMetadata
VariantScoringModelMetadata	./src/c++/lib/calibration/VariantScoringModelMetadata.hh	/^struct VariantScoringModelMetadata$/;"	s
VariantScoringModelServer	./src/c++/lib/calibration/VariantScoringModelServer.cpp	/^VariantScoringModelServer($/;"	f	class:VariantScoringModelServer
VariantScoringModelServer	./src/c++/lib/calibration/VariantScoringModelServer.hh	/^struct VariantScoringModelServer$/;"	s
VariantType	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    enum VariantType$/;"	g	class:ActiveRegionReadBuffer
VcfGenotype	./src/c++/lib/htsapi/vcf_util.hh	/^    VcfGenotype($/;"	f	struct:VcfGenotype
VcfGenotype	./src/c++/lib/htsapi/vcf_util.hh	/^    VcfGenotype()$/;"	f	struct:VcfGenotype
VcfGenotype	./src/c++/lib/htsapi/vcf_util.hh	/^    VcfGenotype(const unsigned allele0Index)$/;"	f	struct:VcfGenotype
VcfGenotype	./src/c++/lib/htsapi/vcf_util.hh	/^struct VcfGenotype$/;"	s
VcfGenotypeUtil	./src/c++/lib/htsapi/vcf_util.hh	/^struct VcfGenotypeUtil$/;"	s
W_OK	./src/c++/lib/blt_util/compat_unistd.h	21;"	d
ZERO	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    ZERO,$/;"	e	enum:MODIFIED_SITE_GT::index_t
ZeroMappingQualityFraction	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^        ZeroMappingQualityFraction,$/;"	e	enum:SOMATIC_SNV_SCORING_FEATURES::index_t
ZeroT	./src/c++/lib/blt_util/RangeMap.hh	/^struct ZeroT$/;"	s
_IndelBufferPtr	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^    std::unique_ptr<IndelBuffer> _IndelBufferPtr;$/;"	m	struct:TestIndelBuffer	file:
_UNISTD_H	./src/c++/lib/blt_util/compat_unistd.h	2;"	d
__POSITION_SNP_CALL_PPROB_NPLOID_HH	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.hh	25;"	d
__SPARSE_FUNCTION_1D_HH	./src/c++/lib/blt_common/sparse_function_1d.hh	25;"	d
__STDC_LIMIT_MACROS	./src/c++/lib/htsapi/bam_util.hh	30;"	d
__STDC_LIMIT_MACROS	./src/c++/lib/htsapi/tabix_util.hh	26;"	d
_activeRegionDetector	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    std::vector<std::unique_ptr<ActiveRegionDetector>> _activeRegionDetector;$/;"	m	struct:starling_pos_processor_base
_activeRegionId	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    ActiveRegionId _activeRegionId = -1;$/;"	m	struct:LocusSampleInfo
_activeRegionStartPos	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    pos_t _activeRegionStartPos;$/;"	m	class:ActiveRegionDetector
_activeRegions	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    std::list<ActiveRegion> _activeRegions;$/;"	m	class:ActiveRegionDetector
_adaptiveIndelErrorModels	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    std::vector<AdaptiveIndelErrorModel> _adaptiveIndelErrorModels;$/;"	m	class:IndelModelProduction
_aeb_fp	./src/c++/lib/htsapi/bam_streamer.hh	/^    FILE* _aeb_fp;$/;"	m	struct:bam_streamer
_aib_fp	./src/c++/lib/htsapi/bam_streamer.hh	/^    FILE* _aib_fp;$/;"	m	struct:bam_streamer
_alignIdSoftClipped	./src/c++/lib/starling_common/ActiveRegion.hh	/^    std::set<align_id_t> _alignIdSoftClipped;$/;"	m	class:ActiveRegion
_alignIdToAlignInfo	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    std::vector<AlignInfo> _alignIdToAlignInfo;$/;"	m	class:ActiveRegionReadBuffer
_aligner	./src/c++/lib/starling_common/ActiveRegion.hh	/^    const GlobalAligner<int> _aligner;$/;"	m	class:ActiveRegion
_aligner	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    GlobalAligner<int> _aligner;$/;"	m	class:ActiveRegionDetector
_allele0HaplotypeId	./src/c++/lib/htsapi/vcf_util.hh	/^    uint8_t _allele0HaplotypeId = 0;$/;"	m	struct:VcfGenotype
_allele0Index	./src/c++/lib/htsapi/vcf_util.hh	/^    uint8_t _allele0Index = 0;$/;"	m	struct:VcfGenotype
_allele1HaplotypeId	./src/c++/lib/htsapi/vcf_util.hh	/^    uint8_t _allele1HaplotypeId = 0;$/;"	m	struct:VcfGenotype
_allele1Index	./src/c++/lib/htsapi/vcf_util.hh	/^    uint8_t _allele1Index = 0;$/;"	m	struct:VcfGenotype
_allele_map	./src/c++/lib/blt_common/position_loghood_minfunc.hh	/^    unsigned _allele_map[N_BASE];$/;"	m	struct:position_allele_distro_loghood_minfunc
_alpha	./src/c++/lib/starling_common/min_count_binom_gte_cache.hh	/^    const double _alpha;$/;"	m	struct:min_count_binom_gte_cache
_altAlleleCount	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unsigned _altAlleleCount = 0;$/;"	m	struct:LocusInfo
_altAlleleHaplotypeCountRatio	./src/c++/lib/htsapi/vcf_util.hh	/^    float _altAlleleHaplotypeCountRatio = 0.0f;$/;"	m	struct:VcfGenotype
_anchorPosFollowingPrevVariant	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    pos_t _anchorPosFollowingPrevVariant;$/;"	m	class:ActiveRegionDetector
_any_val	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^    cache_val_n _any_val; \/\/ return this if a request is outside of cached range$/;"	m	struct:het_ratio_cache
_apath	./src/c++/lib/blt_util/align_path.hh	/^    const path_t& _apath;$/;"	m	struct:ALIGNPATH::exon_offsets
_args	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    std::unique_ptr<double[]> _args;$/;"	m	struct:__anon19::error_minfunc	file:
_asize	./src/c++/lib/blt_util/align_path.hh	/^    const unsigned _asize;$/;"	m	struct:ALIGNPATH::exon_offsets
_bam	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        std::vector<std::unique_ptr<bam_streamer>> _bam;$/;"	m	struct:HtsMergeStreamer::HtsData
_bases	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^    BaseErrorCounts _bases;$/;"	m	struct:SequenceErrorCounts
_bed	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        std::vector<std::unique_ptr<bed_streamer>> _bed;$/;"	m	struct:HtsMergeStreamer::HtsData
_bedrec	./src/c++/lib/htsapi/bed_streamer.hh	/^    bed_record _bedrec;$/;"	m	struct:bed_streamer
_begin_pos	./src/c++/lib/blt_util/known_pos_range2.hh	/^    pos_t _begin_pos;$/;"	m	struct:known_pos_range2
_blockPerSample	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    std::vector<gvcf_block_site_record> _blockPerSample;$/;"	m	struct:gvcf_writer
_bp	./src/c++/lib/htsapi/bam_record.hh	/^    bam1_t* _bp;$/;"	m	struct:bam_record
_bq	./src/c++/lib/blt_common/hapscore.hh	/^    std::array<uint8_t,HAP_SIZE> _bq;$/;"	m	struct:hap_cand
_br_ptr	./src/c++/lib/starling_common/starling_read_key.hh	/^    const bam_record* _br_ptr;$/;"	m	struct:read_key
_breakpointInsertSeq	./src/c++/lib/starling_common/IndelData.hh	/^    mutable BreakpointInsertSequenceManager _breakpointInsertSeq;$/;"	m	struct:IndelData
_brec	./src/c++/lib/htsapi/bam_streamer.hh	/^    bam_record _brec;$/;"	m	struct:bam_streamer
_buf	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    char* _buf;$/;"	m	struct:istream_line_splitter
_buf	./src/c++/lib/blt_util/window_util.hh	/^    std::vector<int32_t> _buf;$/;"	m	struct:window_average
_buf_size	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    unsigned _buf_size;$/;"	m	struct:istream_line_splitter
_buff	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    starling_read_buffer& _buff;$/;"	m	struct:read_segment_iter
_buff32	./src/c++/lib/blt_util/stringer.hh	/^    mutable char _buff32[32];$/;"	m	struct:stringer_base
_bufferedVariantIndelRange	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^    known_pos_range2 _bufferedVariantIndelRange;$/;"	m	struct:VariantOverlapResolver
_cache	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^    std::vector<cache_val_n> _cache;$/;"	m	struct:het_ratio_cache
_callRegions	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    const RegionTracker& _callRegions;$/;"	m	struct:gvcf_writer
_callRegions	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    RegionTracker _callRegions;$/;"	m	struct:starling_pos_processor_base
_candidateErrorRates	./src/c++/lib/calibration/IndelErrorModel.hh	/^    IndelErrorRateSet _candidateErrorRates;$/;"	m	struct:IndelErrorModel
_candidateSnvBuffer	./src/c++/lib/starling_common/ActiveRegion.hh	/^    CandidateSnvBuffer& _candidateSnvBuffer;$/;"	m	class:ActiveRegion
_candidateSnvBuffer	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    CandidateSnvBuffer& _candidateSnvBuffer;$/;"	m	class:ActiveRegionDetector
_candidateSnvBuffer	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    std::vector<SampleCandidateSnvMap> _candidateSnvBuffer;$/;"	m	class:CandidateSnvBuffer
_candidateSnvBuffer	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    CandidateSnvBuffer _candidateSnvBuffer;$/;"	m	struct:starling_pos_processor_base
_chrom	./src/c++/lib/blt_util/RegionProcessor.hh	/^    std::string _chrom;$/;"	m	struct:RegionProcessor
_chromName	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    std::string _chromName;$/;"	m	struct:ScoringModelManager
_chromName	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    std::string _chromName;$/;"	m	struct:gvcf_writer
_chromName	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    std::string _chromName;$/;"	m	struct:starling_pos_processor_base
_cleanedPileup	./src/c++/lib/starling_common/PileupCleaner.hh	/^    snp_pos_info _cleanedPileup;$/;"	m	struct:CleanedPileup
_clear	./src/c++/lib/blt_util/depth_buffer.hh	/^    _clear(const pos_t pos)$/;"	f	struct:depth_buffer_base
_clearFunc	./src/c++/lib/blt_util/RangeMap.hh	/^    ValClear _clearFunc;$/;"	m	struct:RangeMap
_cmap	./src/c++/lib/blt_util/MedianDepthTracker.hh	/^    std::map<unsigned,unsigned> _cmap;$/;"	m	struct:MedianDepthTracker
_cmdline	./src/c++/lib/blt_util/sig_handler.cpp	/^static std::string _cmdline;$/;"	v	file:
_colCount	./src/c++/lib/blt_util/basic_matrix.hh	/^    unsigned _colCount;$/;"	m	struct:basic_matrix
_commonPrefixLength	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unsigned _commonPrefixLength;$/;"	m	struct:GermlineIndelLocusInfo
_confidentAlleleCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    std::vector<unsigned> _confidentAlleleCount; \/\/\/< counts supporting alleles in REF,ALT1,ALT2.... order$/;"	m	struct:SupportingReadCountGroup
_consensus_seq	./src/c++/lib/starling_common/IndelData.hh	/^    std::string _consensus_seq;$/;"	m	struct:BreakpointInsertSequenceManager
_constval	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^    uint8_t _constval;$/;"	m	struct:qval_distro	file:
_constval	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^    uint8_t _constval;$/;"	m	struct:qval_distro	file:
_contam_tolerance	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.hh	/^    blt_float_t _contam_tolerance;$/;"	m	struct:somatic_snv_caller_strand_grid
_continuousSiteSampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    std::vector<GermlineContinuousSiteSampleInfo> _continuousSiteSampleInfo;$/;"	m	struct:GermlineContinuousSiteLocusInfo
_count	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    uint64_t _count = 0;$/;"	m	struct:DepthTracker	file:
_count	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    uint64_t _count = 0;$/;"	m	struct:MeanDepthTracker	file:
_count	./src/c++/lib/blt_util/CircularCounter.hh	/^    unsigned _count;$/;"	m	struct:CircularCounter
_count	./src/c++/lib/blt_util/MeanTracker.hh	/^    unsigned _count = 0;$/;"	m	struct:MeanTracker
_countCache	./src/c++/lib/starling_common/IndelBuffer.hh	/^    const min_count_binom_gte_cache& _countCache;$/;"	m	struct:IndelBuffer
_counts	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    SequenceErrorCounts _counts;$/;"	m	class:IndelModelProduction
_counts	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    SequenceErrorCounts _counts;$/;"	m	struct:SequenceErrorCountsPosProcessor
_csize	./src/c++/lib/blt_util/depth_buffer.hh	/^    const unsigned _csize;$/;"	m	struct:depth_buffer_compressible
_data	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    const BaseErrorContextObservationExportData& _data;$/;"	m	struct:__anon19::error_minfunc	file:
_data	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    const BaseErrorContextObservationExportData& _data;$/;"	m	struct:__anon24::error_minfunc	file:
_data	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    std::map<pos_t,std::vector<SomaticIndelVcfInfo>> _data;$/;"	m	struct:SomaticIndelVcfWriter
_data	./src/c++/lib/blt_util/CircularCounter.hh	/^    std::vector<bool> _data;$/;"	m	struct:CircularCounter
_data	./src/c++/lib/blt_util/RangeMap.hh	/^    std::vector<ValType> _data;$/;"	m	struct:RangeMap
_data	./src/c++/lib/blt_util/basic_matrix.hh	/^    std::vector<T> _data;$/;"	m	struct:basic_matrix
_data	./src/c++/lib/blt_util/depth_buffer.hh	/^    count_t _data;$/;"	m	struct:depth_buffer_base
_data	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    data_t _data;$/;"	m	struct:BaseErrorCounts
_data	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    data_t _data;$/;"	m	struct:IndelErrorCounts
_data	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    HtsData _data;$/;"	m	struct:HtsMergeStreamer
_dependentErrorProb	./src/c++/lib/starling_common/PileupCleaner.hh	/^    std::vector<float> _dependentErrorProb;$/;"	m	struct:CleanedPileup
_depth	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    depth_buffer_compressible _depth = depth_buffer_compressible(16); \/\/\/< track depth for the purpose of filtering high-depth regions$/;"	m	struct:DepthTracker	file:
_depth	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    std::vector<unsigned> _depth;$/;"	m	class:ActiveRegionReadBuffer
_dopt	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    const SequenceErrorCountsDerivOptions& _dopt;$/;"	m	struct:SequenceErrorCountsPosProcessor
_dopt	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    const gvcf_deriv_options& _dopt;$/;"	m	struct:ScoringModelManager
_dopt	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    const gvcf_deriv_options _dopt;$/;"	m	struct:gvcf_writer
_dopt	./src/c++/lib/applications/starling/starling_pos_processor.hh	/^    const starling_deriv_options& _dopt;$/;"	m	struct:starling_pos_processor
_dopt	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    const strelka_deriv_options& _dopt;$/;"	m	struct:SomaticIndelVcfWriter
_dopt	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    const strelka_deriv_options& _dopt;$/;"	m	struct:strelka_pos_processor
_dopt	./src/c++/lib/starling_common/IndelBuffer.hh	/^    const starling_base_deriv_options& _dopt;$/;"	m	struct:IndelBuffer
_dopt	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    const starling_base_deriv_options& _dopt;$/;"	m	struct:starling_pos_processor_base
_doptPtr	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^    std::unique_ptr<starling_base_deriv_options> _doptPtr;$/;"	m	struct:TestIndelBuffer	file:
_dopt_ptr	./src/c++/lib/applications/starling/starling_pile_test_run.hh	/^    std::unique_ptr<starling_deriv_options> _dopt_ptr;$/;"	m	struct:starling_pile_caller
_dopt_ptr	./src/c++/lib/applications/strelka/strelka_pile_test_run.hh	/^    std::unique_ptr<strelka_deriv_options> _dopt_ptr;$/;"	m	struct:strelka_pile_caller
_dpcache	./src/c++/lib/starling_common/PileupCleaner.hh	/^    mutable dependent_prob_cache _dpcache;$/;"	m	struct:PileupCleaner
_echunk	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    double _echunk;$/;"	m	struct:nploid_info
_empty_dgt	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    std::unique_ptr<diploid_genotype> _empty_dgt[N_BASE];$/;"	m	struct:starling_pos_processor_base
_empty_segment_group	./src/c++/lib/starling_common/starling_read_buffer.cpp	/^const starling_read_buffer::segment_group_t starling_read_buffer::_empty_segment_group;$/;"	m	class:starling_read_buffer	file:
_empty_segment_group	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    static const segment_group_t _empty_segment_group;$/;"	m	struct:starling_read_buffer
_empty_site	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    GermlineDiploidSiteLocusInfo _empty_site;$/;"	m	struct:gvcf_writer
_end	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    const piter _end;$/;"	m	struct:read_segment_iter
_endPos	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    int32_t _endPos = 0;$/;"	m	struct:MeanDepthTracker	file:
_end_pos	./src/c++/lib/blt_util/known_pos_range2.hh	/^    pos_t _end_pos;$/;"	m	struct:known_pos_range2
_epi	./src/c++/lib/starling_common/PileupCleaner.hh	/^    const extended_pos_info _epi;$/;"	m	struct:CleanedPileup
_errorRates	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    std::vector<std::vector<IndelErrorRates>> _errorRates;$/;"	m	struct:IndelErrorRateSet
_errorRates	./src/c++/lib/starling_common/IndelData.hh	/^    IndelErrorRates _errorRates;$/;"	m	struct:IndelSampleData
_exception	./src/c++/lib/starling_common/IndelData.cpp	/^_exception(const char* msg) const$/;"	f	class:BreakpointInsertSequenceManager
_excludedRegions	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    RegionTracker _excludedRegions;$/;"	m	struct:SequenceErrorCountsPosProcessor
_exonInfo	./src/c++/lib/starling_common/starling_read.hh	/^    std::vector<read_segment> _exonInfo;$/;"	m	struct:starling_read
_factor	./src/c++/lib/blt_util/LinearScaler.hh	/^    double _factor;$/;"	m	struct:LinearScaler
_featureSet	./src/c++/lib/calibration/featuresetUtil.hh	/^    const FeatureSet& _featureSet;$/;"	m	struct:VariantScoringFeatureKeeper
_featureVal	./src/c++/lib/calibration/featuresetUtil.hh	/^    VariantScoringModelBase::featureInput_t _featureVal;$/;"	m	struct:VariantScoringFeatureKeeper
_fileName	./src/c++/lib/common/OutStream.hh	/^    std::string _fileName;$/;"	m	struct:OutStream
_fileStreams	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_pos_processor.hh	/^    const snoise_streams& _fileStreams;$/;"	m	struct:snoise_pos_processor
_filters	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    std::bitset<SOMATIC_VARIANT_VCF_FILTERS::SIZE> _filters;$/;"	m	struct:strelka_filter_keeper
_finalize	./src/c++/lib/starling_common/IndelData.cpp	/^_finalize()$/;"	f	class:BreakpointInsertSequenceManager
_fmap	./src/c++/lib/blt_common/sparse_function_1d.hh	/^    fmap_t _fmap;$/;"	m	struct:sparse_function
_forced_output_pos	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    std::set<pos_t> _forced_output_pos;$/;"	m	struct:starling_pos_processor_base
_forest	./src/c++/lib/calibration/RandomForestModel.hh	/^    std::vector<DecisionTree> _forest;$/;"	m	struct:RandomForestModel
_full_read	./src/c++/lib/starling_common/starling_read.hh	/^    read_segment _full_read;$/;"	m	struct:starling_read
_full_size	./src/c++/lib/blt_util/window_util.hh	/^    uint32_t _full_size;$/;"	m	struct:window_average
_genotypePhredLoghood	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    std::vector<unsigned> _genotypePhredLoghood;$/;"	m	struct:GenotypeLikelihoods
_germlineGenotypeLogPrior	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.hh	/^    blt_float_t _germlineGenotypeLogPrior[SOMATIC_DIGT::SIZE];$/;"	m	struct:somatic_snv_caller_strand_grid
_germlineGenotypeLogPrior	./src/c++/lib/applications/strelka/somatic_indel_grid.hh	/^    blt_float_t _germlineGenotypeLogPrior[SOMATIC_DIGT::SIZE];$/;"	m	struct:somatic_indel_caller_grid
_getActiveRegionDetector	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    _getActiveRegionDetector(const unsigned sampleIndex)$/;"	f	struct:starling_pos_processor_base
_ginfo	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    std::vector<gtype_info> _ginfo;$/;"	m	struct:nploid_info
_gvcfSampleStreamPtr	./src/c++/lib/applications/starling/starling_streams.hh	/^    std::vector<std::unique_ptr<std::ostream>> _gvcfSampleStreamPtr;$/;"	m	struct:starling_streams
_gvcfVariantsStreamPtr	./src/c++/lib/applications/starling/starling_streams.hh	/^    std::unique_ptr<std::ostream> _gvcfVariantsStreamPtr;$/;"	m	struct:starling_streams
_gvcfWriterPtr	./src/c++/lib/applications/starling/gvcf_aggregator.hh	/^    std::shared_ptr<gvcf_writer> _gvcfWriterPtr;$/;"	m	class:gvcf_aggregator
_gvcf_comp	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    gvcf_compressor _gvcf_comp;$/;"	m	struct:gvcf_writer
_gvcfer	./src/c++/lib/applications/starling/starling_pos_processor.hh	/^    std::unique_ptr<gvcf_aggregator> _gvcfer;$/;"	m	struct:starling_pos_processor
_halfcsize	./src/c++/lib/blt_util/depth_buffer.hh	/^    const unsigned _halfcsize;$/;"	m	struct:depth_buffer_compressible
_hdr	./src/c++/lib/htsapi/bam_dumper.hh	/^    const bam_hdr_t* _hdr;$/;"	m	struct:bam_dumper
_hdr	./src/c++/lib/htsapi/bam_streamer.hh	/^    bam_hdr_t* _hdr;$/;"	m	struct:bam_streamer
_hdr	./src/c++/lib/htsapi/vcf_streamer.hh	/^    bcf_hdr_t* _hdr;$/;"	m	struct:vcf_streamer
_head	./src/c++/lib/applications/starling/gvcf_aggregator.hh	/^    std::shared_ptr<variant_pipe_stage_base> _head;$/;"	m	class:gvcf_aggregator
_head	./src/c++/lib/blt_util/window_util.hh	/^    uint32_t _head;$/;"	m	struct:window_average
_head	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    piter _head;$/;"	m	struct:read_segment_iter
_headPos	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    pos_t _headPos;$/;"	m	struct:gvcf_writer
_headPos	./src/c++/lib/blt_util/CircularCounter.hh	/^    unsigned _headPos;$/;"	m	struct:CircularCounter
_head_pos	./src/c++/lib/blt_util/stage_manager.hh	/^    pos_t _head_pos;$/;"	m	struct:stage_manager
_head_read_id	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    align_id_t _head_read_id; \/\/ tracks head read_id number for next read added$/;"	m	struct:read_id_counter
_hfp	./src/c++/lib/htsapi/bam_dumper.hh	/^    htsFile* _hfp;$/;"	m	struct:bam_dumper
_hfp	./src/c++/lib/htsapi/bam_streamer.hh	/^    htsFile* _hfp;$/;"	m	struct:bam_streamer
_hfp	./src/c++/lib/htsapi/hts_streamer.hh	/^    htsFile* _hfp;$/;"	m	struct:hts_streamer
_hidx	./src/c++/lib/htsapi/bam_streamer.hh	/^    hts_idx_t* _hidx;$/;"	m	struct:bam_streamer
_highLogParams	./src/c++/lib/calibration/IndelErrorModel.hh	/^    AdaptiveIndelErrorModelLogParams _highLogParams;$/;"	m	class:AdaptiveIndelErrorModel
_highRepeatCount	./src/c++/lib/calibration/IndelErrorModel.hh	/^    unsigned _highRepeatCount = 0;$/;"	m	class:AdaptiveIndelErrorModel
_hitr	./src/c++/lib/htsapi/bam_streamer.hh	/^    hts_itr_t* _hitr;$/;"	m	struct:bam_streamer
_i	./src/c++/lib/blt_common/sparse_function_1d.cpp	/^    blt_float_t _s,_i;$/;"	m	struct:linear_function	file:
_id2k	./src/c++/lib/blt_util/id_map.hh	/^    std::vector<K> _id2k;$/;"	m	struct:id_set
_id2kv	./src/c++/lib/blt_util/id_map.hh	/^    std::vector<std::pair<K,V>> _id2kv;$/;"	m	struct:id_map
_ids	./src/c++/lib/blt_util/stage_manager.hh	/^    idmap_t _ids;$/;"	m	struct:stage_data
_inc	./src/c++/lib/blt_util/depth_buffer.hh	/^    _inc(const pos_t pos,$/;"	f	struct:depth_buffer_base
_indelAlleleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    std::vector<GermlineIndelAlleleInfo> _indelAlleleInfo;$/;"	m	struct:GermlineIndelLocusInfo
_indelBuffer	./src/c++/lib/starling_common/ActiveRegion.hh	/^    IndelBuffer& _indelBuffer;$/;"	m	class:ActiveRegion
_indelBuffer	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    IndelBuffer& _indelBuffer;$/;"	m	class:ActiveRegionDetector
_indelBuffer	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    IndelBuffer& _indelBuffer;$/;"	m	class:ActiveRegionReadBuffer
_indelBuffer	./src/c++/lib/starling_common/IndelBuffer.hh	/^    indel_buffer_data_t _indelBuffer;$/;"	m	struct:IndelBuffer
_indelBuffer	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    IndelBuffer _indelBuffer;$/;"	m	struct:starling_pos_processor_base
_indelErrorModel	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::unique_ptr<IndelErrorModel> _indelErrorModel;$/;"	m	struct:starling_base_deriv_options
_indelGenotypePriors	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::unique_ptr<GenotypePriorSet> _indelGenotypePriors;$/;"	m	struct:starling_base_deriv_options
_indelKey	./src/c++/lib/starling_common/IndelData.hh	/^    IndelKey _indelKey;$/;"	m	struct:IndelData
_indelLoci	./src/c++/lib/applications/starling/test/VariantOverlapResolver_test.cpp	/^    std::vector<std::unique_ptr<GermlineIndelLocusInfo>> _indelLoci;$/;"	m	struct:DummyVariantSink	file:
_indelLoci	./src/c++/lib/applications/starling/test/VariantPhaserTest.cpp	/^    std::vector<std::unique_ptr<GermlineIndelLocusInfo>> _indelLoci;$/;"	m	struct:DummyVariantSink	file:
_indelRegionIndexNormal	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    unsigned _indelRegionIndexNormal;$/;"	m	struct:strelka_pos_processor
_indelRegionIndexTumor	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    unsigned _indelRegionIndexTumor;$/;"	m	struct:strelka_pos_processor
_indelSampleData	./src/c++/lib/starling_common/IndelBuffer.hh	/^    indelSampleData_t _indelSampleData;$/;"	m	struct:IndelBuffer
_indelSampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    std::vector<GermlineIndelSampleInfo> _indelSampleInfo;$/;"	m	struct:GermlineIndelLocusInfo
_indelScoringModelPtr	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    std::unique_ptr<VariantScoringModelServer> _indelScoringModelPtr;$/;"	m	struct:ScoringModelManager
_indelWriter	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    SomaticIndelVcfWriter _indelWriter;$/;"	m	struct:strelka_pos_processor
_indels	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^    IndelErrorCounts _indels;$/;"	m	struct:SequenceErrorCounts
_indels	./src/c++/lib/starling_common/CandidateAlignment.hh	/^    indel_set_t _indels;$/;"	m	struct:CandidateAlignment
_inputAlignment	./src/c++/lib/starling_common/starling_read_segment.hh	/^    const alignment _inputAlignment;$/;"	m	struct:read_segment
_inputAlignmentMapLevel	./src/c++/lib/starling_common/starling_read.hh	/^    const MAPLEVEL::index_t _inputAlignmentMapLevel;$/;"	m	struct:starling_read
_insertSeqBuffer	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    std::vector<std::vector<std::string>> _insertSeqBuffer;$/;"	m	class:ActiveRegionReadBuffer
_is	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    std::istream& _is;$/;"	m	struct:istream_line_splitter
_isAnchor	./src/c++/lib/starling_common/ReferenceRepeatFinder.hh	/^    std::vector<bool> _isAnchor;$/;"	m	class:ReferenceRepeatFinder
_isBeginning	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    bool _isBeginning;$/;"	m	class:ActiveRegionDetector
_isChecked	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    bool _isChecked;$/;"	m	struct:ChromDepthTracker	file:
_isDepthConverged	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    bool _isDepthConverged;$/;"	m	struct:ChromDepthTracker	file:
_isEmpty	./src/c++/lib/blt_util/RangeMap.hh	/^    bool _isEmpty;$/;"	m	struct:RangeMap
_isEstimated	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    bool _isEstimated = false;$/;"	m	class:IndelModelProduction
_isEstimationAcceptable	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    bool _isEstimationAcceptable = true;$/;"	m	class:IndelModelProduction
_isFeatureSet	./src/c++/lib/calibration/featuresetUtil.hh	/^    boost::dynamic_bitset<> _isFeatureSet;$/;"	m	struct:VariantScoringFeatureKeeper
_isFinalized	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    bool _isFinalized;$/;"	m	struct:ChromDepthTracker	file:
_isFinalized	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    bool _isFinalized = false;$/;"	m	struct:IndelErrorRateSet
_isFinalized	./src/c++/lib/starling_common/IndelBuffer.hh	/^    bool _isFinalized = false;$/;"	m	struct:IndelBuffer
_isFreeCleanLocusError	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    bool _isFreeCleanLocusError;$/;"	m	struct:__anon19::error_minfunc	file:
_isIndelsSet	./src/c++/lib/starling_common/CandidateAlignment.hh	/^    bool _isIndelsSet = false;$/;"	m	struct:CandidateAlignment
_isInit	./src/c++/lib/common/OutStream.hh	/^    bool _isInit;$/;"	m	struct:OutStream
_isInitialized	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    bool _isInitialized = false;$/;"	m	struct:ContextGenotypePriors
_isInsert	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    bool _isInsert;$/;"	m	struct:__anon20::error_minfunc_model4	file:
_isInsert	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    bool _isInsert;$/;"	m	struct:__anon26::error_minfunc_model3	file:
_isInsert	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    bool _isInsert;$/;"	m	struct:__anon21::error_minfunc	file:
_isLockAlleles	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    bool _isLockAlleles = false;$/;"	m	struct:LocusInfo
_isLockTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    bool _isLockTheta;$/;"	m	struct:__anon20::error_minfunc_model4	file:
_isLockTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    bool _isLockTheta;$/;"	m	struct:__anon18::error_minfunc_model3	file:
_isLockTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    bool _isLockTheta;$/;"	m	struct:__anon26::error_minfunc_model3	file:
_isLockTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    bool _isLockTheta;$/;"	m	struct:__anon22::error_minfunc	file:
_isLockTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    bool _isLockTheta;$/;"	m	struct:__anon21::error_minfunc	file:
_isLockTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    bool _isLockTheta;$/;"	m	struct:__anon19::error_minfunc	file:
_isLockTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    bool _isLockTheta;$/;"	m	struct:__anon24::error_minfunc	file:
_isLockTheta	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    bool _isLockTheta;$/;"	m	struct:error_minfunc_model3	file:
_isPhased	./src/c++/lib/htsapi/vcf_util.hh	/^    bool _isPhased = false;$/;"	m	struct:VcfGenotype
_isPloidyConflict	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    bool _isPloidyConflict = false;$/;"	m	struct:LocusSampleInfo
_isRNA	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    bool _isRNA;$/;"	m	struct:ScoringModelManager
_isRegionInit	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    bool _isRegionInit = false;$/;"	m	struct:DepthTracker	file:
_isRegionInit	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    bool _isRegionInit = false;$/;"	m	struct:MeanDepthTracker	file:
_isReportEVSFeatures	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    bool _isReportEVSFeatures;$/;"	m	struct:ScoringModelManager
_isRequireNormalized	./src/c++/lib/htsapi/vcf_streamer.hh	/^    bool _isRequireNormalized;$/;"	m	struct:vcf_streamer
_isReset	./src/c++/lib/blt_util/time_util.hh	/^    bool _isReset = true;$/;"	m	struct:TimeTracker
_isSet	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^    bool _isSet;$/;"	m	struct:scan_result	file:
_isStreamBegin	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    bool _isStreamBegin = false;$/;"	m	struct:HtsMergeStreamer
_isStreamEnd	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    bool _isStreamEnd = false;$/;"	m	struct:HtsMergeStreamer
_isUseSampleSpecificErrorRates	./src/c++/lib/calibration/IndelErrorModel.hh	/^    bool _isUseSampleSpecificErrorRates = false;$/;"	m	struct:IndelErrorModel
_is_any_minpos	./src/c++/lib/blt_util/stage_manager.hh	/^    bool _is_any_minpos;$/;"	m	struct:stage_manager
_is_buf	./src/c++/lib/blt_util/window_util.hh	/^    std::vector<bool> _is_buf;$/;"	m	struct:window_average
_is_cached	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^    std::vector<bool> _is_cached;$/;"	m	struct:het_ratio_cache
_is_consensus	./src/c++/lib/starling_common/IndelData.hh	/^    bool _is_consensus = false;$/;"	m	struct:BreakpointInsertSequenceManager
_is_const	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^    bool _is_const;$/;"	m	struct:qval_distro	file:
_is_const	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^    bool _is_const;$/;"	m	struct:qval_distro	file:
_is_first_pos_set	./src/c++/lib/blt_util/stage_manager.hh	/^    bool _is_first_pos_set;$/;"	m	struct:stage_manager
_is_head_pos	./src/c++/lib/blt_util/stage_manager.hh	/^    bool _is_head_pos;$/;"	m	struct:stage_manager
_is_init	./src/c++/lib/blt_common/adjust_joint_eprob.hh	/^    std::vector<bool> _is_init;$/;"	m	struct:dependent_prob_cache
_is_last_pos	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        bool _is_last_pos;$/;"	m	struct:starling_pos_processor_base::pos_win_avgs
_is_minpos	./src/c++/lib/blt_util/stage_manager.hh	/^    std::vector<uint8_t> _is_minpos; \/\/faster lu than vector<bool>$/;"	m	struct:stage_manager
_is_pstat	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    mutable bool _is_pstat;$/;"	m	struct:depth_stream_stat_range
_is_range	./src/c++/lib/blt_util/RegionProcessor.hh	/^    bool _is_range = false;$/;"	m	struct:RegionProcessor
_is_record_set	./src/c++/lib/htsapi/bam_streamer.hh	/^    bool _is_record_set;$/;"	m	struct:bam_streamer
_is_record_set	./src/c++/lib/htsapi/hts_streamer.hh	/^    bool _is_record_set;$/;"	m	struct:hts_streamer
_is_ref_set	./src/c++/lib/blt_common/snp_pos_info.hh	/^    bool _is_ref_set;$/;"	m	struct:snp_pos_info
_is_region	./src/c++/lib/htsapi/bam_streamer.hh	/^    bool _is_region;$/;"	m	struct:bam_streamer
_is_skip_process_pos	./src/c++/lib/blt_util/pos_processor_base.hh	/^    mutable bool _is_skip_process_pos;$/;"	m	struct:pos_processor_base
_is_stream_end	./src/c++/lib/htsapi/hts_streamer.hh	/^    bool _is_stream_end;$/;"	m	struct:hts_streamer
_k2id	./src/c++/lib/blt_util/id_map.hh	/^    k2id_t _k2id;$/;"	m	struct:id_map
_k2id	./src/c++/lib/blt_util/id_map.hh	/^    k2id_t _k2id;$/;"	m	struct:id_set
_knownVariants	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    RecordTracker _knownVariants;$/;"	m	struct:SequenceErrorCountsPosProcessor
_kprior	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    unsigned _kprior;$/;"	m	struct:depth_stream_stat_range
_kstr	./src/c++/lib/htsapi/hts_streamer.hh	/^    kstring_t _kstr;$/;"	m	struct:hts_streamer
_largest_indel_ref_span	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    unsigned _largest_indel_ref_span;$/;"	m	struct:starling_pos_processor_base
_largest_total_indel_ref_span_per_read	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    unsigned _largest_total_indel_ref_span_per_read;$/;"	m	struct:starling_pos_processor_base
_lastVariantIndelWritten	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    std::unique_ptr<GermlineIndelLocusInfo> _lastVariantIndelWritten;$/;"	m	struct:gvcf_writer
_last_insert_pos	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        pos_t _last_insert_pos;$/;"	m	struct:starling_pos_processor_base::pos_win_avgs
_line_no	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    unsigned _line_no;$/;"	m	struct:istream_line_splitter
_ln_csse_rate	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.hh	/^    blt_float_t _ln_csse_rate;$/;"	m	struct:somatic_snv_caller_strand_grid
_ln_som_match	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.hh	/^    blt_float_t _ln_som_match;$/;"	m	struct:somatic_snv_caller_strand_grid
_ln_som_match	./src/c++/lib/applications/strelka/somatic_indel_grid.hh	/^    blt_float_t _ln_som_match;$/;"	m	struct:somatic_indel_caller_grid
_ln_som_mismatch	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.hh	/^    blt_float_t _ln_som_mismatch;$/;"	m	struct:somatic_snv_caller_strand_grid
_ln_som_mismatch	./src/c++/lib/applications/strelka/somatic_indel_grid.hh	/^    blt_float_t _ln_som_mismatch;$/;"	m	struct:somatic_indel_caller_grid
_ln_sse_rate	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.hh	/^    blt_float_t _ln_sse_rate;$/;"	m	struct:somatic_snv_caller_strand_grid
_lnprior	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    prior_group _lnprior;$/;"	m	struct:pprob_digt_caller
_lnprior_haploid	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    prior_group _lnprior_haploid;$/;"	m	struct:pprob_digt_caller
_load_index	./src/c++/lib/htsapi/bam_streamer.cpp	/^_load_index()$/;"	f	class:bam_streamer
_load_index	./src/c++/lib/htsapi/hts_streamer.cpp	/^_load_index()$/;"	f	class:hts_streamer
_locusBuffer	./src/c++/lib/applications/starling/VariantPhaser.hh	/^    LocusBuffer _locusBuffer;$/;"	m	struct:VariantPhaser
_log0	./src/c++/lib/blt_util/LogValuePair.cpp	/^const double LogValuePair::_log0 = (-std::numeric_limits<double>::infinity());$/;"	m	class:LogValuePair	file:
_log0	./src/c++/lib/blt_util/LogValuePair.hh	/^    static const double _log0;$/;"	m	struct:LogValuePair
_logValue	./src/c++/lib/blt_util/LogValuePair.hh	/^    double _logValue = _log0;$/;"	m	struct:LogValuePair
_lowLogParams	./src/c++/lib/calibration/IndelErrorModel.hh	/^    AdaptiveIndelErrorModelLogParams _lowLogParams;$/;"	m	class:AdaptiveIndelErrorModel
_lowRepeatCount	./src/c++/lib/calibration/IndelErrorModel.hh	/^    unsigned _lowRepeatCount = lowRepeatCount;$/;"	m	class:AdaptiveIndelErrorModel
_maxBufferSize	./src/c++/lib/starling_common/ReferenceRepeatFinder.hh	/^    const unsigned _maxBufferSize;$/;"	m	class:ReferenceRepeatFinder
_maxCacheK	./src/c++/lib/starling_common/min_count_binom_gte_cache.cpp	/^constexpr unsigned min_count_binom_gte_cache::_maxCacheK;$/;"	m	class:min_count_binom_gte_cache	file:
_maxCacheK	./src/c++/lib/starling_common/min_count_binom_gte_cache.hh	/^    static constexpr unsigned _maxCacheK = 18;$/;"	m	struct:min_count_binom_gte_cache
_maxCandidateDepth	./src/c++/lib/starling_common/IndelBuffer.hh	/^    double _maxCandidateDepth = -1.0;$/;"	m	struct:IndelBuffer
_maxChromDepth	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    double _maxChromDepth = 0.;$/;"	m	struct:SequenceErrorCountsPosProcessor
_maxChromDepth	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    double _maxChromDepth = 0.;$/;"	m	struct:ScoringModelManager
_maxChromDepth	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    double _maxChromDepth = 0.;$/;"	m	struct:strelka_pos_processor
_maxErrorRate	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    const double _maxErrorRate = .3;$/;"	m	class:IndelModelProduction
_maxIndelSize	./src/c++/lib/starling_common/ActiveRegion.hh	/^    const unsigned _maxIndelSize;$/;"	m	class:ActiveRegion
_maxIndelSize	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    const unsigned _maxIndelSize;$/;"	m	class:ActiveRegionDetector
_maxKey	./src/c++/lib/blt_util/RangeMap.hh	/^    KeyType _maxKey;$/;"	m	struct:RangeMap
_maxPos	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    int32_t _maxPos = 0;$/;"	m	struct:MeanDepthTracker	file:
_maxPos	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    pos_t _maxPos = 0;$/;"	m	struct:DepthTracker	file:
_maxRepeatCounts	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    std::vector<unsigned> _maxRepeatCounts = {16, 9};$/;"	m	class:IndelModelProduction
_maxRepeatUnitLength	./src/c++/lib/starling_common/ReferenceRepeatFinder.hh	/^    const unsigned _maxRepeatUnitLength;$/;"	m	class:ReferenceRepeatFinder
_max_candidate_normal_sample_depth	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    double _max_candidate_normal_sample_depth = -1;$/;"	m	struct:SequenceErrorCountsPosProcessor
_max_pos	./src/c++/lib/blt_util/stage_manager.hh	/^    pos_t _max_pos;$/;"	m	struct:stage_manager
_max_toggle	./src/c++/lib/starling_common/starling_align_limit.hh	/^    std::vector<unsigned> _max_toggle;$/;"	m	struct:starling_align_limit
_max_winsize	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        unsigned _max_winsize;$/;"	m	struct:starling_pos_processor_base::pos_win_avgs
_max_word	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    unsigned _max_word;$/;"	m	struct:istream_line_splitter
_mdTracker	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    DepthTracker _mdTracker;$/;"	m	struct:ChromDepthTracker	file:
_meta	./src/c++/lib/calibration/IndelErrorModel.hh	/^    IndelErrorModelMetadata _meta;$/;"	m	struct:IndelErrorModel
_meta	./src/c++/lib/calibration/VariantScoringModelServer.hh	/^    VariantScoringModelMetadata _meta;$/;"	m	struct:VariantScoringModelServer
_min	./src/c++/lib/blt_util/LinearScaler.hh	/^    T _min;$/;"	m	struct:LinearScaler
_minChunk	./src/c++/lib/blt_util/RangeMap.hh	/^    const unsigned _minChunk;$/;"	m	struct:RangeMap
_minErrorRate	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    const double _minErrorRate = .0;$/;"	m	class:IndelModelProduction
_minKey	./src/c++/lib/blt_util/RangeMap.hh	/^    KeyType _minKey;$/;"	m	struct:RangeMap
_minKeyIndex	./src/c++/lib/blt_util/RangeMap.hh	/^    unsigned _minKeyIndex;$/;"	m	struct:RangeMap
_minNQSS	./src/c++/lib/applications/strelka/SomaticCallableProcessor.hh	/^    static const int _minNQSS = 15;$/;"	m	struct:SomaticCallableProcessor
_minPos	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    int32_t _minPos = 0;$/;"	m	struct:MeanDepthTracker	file:
_minQSS	./src/c++/lib/applications/strelka/SomaticCallableProcessor.hh	/^    static const int _minQSS = 15;$/;"	m	struct:SomaticCallableProcessor
_minRepeatSpan	./src/c++/lib/starling_common/ReferenceRepeatFinder.hh	/^    const unsigned _minRepeatSpan;$/;"	m	class:ReferenceRepeatFinder
_min_pos	./src/c++/lib/blt_util/stage_manager.hh	/^    pos_t _min_pos;$/;"	m	struct:stage_manager
_minpos	./src/c++/lib/blt_util/stage_manager.hh	/^    std::vector<pos_t> _minpos;$/;"	m	struct:stage_manager
_model	./src/c++/lib/applications/starling/variant_prefilter_stage.hh	/^    const ScoringModelManager& _model;$/;"	m	struct:variant_prefilter_stage
_model	./src/c++/lib/calibration/VariantScoringModelServer.hh	/^    std::unique_ptr<VariantScoringModelBase> _model;$/;"	m	struct:VariantScoringModelServer
_mtrack	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    MedianDepthTracker _mtrack;$/;"	m	struct:DepthTracker	file:
_n_allele	./src/c++/lib/blt_common/position_loghood_minfunc.hh	/^    unsigned _n_allele;$/;"	m	struct:position_allele_distro_loghood_minfunc
_n_raw_calls	./src/c++/lib/starling_common/PileupCleaner.hh	/^    unsigned _n_raw_calls = 0;$/;"	m	struct:CleanedPileup
_n_word	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    unsigned _n_word;$/;"	m	struct:istream_line_splitter
_ndata	./src/c++/lib/applications/strelka/NoiseBuffer.hh	/^    ndata_t _ndata;$/;"	m	struct:NoiseBuffer
_ne_median	./src/c++/lib/blt_util/math_util.hh	/^_ne_median($/;"	f
_ninfo	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    std::unique_ptr<nploid_info> _ninfo;$/;"	m	struct:starling_pos_processor_base
_nocompress_regions	./src/c++/lib/applications/starling/gvcf_compressor.hh	/^    const RegionTracker& _nocompress_regions;$/;"	m	struct:gvcf_compressor
_nocompress_regions	./src/c++/lib/applications/starling/starling_pos_processor.hh	/^    RegionTracker _nocompress_regions;$/;"	m	struct:starling_pos_processor
_noisePos	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    NoiseBuffer _noisePos;$/;"	m	struct:strelka_pos_processor
_nonEmptySiteCount	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    unsigned long _nonEmptySiteCount = 0;$/;"	m	struct:SequenceErrorCountsPosProcessor
_nonSTRModelParams	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    AdaptiveIndelErrorModelLogParams _nonSTRModelParams;$/;"	m	class:IndelModelProduction
_nonref_id	./src/c++/lib/blt_common/position_nonref_2allele_test.cpp	/^    const unsigned _nonref_id;$/;"	m	struct:nonref_allele_freq_loghood_sparse_func	file:
_nonvariantIndelBuffer	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^    std::vector<indel_ptr_t> _nonvariantIndelBuffer;$/;"	m	struct:VariantOverlapResolver
_normChromDepth	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    double _normChromDepth = 0.;$/;"	m	struct:SequenceErrorCountsPosProcessor
_normChromDepth	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    double _normChromDepth = 0.;$/;"	m	struct:ScoringModelManager
_normChromDepth	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    double _normChromDepth = 0.;$/;"	m	struct:strelka_pos_processor
_nots	./src/c++/lib/blt_util/observer.hh	/^    mutable nots_t _nots;$/;"	m	struct:observer
_null_size	./src/c++/lib/blt_util/window_util.hh	/^    uint32_t _null_size;$/;"	m	struct:window_average
_numVariants	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    unsigned _numVariants;$/;"	m	class:ActiveRegionDetector
_numval	./src/c++/lib/blt_util/PrettyFloat.hh	/^    FLOAT_TYPE _numval;$/;"	m	struct:PrettyFloat
_obs	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    const std::vector<ExportedIndelObservations>& _obs;$/;"	m	struct:__anon20::error_minfunc_model4	file:
_obs	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    const std::vector<ExportedIndelObservations>& _obs;$/;"	m	struct:__anon18::error_minfunc_model3	file:
_obs	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    const std::vector<ExportedIndelObservations>& _obs;$/;"	m	struct:__anon26::error_minfunc_model3	file:
_obs	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    const std::vector<ExportedIndelObservations>& _obs;$/;"	m	struct:__anon22::error_minfunc	file:
_obs	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    const std::vector<ExportedIndelObservations>& _obs;$/;"	m	struct:__anon21::error_minfunc	file:
_obs	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    const std::vector<ExportedIndelObservations>& _obs;$/;"	m	struct:error_minfunc_model3	file:
_obs	./src/c++/lib/blt_util/fastRanksum.hh	/^    std::vector<ranksumObs> _obs;$/;"	m	struct:fastRanksum
_obs	./src/c++/lib/starling_common/IndelData.hh	/^    obs_t _obs;$/;"	m	struct:BreakpointInsertSequenceManager
_obsMap	./src/c++/lib/blt_util/ranksum.hh	/^    std::map<int,ranksumObs> _obsMap;  \/\/ observations for ref\/alt bases$/;"	m	class:ranksum
_obs_count	./src/c++/lib/starling_common/IndelData.hh	/^    unsigned _obs_count = 0;$/;"	m	struct:BreakpointInsertSequenceManager
_observation_bed_osptr	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsStreams.hh	/^    std::unique_ptr<std::ostream> _observation_bed_osptr;$/;"	m	struct:SequenceErrorCountsStreams
_obss	./src/c++/lib/blt_util/observer.hh	/^    mutable obss_t _obss;$/;"	m	struct:notifier
_occup	./src/c++/lib/blt_util/RangeMap.hh	/^    boost::dynamic_bitset<> _occup;$/;"	m	struct:RangeMap
_occup_mask_helper	./src/c++/lib/blt_util/RangeMap.hh	/^    boost::dynamic_bitset<> _occup_mask_helper;$/;"	m	struct:RangeMap
_occup_rotate_helper	./src/c++/lib/blt_util/RangeMap.hh	/^    boost::dynamic_bitset<> _occup_rotate_helper;$/;"	m	struct:RangeMap
_offset	./src/c++/lib/blt_util/align_path.hh	/^    unsigned _offset;$/;"	m	struct:ALIGNPATH::exon_offsets
_offset	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    pos_t _offset;$/;"	m	struct:reference_contig_segment
_offset	./src/c++/lib/htsapi/bam_seq.hh	/^    uint16_t _offset;$/;"	m	struct:bam_seq
_offset	./src/c++/lib/starling_common/starling_read_segment.hh	/^    uint16_t _offset;$/;"	m	struct:read_segment
_ofsptr	./src/c++/lib/common/OutStream.hh	/^    std::unique_ptr<std::ofstream> _ofsptr;$/;"	m	struct:OutStream
_oldDepth	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    double _oldDepth; \/\/ previous depth is stored to determine convergence$/;"	m	struct:ChromDepthTracker	file:
_opt	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    const SequenceErrorCountsOptions& _opt;$/;"	m	struct:SequenceErrorCountsPosProcessor
_opt	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    const gvcf_options& _opt;$/;"	m	struct:ScoringModelManager
_opt	./src/c++/lib/applications/starling/VariantPhaser.hh	/^    const starling_options& _opt;$/;"	m	struct:VariantPhaser
_opt	./src/c++/lib/applications/starling/gvcf_compressor.hh	/^    const gvcf_options& _opt;$/;"	m	struct:gvcf_compressor
_opt	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    const starling_options& _opt;$/;"	m	struct:gvcf_writer
_opt	./src/c++/lib/applications/starling/starling_pile_test_run.hh	/^    starling_options& _opt;$/;"	m	struct:starling_pile_caller
_opt	./src/c++/lib/applications/starling/starling_pos_processor.hh	/^    const starling_options& _opt;$/;"	m	struct:starling_pos_processor
_opt	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    const strelka_options& _opt;$/;"	m	struct:SomaticIndelVcfWriter
_opt	./src/c++/lib/applications/strelka/strelka_pile_test_run.hh	/^    strelka_options& _opt;$/;"	m	struct:strelka_pile_caller
_opt	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    const strelka_options& _opt;$/;"	m	struct:strelka_pos_processor
_opt	./src/c++/lib/starling_common/IndelBuffer.hh	/^    const starling_base_options& _opt;$/;"	m	struct:IndelBuffer
_opt	./src/c++/lib/starling_common/PileupCleaner.hh	/^    const blt_options& _opt;$/;"	m	struct:PileupCleaner
_opt	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    const starling_base_options& _opt;$/;"	m	struct:starling_pos_processor_base
_opt	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^    starling_base_options_test _opt;$/;"	m	struct:TestIndelBuffer	file:
_order	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    std::vector<OrderData> _order;$/;"	m	struct:HtsMergeStreamer
_os	./src/c++/lib/applications/starling/starling_pile_test_run.hh	/^    std::ostream& _os;$/;"	m	struct:starling_pile_caller
_os	./src/c++/lib/applications/strelka/strelka_pile_test_run.hh	/^    std::ostream& _os;$/;"	m	struct:strelka_pile_caller
_os	./src/c++/lib/blt_util/io_util.hh	/^    std::ostream& _os;$/;"	m	struct:StreamScoper
_osPtr	./src/c++/lib/appstats/RunStatsManager.hh	/^    std::ostream* _osPtr;$/;"	m	struct:RunStatsManager
_osPtr	./src/c++/lib/common/SegmentTimeTracker.hh	/^    std::ostream* _osPtr;$/;"	m	struct:SegmentTimeTracker
_osptr	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    std::ostream* _osptr;$/;"	m	struct:SomaticIndelVcfWriter
_osptr	./src/c++/lib/blt_util/RegionProcessor.hh	/^    std::ostream* _osptr;$/;"	m	struct:RegionProcessor
_osptr	./src/c++/lib/common/OutStream.hh	/^    std::ostream* _osptr;$/;"	m	struct:OutStream
_outputFilename	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    std::string _outputFilename;$/;"	m	class:IndelModelProduction
_papprox	./src/c++/lib/starling_common/min_count_binom_gte_cache.hh	/^    std::array<double,_maxCacheK> _papprox;$/;"	m	struct:min_count_binom_gte_cache
_params	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    double _params[MIN_PARAMS4::SIZE];$/;"	m	struct:__anon20::error_minfunc_model4	file:
_params	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    double _params[MIN_PARAMS3::SIZE];$/;"	m	struct:__anon18::error_minfunc_model3	file:
_params	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    double _params[MIN_PARAMS3::SIZE];$/;"	m	struct:__anon26::error_minfunc_model3	file:
_params	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    double _params[MIN_PARAMS::SIZE];$/;"	m	struct:__anon22::error_minfunc	file:
_params	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    double _params[MIN_PARAMS::SIZE];$/;"	m	struct:__anon21::error_minfunc	file:
_params	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    std::unique_ptr<double[]> _params;$/;"	m	struct:__anon24::error_minfunc	file:
_params	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    double _params[MIN_PARAMS3::SIZE];$/;"	m	struct:error_minfunc_model3	file:
_pdata	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    PosData _pdata;$/;"	m	struct:pos_basecall_buffer
_pdcaller	./src/c++/lib/blt_common/blt_shared.hh	/^    std::unique_ptr<pprob_digt_caller> _pdcaller;$/;"	m	struct:blt_deriv_options
_pi	./src/c++/lib/blt_common/adjust_joint_eprob.cpp	/^    const snp_pos_info& _pi;$/;"	m	struct:__anon28::sort_icall_by_eprob	file:
_pi	./src/c++/lib/blt_common/position_loghood_minfunc.hh	/^    const snp_pos_info& _pi;$/;"	m	struct:position_allele_distro_loghood_minfunc
_pi	./src/c++/lib/blt_common/position_loghood_minfunc.hh	/^    const snp_pos_info& _pi;$/;"	m	struct:position_nonref_freq_loghood_minfunc
_pi	./src/c++/lib/blt_common/position_nonref_2allele_test.cpp	/^    const snp_pos_info& _pi;$/;"	m	struct:nonref_allele_freq_loghood_sparse_func	file:
_pi	./src/c++/lib/blt_common/position_nonref_test.cpp	/^    const snp_pos_info& _pi;$/;"	m	struct:nonref_freq_loghood_sparse_func	file:
_pileupCleaner	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    PileupCleaner _pileupCleaner;$/;"	m	struct:starling_pos_processor_base
_ploidy	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    SamplePloidyState _ploidy;$/;"	m	struct:LocusSampleInfo
_ploidy	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    int _ploidy = 0;$/;"	m	struct:GenotypeLikelihoods
_ploidy	./src/c++/lib/applications/starling/ploidyUtil.hh	/^    int _ploidy = 2;$/;"	m	struct:SamplePloidyState
_ploidy	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    unsigned _ploidy;$/;"	m	struct:nploid_info
_ploidy	./src/c++/lib/htsapi/vcf_util.hh	/^    int _ploidy = 2;$/;"	m	struct:VcfGenotype
_posRange	./src/c++/lib/starling_common/ActiveRegion.hh	/^    const pos_range _posRange;$/;"	m	class:ActiveRegion
_posToActiveRegionIdMap	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    RangeMap<pos_t, ActiveRegionId> _posToActiveRegionIdMap;$/;"	m	class:ActiveRegionDetector
_pos_group	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    pos_group_t _pos_group;$/;"	m	struct:starling_read_buffer
_positionToAlignIds	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    std::vector<std::vector<align_id_t>> _positionToAlignIds;$/;"	m	class:ActiveRegionReadBuffer
_postCallStage	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::vector<unsigned> _postCallStage;$/;"	m	struct:starling_base_deriv_options
_ppb	./src/c++/lib/blt_util/stage_manager.hh	/^    pos_processor_base& _ppb;$/;"	m	struct:stage_manager
_prange	./src/c++/lib/blt_util/RegionProcessor.hh	/^    pos_range _prange;$/;"	m	struct:RegionProcessor
_prevAnchorPos	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    pos_t _prevAnchorPos;$/;"	m	class:ActiveRegionDetector
_prevVariantPos	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    pos_t _prevVariantPos;$/;"	m	class:ActiveRegionDetector
_priorRegionLength	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    double _priorRegionLength = 0;$/;"	m	struct:MeanDepthTracker	file:
_priors	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    std::vector<std::vector<ContextGenotypePriors>> _priors;$/;"	m	struct:GenotypePriorSet
_progname	./src/c++/lib/blt_util/sig_handler.cpp	/^static std::string _progname;$/;"	v	file:
_ps_median	./src/c++/lib/blt_util/math_util.hh	/^_ps_median($/;"	f
_pstat	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    mutable depth_stream_stat _pstat;$/;"	m	struct:depth_stream_stat_range
_ptrMat	./src/c++/lib/alignment/GlobalAligner.hh	/^    mutable basic_matrix<PtrVal> _ptrMat;$/;"	m	struct:GlobalAligner
_qsize	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^    unsigned _qsize;$/;"	m	struct:qval_distro	file:
_qsize	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^    unsigned _qsize;$/;"	m	struct:qval_distro	file:
_qualParamSize	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    unsigned _qualParamSize;$/;"	m	struct:__anon19::error_minfunc	file:
_qualParamSize	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    unsigned _qualParamSize;$/;"	m	struct:__anon24::error_minfunc	file:
_qval_cdf	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^    double _qval_cdf[MAX_QVAL];$/;"	m	struct:qval_distro	file:
_qval_cdf	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^    double _qval_cdf[MAX_QVAL];$/;"	m	struct:qval_distro	file:
_qval_id	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^    uint8_t _qval_id[MAX_QVAL];$/;"	m	struct:qval_distro	file:
_qval_id	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^    uint8_t _qval_id[MAX_QVAL];$/;"	m	struct:qval_distro	file:
_r	./src/c++/lib/htsapi/bam_seq.hh	/^    const reference_contig_segment& _r;$/;"	m	struct:rc_segment_bam_seq
_range	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    known_pos_range2 _range;$/;"	m	struct:GermlineIndelLocusInfo
_rawPileupPtr	./src/c++/lib/starling_common/PileupCleaner.hh	/^    const snp_pos_info* _rawPileupPtr = nullptr;$/;"	m	struct:CleanedPileup
_readBuffer	./src/c++/lib/starling_common/ActiveRegion.hh	/^    const ActiveRegionReadBuffer& _readBuffer;$/;"	m	class:ActiveRegion
_readBuffer	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    ActiveRegionReadBuffer _readBuffer;$/;"	m	class:ActiveRegionDetector
_readBufferRange	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    pos_range _readBufferRange;$/;"	m	class:ActiveRegionReadBuffer
_readIndex	./src/c++/lib/starling_common/starling_read.hh	/^    const align_id_t _readIndex;$/;"	m	struct:starling_read
_read_data	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    read_data_t _read_data;$/;"	m	struct:starling_read_buffer
_read_rec	./src/c++/lib/starling_common/starling_read.hh	/^    bam_record _read_rec;$/;"	m	struct:starling_read
_realign_bam_ptr	./src/c++/lib/starling_common/starling_streams_base.hh	/^    std::vector<std::unique_ptr<bam_dumper>> _realign_bam_ptr;$/;"	m	struct:starling_streams_base
_record_no	./src/c++/lib/htsapi/bam_streamer.hh	/^    unsigned _record_no;$/;"	m	struct:bam_streamer
_record_no	./src/c++/lib/htsapi/hts_streamer.hh	/^    unsigned _record_no;$/;"	m	struct:hts_streamer
_records	./src/c++/lib/blt_util/RecordTracker.hh	/^    indel_record_t _records;$/;"	m	struct:RecordTracker
_ref	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    const reference_contig_segment& _ref;$/;"	m	struct:gvcf_writer
_ref	./src/c++/lib/starling_common/ActiveRegion.hh	/^    const reference_contig_segment& _ref;$/;"	m	class:ActiveRegion
_ref	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    const reference_contig_segment& _ref;$/;"	m	class:ActiveRegionDetector
_ref	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    const reference_contig_segment& _ref;$/;"	m	class:ActiveRegionReadBuffer
_ref	./src/c++/lib/starling_common/IndelBuffer.hh	/^    const reference_contig_segment& _ref;$/;"	m	struct:IndelBuffer
_ref	./src/c++/lib/starling_common/ReferenceRepeatFinder.hh	/^    const reference_contig_segment& _ref;$/;"	m	class:ReferenceRepeatFinder
_ref	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    const reference_contig_segment& _ref;$/;"	m	struct:pos_basecall_buffer
_ref	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    const reference_contig_segment& _ref;$/;"	m	struct:starling_pos_processor_base
_refRepeatFinder	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    ReferenceRepeatFinder _refRepeatFinder;$/;"	m	class:ActiveRegionReadBuffer
_ref_base	./src/c++/lib/blt_common/snp_pos_info.hh	/^    char _ref_base; \/\/ always fwd-strand base$/;"	m	struct:snp_pos_info
_ref_gtype	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    unsigned _ref_gtype[N_BASE];$/;"	m	struct:nploid_info
_referenceFilename	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    std::string _referenceFilename;$/;"	m	struct:HtsMergeStreamer
_region	./src/c++/lib/htsapi/bam_streamer.hh	/^    std::string _region;$/;"	m	struct:bam_streamer
_region	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    std::string _region;$/;"	m	struct:HtsMergeStreamer
_regions	./src/c++/lib/blt_util/RegionTracker.hh	/^    region_t _regions;$/;"	m	struct:RegionPayloadTracker
_regions	./src/c++/lib/blt_util/RegionTracker.hh	/^    region_t _regions;$/;"	m	struct:RegionTracker
_repeatPatternSize	./src/c++/lib/calibration/IndelErrorModel.hh	/^    unsigned _repeatPatternSize = 0;$/;"	m	class:AdaptiveIndelErrorModel
_repeatPatterns	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    std::vector<unsigned> _repeatPatterns = {1, 2};$/;"	m	class:IndelModelProduction
_repeatSpan	./src/c++/lib/starling_common/ReferenceRepeatFinder.hh	/^    std::vector<std::vector<unsigned>> _repeatSpan;$/;"	m	class:ReferenceRepeatFinder
_reportInfo	./src/c++/lib/starling_common/IndelData.hh	/^    AlleleReportInfo _reportInfo;$/;"	m	struct:IndelData
_reportRange	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    known_pos_range2 _reportRange;$/;"	m	struct:gvcf_writer
_reportRange	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    known_pos_range2 _reportRange;$/;"	m	struct:starling_pos_processor_base
_report_range	./src/c++/lib/blt_util/stage_manager.hh	/^    const pos_range _report_range;$/;"	m	struct:stage_manager
_ric	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    read_id_counter _ric;$/;"	m	struct:starling_pos_processor_base
_ric	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    read_id_counter _ric; \/\/ only used if a counter isn't specified on the cmdline$/;"	m	struct:starling_read_buffer
_ricp	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    read_id_counter* _ricp;$/;"	m	struct:starling_read_buffer
_rmi	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    read_mismatch_info _rmi;$/;"	m	struct:starling_pos_processor_base
_s	./src/c++/lib/blt_common/sparse_function_1d.cpp	/^    blt_float_t _s,_i;$/;"	m	struct:linear_function	file:
_s	./src/c++/lib/htsapi/bam_seq.hh	/^    const char* _s;$/;"	m	struct:string_bam_seq
_s	./src/c++/lib/htsapi/bam_seq.hh	/^    const uint8_t* _s;$/;"	m	struct:bam_seq
_sample	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    std::vector<std::unique_ptr<sample_info>> _sample;$/;"	m	struct:starling_pos_processor_base
_sampleCount	./src/c++/lib/applications/starling/VariantPhaser.hh	/^    const unsigned _sampleCount;$/;"	m	struct:VariantPhaser
_sampleCount	./src/c++/lib/calibration/IndelErrorModel.hh	/^    unsigned _sampleCount;$/;"	m	struct:IndelErrorModel
_sampleCount	./src/c++/lib/htsapi/vcf_streamer.hh	/^    unsigned _sampleCount;$/;"	m	struct:vcf_streamer
_sampleCount	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    unsigned _sampleCount;$/;"	m	class:CandidateSnvBuffer
_sampleCount	./src/c++/lib/starling_common/starling_streams_base.hh	/^    unsigned _sampleCount;$/;"	m	struct:starling_streams_base
_sampleData	./src/c++/lib/starling_common/IndelData.hh	/^    std::vector<IndelSampleData> _sampleData;$/;"	m	struct:IndelData
_sampleErrorRates	./src/c++/lib/calibration/IndelErrorModel.hh	/^    std::vector<IndelErrorRateSet> _sampleErrorRates;$/;"	m	struct:IndelErrorModel
_sampleIndex	./src/c++/lib/starling_common/ActiveRegion.hh	/^    const unsigned _sampleIndex;$/;"	m	class:ActiveRegion
_sampleIndex	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    const unsigned _sampleIndex;$/;"	m	class:ActiveRegionDetector
_sampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    std::vector<LocusSampleInfo> _sampleInfo;$/;"	m	struct:LocusInfo
_sampleName	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsStreams.hh	/^    std::string _sampleName;$/;"	m	struct:SequenceErrorCountsStreams
_sampleName	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^    std::string _sampleName;$/;"	m	class:IndelErrorModelJson
_sampleName	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^    std::string _sampleName;$/;"	m	struct:SequenceErrorCounts
_sampleNames	./src/c++/lib/applications/starling/starling_streams.hh	/^    std::vector<std::string> _sampleNames;$/;"	m	struct:starling_streams
_scallProcessor	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    SomaticCallableProcessor _scallProcessor;$/;"	m	struct:strelka_pos_processor
_scanstr	./src/c++/lib/blt_util/stringer.hh	/^    const char* _scanstr;$/;"	m	struct:stringer_base
_score1	./src/c++/lib/alignment/GlobalAligner.hh	/^    mutable ScoreVec _score1;$/;"	m	struct:GlobalAligner
_score2	./src/c++/lib/alignment/GlobalAligner.hh	/^    mutable ScoreVec _score2;$/;"	m	struct:GlobalAligner
_scores	./src/c++/lib/alignment/AlignerBase.hh	/^    const AlignmentScores<ScoreType> _scores;$/;"	m	struct:AlignerBase
_scoringModels	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^    const ScoringModelManager& _scoringModels;$/;"	m	struct:VariantOverlapResolver
_scoringModels	./src/c++/lib/applications/starling/gvcf_aggregator.hh	/^    ScoringModelManager _scoringModels;$/;"	m	class:gvcf_aggregator
_scoringModels	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    const ScoringModelManager& _scoringModels;$/;"	m	struct:gvcf_writer
_sdata	./src/c++/lib/blt_util/stage_manager.hh	/^    stage_data _sdata;$/;"	m	struct:stage_manager
_segment	./src/c++/lib/blt_util/align_path.hh	/^    unsigned _segment;$/;"	m	struct:ALIGNPATH::exon_offsets
_sep	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    char _sep;$/;"	m	struct:istream_line_splitter
_seq	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    std::string _seq;$/;"	m	struct:reference_contig_segment
_seq	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^    std::vector<align_position> _seq;$/;"	m	struct:align_printer	file:
_sf	./src/c++/lib/blt_common/position_nonref_2allele_test.cpp	/^    sparse_function& _sf;$/;"	m	struct:nonref_allele_freq_loghood_sparse_func	file:
_sf	./src/c++/lib/blt_common/position_nonref_test.cpp	/^    sparse_function& _sf;$/;"	m	struct:nonref_freq_loghood_sparse_func	file:
_sicaller_grid	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::unique_ptr<somatic_indel_caller_grid> _sicaller_grid;$/;"	m	struct:strelka_deriv_options
_sink	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^    std::shared_ptr<variant_pipe_stage_base> _sink;$/;"	m	class:variant_pipe_stage_base
_siteAlleleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    std::vector<GermlineSiteAlleleInfo> _siteAlleleInfo;$/;"	m	struct:GermlineSiteLocusInfo
_siteBuffer	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^    std::vector<std::unique_ptr<GermlineDiploidSiteLocusInfo>> _siteBuffer;$/;"	m	struct:VariantOverlapResolver
_siteLoci	./src/c++/lib/applications/starling/test/VariantOverlapResolver_test.cpp	/^    std::vector<std::unique_ptr<GermlineSiteLocusInfo>> _siteLoci;$/;"	m	struct:DummyVariantSink	file:
_siteLoci	./src/c++/lib/applications/starling/test/VariantPhaserTest.cpp	/^    std::vector<std::unique_ptr<GermlineSiteLocusInfo>> _siteLoci;$/;"	m	struct:DummyVariantSink	file:
_siteSampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    std::vector<GermlineSiteSampleInfo> _siteSampleInfo;$/;"	m	struct:GermlineSiteLocusInfo
_size	./src/c++/lib/blt_util/window_util.hh	/^    uint32_t _size;$/;"	m	struct:window_average
_size	./src/c++/lib/htsapi/bam_seq.hh	/^    uint16_t _size;$/;"	m	struct:bam_seq
_size	./src/c++/lib/htsapi/bam_seq.hh	/^    unsigned _size;$/;"	m	struct:string_bam_seq
_size	./src/c++/lib/starling_common/starling_read_segment.hh	/^    uint16_t _size;$/;"	m	struct:read_segment
_snoise_osptr	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_streams.hh	/^    std::ostream* _snoise_osptr;$/;"	m	struct:snoise_streams
_snvBuffer	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    char _snvBuffer[MaxDepth][MaxBufferSize];$/;"	m	class:ActiveRegionReadBuffer
_snvScoringModelPtr	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    std::unique_ptr<VariantScoringModelServer> _snvScoringModelPtr;$/;"	m	struct:ScoringModelManager
_somatic_callable_osptr	./src/c++/lib/applications/strelka/strelka_streams.hh	/^    std::unique_ptr<std::ostream> _somatic_callable_osptr;$/;"	m	struct:strelka_streams
_somatic_indel_osptr	./src/c++/lib/applications/strelka/strelka_streams.hh	/^    std::unique_ptr<std::ostream> _somatic_indel_osptr;$/;"	m	struct:strelka_streams
_somatic_snv_osptr	./src/c++/lib/applications/strelka/strelka_streams.hh	/^    std::unique_ptr<std::ostream> _somatic_snv_osptr;$/;"	m	struct:strelka_streams
_sread	./src/c++/lib/starling_common/starling_read_segment.hh	/^    const starling_read& _sread;$/;"	m	struct:read_segment
_sscaller_strand_grid	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::unique_ptr<somatic_snv_caller_strand_grid> _sscaller_strand_grid;$/;"	m	struct:strelka_deriv_options
_stage_pos	./src/c++/lib/blt_util/stage_manager.hh	/^    stage_pos_t _stage_pos;$/;"	m	struct:stage_data
_stage_pos_ptr	./src/c++/lib/blt_util/stage_manager.hh	/^    const stage_data::stage_pos_t* _stage_pos_ptr;$/;"	m	struct:stage_manager
_stage_size	./src/c++/lib/blt_util/stage_manager.hh	/^    unsigned _stage_size;$/;"	m	struct:stage_manager
_stagemanPtr	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    std::unique_ptr<stage_manager> _stagemanPtr;$/;"	m	struct:starling_pos_processor_base
_statsManager	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    RunStatsManager& _statsManager;$/;"	m	struct:starling_pos_processor_base
_streamQueue	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    queue_t _streamQueue;$/;"	m	struct:HtsMergeStreamer
_stream_name	./src/c++/lib/htsapi/bam_dumper.hh	/^    std::string _stream_name;$/;"	m	struct:bam_dumper
_stream_name	./src/c++/lib/htsapi/bam_streamer.hh	/^    std::string _stream_name;$/;"	m	struct:bam_streamer
_stream_name	./src/c++/lib/htsapi/hts_streamer.hh	/^    std::string _stream_name;$/;"	m	struct:hts_streamer
_streams	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    const SequenceErrorCountsStreams& _streams;$/;"	m	struct:SequenceErrorCountsPosProcessor
_streams	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    const starling_streams& _streams;$/;"	m	struct:gvcf_writer
_streams	./src/c++/lib/applications/starling/starling_pos_processor.hh	/^    const starling_streams& _streams;$/;"	m	struct:starling_pos_processor
_streams	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    const strelka_streams& _streams;$/;"	m	struct:strelka_pos_processor
_streams	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    const starling_streams_base& _streams;$/;"	m	struct:starling_pos_processor_base
_strval	./src/c++/lib/blt_util/PrettyFloat.hh	/^    std::string _strval;$/;"	m	struct:PrettyFloat
_t	./src/c++/lib/blt_util/time_util.hh	/^    TimeTracker& _t;$/;"	m	struct:TimeScoper
_thetas	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.hh	/^    std::map<unsigned, std::vector<double> > _thetas;$/;"	m	class:IndelModelProduction
_tidx	./src/c++/lib/htsapi/hts_streamer.hh	/^    tbx_t* _tidx;$/;"	m	struct:hts_streamer
_tier2_cpi	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    CleanedPileup _tier2_cpi[STRELKA_SAMPLE_TYPE::SIZE];$/;"	m	struct:strelka_pos_processor
_timer	./src/c++/lib/blt_util/time_util.hh	/^    boost::timer::cpu_timer _timer;$/;"	m	struct:TimeTracker
_titr	./src/c++/lib/htsapi/hts_streamer.hh	/^    hts_itr_t* _titr;$/;"	m	struct:hts_streamer
_tmp_os	./src/c++/lib/blt_util/io_util.hh	/^    std::unique_ptr<std::ofstream> _tmp_os;$/;"	m	struct:StreamScoper
_total	./src/c++/lib/blt_util/MeanTracker.hh	/^    double _total = 0.;$/;"	m	struct:MeanTracker
_total	./src/c++/lib/blt_util/MedianDepthTracker.hh	/^    unsigned _total = 0;$/;"	m	struct:MedianDepthTracker
_total	./src/c++/lib/blt_util/window_util.hh	/^    int64_t _total;$/;"	m	struct:window_average
_totalReadLength	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    double _totalReadLength = 0;$/;"	m	struct:MeanDepthTracker	file:
_total_qual	./src/c++/lib/blt_common/hapscore.hh	/^    uint16_t _total_qual;$/;"	m	struct:hap_cand
_ustat	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    depth_stream_stat _ustat;$/;"	m	struct:depth_stream_stat_range
_val	./src/c++/lib/blt_common/adjust_joint_eprob.hh	/^    std::vector<blt_float_t> _val;$/;"	m	struct:dependent_prob_cache
_val	./src/c++/lib/blt_util/depth_buffer.hh	/^    _val(const pos_t pos) const$/;"	f	struct:depth_buffer_base
_value	./src/c++/lib/blt_util/LogValuePair.hh	/^    double _value = 0.;$/;"	m	struct:LogValuePair
_variantCounter	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    std::vector<unsigned> _variantCounter;$/;"	m	class:ActiveRegionReadBuffer
_variantIndelBuffer	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^    std::vector<indel_ptr_t> _variantIndelBuffer;$/;"	m	struct:VariantOverlapResolver
_variantInfo	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    std::vector<std::vector<VariantType>> _variantInfo;$/;"	m	class:ActiveRegionReadBuffer
_variantLocusAlreadyOutputToPos	./src/c++/lib/applications/starling/starling_pos_processor.hh	/^    pos_t _variantLocusAlreadyOutputToPos = -1;$/;"	m	struct:starling_pos_processor
_variantPhaserPtr	./src/c++/lib/applications/starling/gvcf_aggregator.hh	/^    std::shared_ptr<VariantPhaser> _variantPhaserPtr;$/;"	m	class:gvcf_aggregator
_vcf	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        std::vector<std::unique_ptr<vcf_streamer>> _vcf;$/;"	m	struct:HtsMergeStreamer::HtsData
_vcfrec	./src/c++/lib/htsapi/vcf_streamer.hh	/^    vcf_record _vcfrec;$/;"	m	struct:vcf_streamer
_wav	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        std::vector<win_avg_set> _wav;$/;"	m	struct:starling_pos_processor_base::pos_win_avgs
a	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    HaplotypeId a;$/;"	m	struct:HaplotypeIdAndCountRatio
abs_tol	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^    const int abs_tol;$/;"	m	struct:gvcf_block_site_record
add	./src/c++/lib/blt_common/MapqTracker.hh	/^    add(const uint8_t mapq)$/;"	f	struct:MapqTracker
add	./src/c++/lib/blt_util/stream_stat.hh	/^    void add(const double x)$/;"	f	struct:stream_stat
addAlignIdToPos	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    void addAlignIdToPos(const align_id_t alignId, const pos_t pos)$/;"	f	class:ActiveRegionReadBuffer
addAlignmentIndelsToPosProcessor	./src/c++/lib/starling_common/starling_pos_processor_indel_util.cpp	/^addAlignmentIndelsToPosProcessor($/;"	f
addAllelesAtOtherPositions	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^addAllelesAtOtherPositions($/;"	f
addAltAlleleHaplotypeCountRatio	./src/c++/lib/htsapi/vcf_util.hh	/^    addAltAlleleHaplotypeCountRatio(const float altAlleleHaplotypeCountRatio)$/;"	f	struct:VcfGenotype
addAltCount	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^addAltCount($/;"	f	class:BaseErrorContextInputObservation
addAltIndelAllele	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    addAltIndelAllele($/;"	f	struct:GermlineIndelLocusInfo
addAltSiteAllele	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    addAltSiteAllele($/;"	f	struct:GermlineSiteLocusInfo
addBackground	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^addBackground($/;"	f	class:IndelErrorCounts
addBase	./src/c++/lib/assembly/IterativeAssembler.cpp	/^addBase($/;"	f	file:
addBase	./src/c++/lib/assembly/SmallAssembler.cpp	/^addBase($/;"	f	file:
addCallRegionIndel	./src/c++/lib/appstats/RunStatsManager.hh	/^    addCallRegionIndel(const bool isCandidate)$/;"	f	struct:RunStatsManager
addCandidateSnv	./src/c++/lib/starling_common/CandidateSnvBuffer.cpp	/^void CandidateSnvBuffer::addCandidateSnv($/;"	f	class:CandidateSnvBuffer
addDepthSkip	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^addDepthSkip($/;"	f	class:BaseErrorCounts
addDepthSkip	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^addDepthSkip($/;"	f	class:IndelErrorCounts
addEmptySkip	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^addEmptySkip($/;"	f	class:BaseErrorCounts
addError	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^addError($/;"	f	class:IndelErrorCounts
addExcludedRegionSkip	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^addExcludedRegionSkip($/;"	f	class:BaseErrorCounts
addExcludedRegionSkip	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^addExcludedRegionSkip($/;"	f	class:IndelErrorCounts
addIndelAllelesToLocus	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^addIndelAllelesToLocus($/;"	f	file:
addIndelObservation	./src/c++/lib/starling_common/IndelBuffer.cpp	/^addIndelObservation($/;"	f	class:IndelBuffer
addIndelObservation	./src/c++/lib/starling_common/IndelData.cpp	/^addIndelObservation($/;"	f	class:IndelData
addIndelObservation	./src/c++/lib/starling_common/IndelData.cpp	/^addIndelObservation($/;"	f	class:IndelSampleData
addIndelSampleLegacyInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^addIndelSampleLegacyInfo($/;"	f	file:
addIndelSamplePileupInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^addIndelSamplePileupInfo($/;"	f	file:
addIndelWindowData	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.cpp	/^addIndelWindowData($/;"	f	class:SomaticIndelVcfWriter
addKeysToCandidateAlignment	./src/c++/lib/starling_common/starling_read_align.cpp	/^addKeysToCandidateAlignment($/;"	f	file:
addKnownVariant	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^addKnownVariant($/;"	f	class:SequenceErrorCountsPosProcessor
addLocusToBuffer	./src/c++/lib/applications/starling/VariantPhaser.hh	/^    void addLocusToBuffer(std::unique_ptr<LocusInfo> locusPtr)$/;"	f	struct:VariantPhaser
addMotif	./src/c++/lib/calibration/IndelErrorModelJson.cpp	/^addMotif(unsigned repeatPatternSize,$/;"	f	class:IndelErrorModelJson
addNoiseSkip	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^addNoiseSkip($/;"	f	class:BaseErrorCounts
addObs	./src/c++/lib/blt_util/MedianDepthTracker.hh	/^    addObs(const unsigned val)$/;"	f	struct:MedianDepthTracker
addObservation	./src/c++/lib/blt_util/MeanTracker.hh	/^    addObservation(const double obs)$/;"	f	struct:MeanTracker
addObservation	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^addObservation($/;"	f	class:BaseErrorContextObservationData
addObservation	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^addObservation($/;"	f	class:IndelBackgroundObservationData
addObservation	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^addObservation($/;"	f	class:IndelErrorContextObservationData
addObservation	./src/c++/lib/starling_common/IndelData.hh	/^    addObservation(const std::string& seq)$/;"	f	struct:BreakpointInsertSequenceManager
addPostCallStage	./src/c++/lib/starling_common/starling_base_shared.hh	/^    addPostCallStage($/;"	f	struct:starling_base_deriv_options
addRate	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    addRate($/;"	f	struct:IndelErrorRateSet
addRead	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    addRead($/;"	f	struct:DepthTracker
addRead	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    addRead($/;"	f	struct:MeanDepthTracker
addRead	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    addRead(const bam_record& bamRead)$/;"	f	struct:ChromDepthTracker
addRefCount	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^addRefCount($/;"	f	class:BaseErrorContextInputObservation
addRegion	./src/c++/lib/blt_util/RegionTracker.cpp	/^addRegion($/;"	f	class:RegionTracker
addRegion	./src/c++/lib/blt_util/RegionTrackerImpl.hh	/^addRegion($/;"	f	class:RegionPayloadTracker
addSiteObservation	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^addSiteObservation($/;"	f	class:BaseErrorCounts
addSoftClipCount	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    void addSoftClipCount(const pos_t pos, const unsigned count)$/;"	f	class:ActiveRegionReadBuffer
addToRegion	./src/c++/lib/applications/strelka/SomaticCallableProcessor.hh	/^    addToRegion($/;"	f	struct:SomaticCallableProcessor
addToRegion	./src/c++/lib/blt_util/RegionProcessor.cpp	/^addToRegion($/;"	f	class:RegionProcessor
addVariantAllele	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.hh	/^    addVariantAllele($/;"	f	struct:OrthogonalVariantAlleleCandidateGroup
addVariantCount	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    void addVariantCount(const pos_t pos, const unsigned count)$/;"	f	class:ActiveRegionReadBuffer
addVcfRecord	./src/c++/lib/blt_util/RecordTracker.cpp	/^addVcfRecord($/;"	f	class:RecordTracker
add_alignment_to_depth_buffer	./src/c++/lib/blt_util/depth_buffer_util.cpp	/^add_alignment_to_depth_buffer($/;"	f
add_base	./src/c++/lib/blt_common/ref_context.cpp	/^    add_base(const char b)$/;"	f	struct:ihpol_data
add_gvcf_filters	./src/c++/lib/applications/starling/gvcf_header.cpp	/^add_gvcf_filters($/;"	f	file:
add_indel	./src/c++/lib/applications/starling/gvcf_aggregator.cpp	/^gvcf_aggregator::add_indel(std::unique_ptr<GermlineIndelLocusInfo> info)$/;"	f	class:gvcf_aggregator
add_indels_in_range	./src/c++/lib/starling_common/starling_read_align.cpp	/^add_indels_in_range($/;"	f	file:
add_observation	./src/c++/lib/blt_util/fastRanksum.hh	/^    add_observation($/;"	f	struct:fastRanksum
add_observation	./src/c++/lib/blt_util/ranksum.hh	/^    add_observation($/;"	f	class:ranksum
add_path_segment	./src/c++/lib/starling_common/starling_read_align.cpp	/^add_path_segment($/;"	f	file:
add_pin_exception_info	./src/c++/lib/starling_common/starling_read_align.cpp	/^add_pin_exception_info($/;"	f	file:
add_read_alignment	./src/c++/lib/starling_common/starling_read_buffer.cpp	/^add_read_alignment($/;"	f	class:starling_read_buffer
add_site	./src/c++/lib/applications/starling/gvcf_aggregator.cpp	/^add_site(std::unique_ptr<GermlineSiteLocusInfo> si)$/;"	f	class:gvcf_aggregator
add_site_internal	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^add_site_internal($/;"	f	class:gvcf_writer
add_stage	./src/c++/lib/blt_util/stage_manager.cpp	/^add_stage(const int id,$/;"	f	class:stage_data
add_stage	./src/c++/lib/blt_util/stage_manager.hh	/^    add_stage(const int id)$/;"	f	struct:stage_data
add_win	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        add_win($/;"	f	struct:starling_pos_processor_base::pos_win_avgs
adjust_icalls_eprob	./src/c++/lib/blt_common/adjust_joint_eprob.cpp	/^adjust_icalls_eprob(const blt_options& opt,$/;"	f	file:
adjust_joint_eprob	./src/c++/lib/blt_common/adjust_joint_eprob.cpp	/^adjust_joint_eprob(const blt_options& opt,$/;"	f
aeb2bam	./src/c++/lib/htsapi/bam_streamer.cpp	/^aeb2bam () {$/;"	f	class:bam_streamer
aebaib_prefix	./src/c++/lib/htsapi/bam_streamer.hh	/^    std::string aebaib_prefix;$/;"	m	struct:bam_streamer
aib2bam	./src/c++/lib/htsapi/bam_streamer.cpp	/^aib2bam () {$/;"	f	class:bam_streamer
al	./src/c++/lib/starling_common/CandidateAlignment.hh	/^    alignment al;$/;"	m	struct:CandidateAlignment
align	./src/c++/lib/alignment/GlobalAlignerImpl.hh	/^align($/;"	f	class:GlobalAligner
align	./src/c++/lib/alignment/SingleRefAlignerShared.hh	/^    Alignment align;$/;"	m	struct:AlignmentResult
alignFileOpt	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    AlignmentFileOptions alignFileOpt;$/;"	m	struct:SequenceErrorCountsOptions
alignFileOpt	./src/c++/lib/applications/starling/starling_shared.hh	/^    AlignmentFileOptions alignFileOpt;$/;"	m	struct:starling_options
alignFileOpt	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    TumorNormalAlignmentFileOptions alignFileOpt;$/;"	m	struct:strelka_options
alignFileOpt	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_shared.hh	/^    AlignmentFileOptions alignFileOpt;$/;"	m	struct:snoise_options
align_id_t	./src/c++/lib/starling_common/starling_types.hh	/^typedef uint32_t align_id_t;$/;"	t
align_info_t	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^typedef std::pair<double,const CandidateAlignment*> align_info_t;$/;"	t	file:
align_pos	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^align_pos(const pos_t pos)$/;"	f	class:starling_pos_processor_base
align_position	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^    align_position(const char r,$/;"	f	struct:align_position
align_position	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^struct align_position$/;"	s	file:
align_printer	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^struct align_printer$/;"	s	file:
align_score_filter	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned align_score_filter = 0;$/;"	m	struct:blt_read_counts
align_t	./src/c++/lib/blt_util/align_path.hh	/^enum align_t$/;"	g	namespace:ALIGNPATH
alignment	./src/c++/lib/starling_common/alignment.hh	/^struct alignment$/;"	s
alignmentFilename	./src/c++/lib/applications/GetChromDepth/ChromDepthOptions.hh	/^    std::string alignmentFilename;$/;"	m	struct:ChromDepthOptions
alignmentFilenames	./src/c++/lib/options/AlignmentFileOptions.hh	/^    files_t alignmentFilenames;$/;"	m	struct:AlignmentFileOptions
alleleFrequency	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    double alleleFrequency() const$/;"	f	struct:GermlineIndelSampleInfo
allele_freq	./src/c++/lib/blt_common/position_snp_call_lrt.hh	/^    double allele_freq[N_BASE]; \/\/ ML frequencies taking Qvalues into account.$/;"	m	struct:lrt_snp_call
alleles	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.hh	/^    std::vector<AlleleIter_t> alleles;$/;"	m	struct:OrthogonalVariantAlleleCandidateGroup
alphabet	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    std::string alphabet = "ACGT";$/;"	m	struct:IterativeAssemblerOptions
alphabet	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    std::string alphabet = "ACGT";$/;"	m	struct:SmallAssemblerOptions
alt	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModel1.cpp	/^    double alt = 0;$/;"	m	struct:__anon23::SignalGroupTotal	file:
alt	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    double alt = 0;$/;"	m	struct:__anon20::SignalGroupTotal	file:
alt	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    double alt = 0;$/;"	m	struct:__anon18::SignalGroupTotal	file:
alt	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    double alt = 0;$/;"	m	struct:__anon26::SignalGroupTotal	file:
alt	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    double alt = 0;$/;"	m	struct:__anon22::SignalGroupTotal	file:
alt	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    double alt = 0;$/;"	m	struct:__anon21::SignalGroupTotal	file:
alt	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    double alt = 0;$/;"	m	struct:__anon19::SignalGroupTotal	file:
alt	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    double alt = 0;$/;"	m	struct:__anon24::SignalGroupTotal	file:
alt	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    qual_count_t alt;$/;"	m	struct:StrandBaseCounts
alt	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    std::array<StrandBaseCounts::qual_count_t,2> alt;$/;"	m	struct:BaseErrorContextInputObservation
alt	./src/c++/lib/htsapi/vcf_record.hh	/^    std::vector<std::string> alt;$/;"	m	struct:vcf_record
altAlleleHaplotypeCountRatio	./src/c++/lib/starling_common/IndelData.hh	/^    float altAlleleHaplotypeCountRatio;$/;"	m	struct:IndelSampleData
altAlleles	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    std::vector<OrthogonalAlleleSetLocusReportInfoAlleleDetails> altAlleles;$/;"	m	struct:OrthogonalAlleleSetLocusReportInfo
altCount	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    std::vector<unsigned> altCount;$/;"	m	struct:BaseErrorContextObservationExportStrandObservation
altHaplotypeCountRatio	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    float altHaplotypeCountRatio;$/;"	m	struct:HaplotypeIdAndCountRatio
altMatch	./src/c++/lib/blt_util/RecordTracker.cpp	/^altMatch($/;"	f	class:IndelGenotype
altObservations	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    boost::array<unsigned,INDEL_SIGNAL_TYPE::SIZE> altObservations;$/;"	m	struct:ExportedIndelObservations
alt_indel	./src/c++/lib/starling_common/IndelData.hh	/^    alt_indel_t alt_indel;$/;"	m	struct:ReadPathScores
alt_indel_t	./src/c++/lib/starling_common/IndelData.hh	/^    typedef std::vector<std::pair<IndelKey,score_t> > alt_indel_t;$/;"	t	struct:ReadPathScores
alt_map_qual	./src/c++/lib/htsapi/bam_record.cpp	/^alt_map_qual(const char* tag) const$/;"	f	class:bam_record
alt_vec_t	./src/c++/lib/blt_util/RecordTracker.hh	/^    typedef std::vector<IndelKey> alt_vec_t;$/;"	t	struct:IndelGenotype
alts	./src/c++/lib/blt_util/RecordTracker.hh	/^    alt_vec_t alts;$/;"	m	struct:IndelGenotype
annotateVariantAsIndelConflict	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^annotateVariantAsIndelConflict(LocusInfo& locus)$/;"	f	file:
annotateVariantIndelRecordsAsConflicting	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^annotateVariantIndelRecordsAsConflicting()$/;"	f	class:VariantOverlapResolver
any	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    any() const$/;"	f	struct:GermlineFilterKeeper
anyVariantAlleleQuality	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    int anyVariantAlleleQuality = 0;$/;"	m	struct:LocusInfo
apath	./src/c++/lib/alignment/Alignment.hh	/^    ALIGNPATH::path_t apath;$/;"	m	struct:Alignment
apath_add_seqmatch	./src/c++/lib/blt_util/align_path_impl.hh	/^apath_add_seqmatch($/;"	f	namespace:ALIGNPATH
apath_append	./src/c++/lib/blt_util/align_path.cpp	/^apath_append($/;"	f	namespace:ALIGNPATH
apath_clean_seqmatch	./src/c++/lib/blt_util/align_path.cpp	/^apath_clean_seqmatch(path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_cleaner	./src/c++/lib/blt_util/align_path.cpp	/^apath_cleaner(path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_clip_adder	./src/c++/lib/blt_util/align_path.cpp	/^apath_clip_adder(path_t& apath,$/;"	f	namespace:ALIGNPATH
apath_clip_clipper	./src/c++/lib/blt_util/align_path.cpp	/^apath_clip_clipper(path_t& apath,$/;"	f	namespace:ALIGNPATH
apath_clip_lead_size	./src/c++/lib/blt_util/align_path.cpp	/^apath_clip_lead_size(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_clip_trail_size	./src/c++/lib/blt_util/align_path.cpp	/^apath_clip_trail_size(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_exon_count	./src/c++/lib/blt_util/align_path.cpp	/^apath_exon_count(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_indel_count	./src/c++/lib/blt_util/align_path.cpp	/^apath_indel_count($/;"	f	namespace:ALIGNPATH
apath_insert_lead_size	./src/c++/lib/blt_util/align_path.cpp	/^apath_insert_lead_size(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_insert_trail_size	./src/c++/lib/blt_util/align_path.cpp	/^apath_insert_trail_size(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_limit_read_length	./src/c++/lib/blt_util/align_path.cpp	/^apath_limit_read_length($/;"	f	namespace:ALIGNPATH
apath_limit_read_length	./src/c++/lib/blt_util/align_path.hh	/^apath_limit_read_length($/;"	f	namespace:ALIGNPATH
apath_limit_ref_length	./src/c++/lib/blt_util/align_path.cpp	/^apath_limit_ref_length($/;"	f	namespace:ALIGNPATH
apath_matched_length	./src/c++/lib/blt_util/align_path.cpp	/^apath_matched_length(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_push	./src/c++/lib/blt_util/align_path_match_descriptor.cpp	/^apath_push(path_t& apath,$/;"	f	namespace:ALIGNPATH
apath_read_length	./src/c++/lib/blt_util/align_path.cpp	/^apath_read_length(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_ref_length	./src/c++/lib/blt_util/align_path.cpp	/^apath_ref_length(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_soft_clip_lead_size	./src/c++/lib/blt_util/align_path.cpp	/^apath_soft_clip_lead_size(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_soft_clip_trail_size	./src/c++/lib/blt_util/align_path.cpp	/^apath_soft_clip_trail_size(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_spliced_length	./src/c++/lib/blt_util/align_path.cpp	/^apath_spliced_length(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_to_bam_cigar	./src/c++/lib/htsapi/align_path_bam_util.cpp	/^apath_to_bam_cigar(const path_t& apath,$/;"	f
apath_to_cigar	./src/c++/lib/blt_util/align_path.cpp	/^apath_to_cigar(const path_t& apath,$/;"	f	namespace:ALIGNPATH
apath_to_cigar	./src/c++/lib/blt_util/align_path.hh	/^apath_to_cigar(const path_t& apath)$/;"	f	namespace:ALIGNPATH
apath_to_export_md	./src/c++/lib/blt_util/align_path_match_descriptor.cpp	/^apath_to_export_md(path_t& apath,$/;"	f	namespace:ALIGNPATH
apath_translate_ref_offset_to_read_offset	./src/c++/lib/starling_common/alignment_util.cpp	/^apath_translate_ref_offset_to_read_offset($/;"	f	file:
append_ref_subseq	./src/c++/lib/applications/starling/LocusReportInfoUtil.cpp	/^append_ref_subseq($/;"	f	file:
append_ref_subseq	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^append_ref_subseq($/;"	f	file:
applySharedLocusFilters	./src/c++/lib/applications/starling/variant_prefilter_stage.cpp	/^applySharedLocusFilters($/;"	f	class:variant_prefilter_stage
argToParameters	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    argToParameters($/;"	f	struct:__anon18::error_minfunc_model3
argToParameters	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    argToParameters($/;"	f	struct:__anon26::error_minfunc_model3
argToParameters	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    argToParameters($/;"	f	struct:__anon22::error_minfunc
argToParameters	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    argToParameters($/;"	f	struct:__anon21::error_minfunc
argToParameters	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    argToParameters($/;"	f	struct:__anon24::error_minfunc
argToParameters	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    argToParameters($/;"	f	struct:error_minfunc_model3
arg_data	./src/c++/lib/blt_common/blt_arg_parse_util.cpp	/^arg_data(const std::vector<std::string>& arg,$/;"	f	class:arg_data
arg_data	./src/c++/lib/blt_common/blt_arg_parse_util.cpp	/^arg_data(int init_argc,$/;"	f	class:arg_data
arg_data	./src/c++/lib/blt_common/blt_arg_parse_util.hh	/^struct arg_data$/;"	s
arg_to_prob	./src/c++/lib/blt_common/position_loghood_minfunc.cpp	/^arg_to_prob(const double arg)$/;"	f	class:position_nonref_freq_loghood_minfunc
arg_to_prob	./src/c++/lib/blt_common/position_loghood_minfunc.cpp	/^arg_to_prob(const double* allele_distro_in,$/;"	f	class:position_allele_distro_loghood_minfunc
argmark	./src/c++/lib/blt_common/blt_arg_parse_util.hh	/^    std::vector<bool> argmark;$/;"	m	struct:arg_data
argstr	./src/c++/lib/blt_common/blt_arg_parse_util.hh	/^    std::vector<std::string> argstr;$/;"	m	struct:arg_data
assertExpectedVcfReference	./src/c++/lib/htsapi/vcf_record_util.cpp	/^assertExpectedVcfReference($/;"	f
assertValidity	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    assertValidity() const$/;"	f	struct:GermlineIndelLocusInfo
assignFilter	./src/c++/lib/blt_util/RecordTracker.cpp	/^assignFilter()$/;"	f	class:IndelGenotype
assignGenotype	./src/c++/lib/blt_util/RecordTracker.cpp	/^assignGenotype()$/;"	f	class:IndelGenotype
assignKnownStatus	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    assignKnownStatus(const RecordTracker::indel_value_t& knownVariantOlap)$/;"	f	struct:IndelBackgroundObservation
assignKnownStatus	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    assignKnownStatus(const RecordTracker::indel_value_t& knownVariantOlap)$/;"	f	struct:IndelErrorContextObservation
assignStatus	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^assignStatus(const RecordTracker::indel_value_t& knownVariantOlap)$/;"	f
avg	./src/c++/lib/blt_util/window_util.hh	/^    avg() const$/;"	f	struct:window_average
avgBaseQ	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    double avgBaseQ = 0;$/;"	m	struct:GermlineSiteSampleInfo
backTraceAlignment	./src/c++/lib/alignment/SingleRefAlignerSharedImpl.hh	/^backTraceAlignment($/;"	f	class:SingleRefAlignerBase
background	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    IndelBackgroundObservationData background;$/;"	m	struct:IndelErrorData
backgroundStatus	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    GENOTYPE_STATUS::genotype_t backgroundStatus;$/;"	m	struct:IndelBackgroundObservation
bam_aux_append_unsigned	./src/c++/lib/htsapi/bam_util.cpp	/^bam_aux_append_unsigned(bam1_t& br,$/;"	f
bam_calend	./src/c++/lib/htsapi/bam_util.hh	/^static inline uint32_t bam_calend(const bam1_core_t* c, const uint32_t* cigar)$/;"	f
bam_cigar_to_apath	./src/c++/lib/htsapi/align_path_bam_util.cpp	/^bam_cigar_to_apath(const uint32_t* bam_cigar,$/;"	f
bam_dumper	./src/c++/lib/htsapi/bam_dumper.cpp	/^bam_dumper(const char* filename,$/;"	f	class:bam_dumper
bam_dumper	./src/c++/lib/htsapi/bam_dumper.hh	/^struct bam_dumper$/;"	s
bam_header_info	./src/c++/lib/htsapi/bam_header_info.cpp	/^bam_header_info(const bam_hdr_t& header)$/;"	f	class:bam_header_info
bam_header_info	./src/c++/lib/htsapi/bam_header_info.hh	/^struct bam_header_info$/;"	s
bam_record	./src/c++/lib/htsapi/bam_record.hh	/^    bam_record()$/;"	f	struct:bam_record
bam_record	./src/c++/lib/htsapi/bam_record.hh	/^    bam_record(const bam_record& br)$/;"	f	struct:bam_record
bam_record	./src/c++/lib/htsapi/bam_record.hh	/^struct bam_record$/;"	s
bam_reg2bin	./src/c++/lib/htsapi/bam_util.hh	/^static inline int bam_reg2bin(uint32_t beg, uint32_t end)$/;"	f
bam_seq	./src/c++/lib/htsapi/bam_seq.hh	/^    bam_seq(const uint8_t* s,$/;"	f	struct:bam_seq
bam_seq	./src/c++/lib/htsapi/bam_seq.hh	/^struct bam_seq : public bam_seq_base$/;"	s
bam_seq_base	./src/c++/lib/htsapi/bam_seq.hh	/^struct bam_seq_base : public PolymorphicObject$/;"	s
bam_seq_code_to_id	./src/c++/lib/htsapi/bam_seq.hh	/^bam_seq_code_to_id(const uint8_t a,$/;"	f
bam_seq_to_str	./src/c++/lib/starling_common/CandidateAlignment.cpp	/^bam_seq_to_str($/;"	f	file:
bam_seq_to_str	./src/c++/lib/starling_common/starling_pos_processor_indel_util.cpp	/^bam_seq_to_str($/;"	f	file:
bam_seq_to_str	./src/c++/lib/starling_common/starling_read_align.cpp	/^bam_seq_to_str($/;"	f	file:
bam_streamer	./src/c++/lib/htsapi/bam_streamer.cpp	/^bam_streamer($/;"	f	class:bam_streamer
bam_streamer	./src/c++/lib/htsapi/bam_streamer.hh	/^struct bam_streamer : public boost::noncopyable$/;"	s
bam_update_bin	./src/c++/lib/htsapi/bam_util.hh	/^bam_update_bin(bam1_t& br)$/;"	f
baseIndex	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    BASE_ID::index_t baseIndex = BASE_ID::ANY;$/;"	m	struct:GermlineSiteAlleleInfo
base_call	./src/c++/lib/blt_common/snp_pos_info.hh	/^    base_call(const uint8_t init_base_id,$/;"	f	struct:base_call
base_call	./src/c++/lib/blt_common/snp_pos_info.hh	/^struct base_call$/;"	s
base_error	./src/c++/lib/blt_util/seq_util.cpp	/^base_error(const char* func, const char a)$/;"	f
base_id	./src/c++/lib/blt_common/hapscore.hh	/^    base_id(const unsigned i) const$/;"	f	struct:hap_cand
base_id	./src/c++/lib/blt_common/snp_pos_info.hh	/^    uint16_t base_id:4;$/;"	m	struct:base_call
base_t	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    typedef SequenceErrorCountsOptions base_t;$/;"	t	struct:SequenceErrorCountsOptions
base_t	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    typedef starling_base_deriv_options base_t;$/;"	t	struct:SequenceErrorCountsDerivOptions
base_t	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    typedef starling_pos_processor_base base_t;$/;"	t	struct:SequenceErrorCountsPosProcessor
base_t	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsStreams.hh	/^    typedef starling_streams_base base_t;$/;"	t	struct:SequenceErrorCountsStreams
base_t	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    typedef GermlineVariantAlleleInfo base_t;$/;"	t	struct:GermlineSiteAlleleInfo
base_t	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^    typedef GermlineSiteLocusInfo base_t;$/;"	t	struct:gvcf_block_site_record
base_t	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    typedef GermlineSiteLocusInfo base_t;$/;"	t	struct:GermlineContinuousSiteLocusInfo
base_t	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    typedef LocusInfo base_t;$/;"	t	struct:GermlineSiteLocusInfo
base_t	./src/c++/lib/applications/starling/starling_pos_processor.hh	/^    typedef starling_pos_processor_base base_t;$/;"	t	struct:starling_pos_processor
base_t	./src/c++/lib/applications/starling/starling_shared.hh	/^    typedef starling_base_deriv_options base_t;$/;"	t	struct:starling_deriv_options
base_t	./src/c++/lib/applications/starling/starling_streams.hh	/^    typedef starling_streams_base base_t;$/;"	t	struct:starling_streams
base_t	./src/c++/lib/applications/strelka/SomaticCallableProcessor.hh	/^    typedef RegionProcessor base_t;$/;"	t	struct:SomaticCallableProcessor
base_t	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    typedef starling_pos_processor_base base_t;$/;"	t	struct:strelka_pos_processor
base_t	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    typedef starling_base_deriv_options base_t;$/;"	t	struct:strelka_deriv_options
base_t	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    typedef starling_base_options base_t;$/;"	t	struct:strelka_options
base_t	./src/c++/lib/applications/strelka/strelka_streams.hh	/^    typedef starling_streams_base base_t;$/;"	t	struct:strelka_streams
base_t	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_pos_processor.hh	/^    typedef starling_pos_processor_base base_t;$/;"	t	struct:snoise_pos_processor
base_t	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_streams.hh	/^    typedef starling_streams_base base_t;$/;"	t	struct:snoise_streams
base_t	./src/c++/lib/starling_common/starling_base_shared.hh	/^    typedef blt_deriv_options base_t;$/;"	t	struct:starling_base_deriv_options
base_t	./src/c++/lib/starling_common/starling_base_shared.hh	/^    typedef blt_options base_t;$/;"	t	struct:starling_base_options
base_t	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    typedef pos_processor_base base_t;$/;"	t	struct:starling_pos_processor_base
base_to_id	./src/c++/lib/blt_util/seq_util.hh	/^base_to_id(const char a)$/;"	f
basecallBuffer	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        pos_basecall_buffer basecallBuffer;$/;"	m	struct:starling_pos_processor_base::sample_info
baseq_ranksum	./src/c++/lib/blt_common/snp_pos_info.hh	/^    fastRanksum baseq_ranksum;$/;"	m	struct:snp_pos_info
basic_matrix	./src/c++/lib/blt_util/basic_matrix.hh	/^    basic_matrix($/;"	f	struct:basic_matrix
basic_matrix	./src/c++/lib/blt_util/basic_matrix.hh	/^struct basic_matrix$/;"	s
bed_record	./src/c++/lib/htsapi/bed_record.hh	/^    bed_record()$/;"	f	struct:bed_record
bed_record	./src/c++/lib/htsapi/bed_record.hh	/^struct bed_record$/;"	s
bed_streamer	./src/c++/lib/htsapi/bed_streamer.hh	/^    bed_streamer($/;"	f	struct:bed_streamer
bed_streamer	./src/c++/lib/htsapi/bed_streamer.hh	/^struct bed_streamer : public hts_streamer$/;"	s
begin	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    begin() const$/;"	f	struct:GenotypeLikelihoods
begin	./src/c++/lib/blt_common/sparse_function_1d.hh	/^    begin() const$/;"	f	struct:sparse_function
begin	./src/c++/lib/blt_util/basic_matrix.hh	/^    begin() const$/;"	f	struct:basic_matrix
begin	./src/c++/lib/blt_util/basic_matrix.hh	/^    begin()$/;"	f	struct:basic_matrix
begin	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    begin() const$/;"	f	struct:BaseErrorContextObservationData
begin	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    begin() const$/;"	f	struct:BaseErrorCounts
begin	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    begin() const$/;"	f	struct:IndelBackgroundObservationData
begin	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    begin() const$/;"	f	struct:IndelErrorContextObservationData
begin	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    begin() const$/;"	f	struct:IndelErrorCounts
begin	./src/c++/lib/htsapi/bed_record.hh	/^    int begin = 0;$/;"	m	struct:bed_record
beginPos	./src/c++/lib/alignment/Alignment.hh	/^    pos_t beginPos;$/;"	m	struct:Alignment
begin_pos	./src/c++/lib/blt_util/known_pos_range2.hh	/^    begin_pos() const$/;"	f	struct:known_pos_range2
begin_pos	./src/c++/lib/blt_util/pos_range.hh	/^    pos_t begin_pos;$/;"	m	struct:pos_range
bindel_diploid_theta	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double bindel_diploid_theta = 0.0001;$/;"	m	struct:starling_base_options
binomialLogDensity	./src/c++/lib/applications/starling/starling_continuous_variant_caller.cpp	/^binomialLogDensity($/;"	f	file:
block_abs_tol	./src/c++/lib/applications/starling/gvcf_options.hh	/^    unsigned block_abs_tol = 3;$/;"	m	struct:gvcf_options
block_dpf	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^    stream_stat block_dpf;$/;"	m	struct:gvcf_block_site_record
block_dpu	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^    stream_stat block_dpu;$/;"	m	struct:gvcf_block_site_record
block_gqx	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^    stream_stat block_gqx;$/;"	m	struct:gvcf_block_site_record
block_label	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    std::string block_label;$/;"	m	struct:SequenceErrorCountsDerivOptions
block_label	./src/c++/lib/applications/starling/gvcf_options.hh	/^    std::string block_label;$/;"	m	struct:gvcf_deriv_options
block_label_prefix	./src/c++/lib/applications/starling/gvcf_options.hh	/^    std::string block_label_prefix = "BLOCKAVG_min";$/;"	m	struct:gvcf_options
block_max_nonref	./src/c++/lib/applications/starling/gvcf_options.hh	/^    double block_max_nonref = .2; \/\/ what percentage of non-ref bases can a site have and still be included in a non-variant block$/;"	m	struct:gvcf_options
block_percent_tol	./src/c++/lib/applications/starling/gvcf_options.hh	/^    unsigned block_percent_tol = 30;$/;"	m	struct:gvcf_options
blt_deriv_options	./src/c++/lib/blt_common/blt_shared.cpp	/^blt_deriv_options($/;"	f	class:blt_deriv_options
blt_deriv_options	./src/c++/lib/blt_common/blt_shared.hh	/^struct blt_deriv_options$/;"	s
blt_exception	./src/c++/lib/blt_util/blt_exception.cpp	/^blt_exception(const char* s)$/;"	f	class:blt_exception
blt_exception	./src/c++/lib/blt_util/blt_exception.hh	/^struct blt_exception : public std::exception$/;"	s
blt_float_t	./src/c++/lib/blt_util/blt_types.hh	/^typedef float blt_float_t;$/;"	t
blt_options	./src/c++/lib/blt_common/blt_shared.hh	/^struct blt_options : public PolymorphicObject$/;"	s
blt_read_counts	./src/c++/lib/blt_common/blt_shared.hh	/^struct blt_read_counts$/;"	s
blt_sig_handler	./src/c++/lib/blt_util/sig_handler.cpp	/^blt_sig_handler (int sig)$/;"	f	file:
blt_util	./src/c++/lib/blt_util/parse_util.cpp	/^namespace blt_util$/;"	n	namespace:illumina	file:
blt_util	./src/c++/lib/blt_util/parse_util.hh	/^namespace blt_util$/;"	n	namespace:illumina
breakpointInsertSeq	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    std::string breakpointInsertSeq;$/;"	m	struct:GermlineIndelAlleleInfo
breakpointInsertionSequence	./src/c++/lib/starling_common/IndelData.hh	/^    std::string breakpointInsertionSequence; \/\/\/< partial breakpoint sequence, do not use to describe regular indels$/;"	m	struct:IndelObservationData
breakpoint_pos_range	./src/c++/lib/starling_common/IndelKey.hh	/^    known_pos_range breakpoint_pos_range() const$/;"	f	struct:IndelKey
bsnp_diploid_het_bias	./src/c++/lib/blt_common/blt_shared.hh	/^    double bsnp_diploid_het_bias = 0;$/;"	m	struct:blt_options
bsnp_diploid_theta	./src/c++/lib/blt_common/blt_shared.hh	/^    double bsnp_diploid_theta = 0.001;$/;"	m	struct:blt_options
bsnp_nploid_ploidy	./src/c++/lib/blt_common/blt_shared.hh	/^    int bsnp_nploid_ploidy = 0;$/;"	m	struct:blt_options
bsnp_nploid_snp_prob	./src/c++/lib/blt_common/blt_shared.hh	/^    double bsnp_nploid_snp_prob = 0;$/;"	m	struct:blt_options
bsnp_ssd_no_mismatch	./src/c++/lib/blt_common/blt_shared.hh	/^    double bsnp_ssd_no_mismatch = 0;$/;"	m	struct:blt_options
bsnp_ssd_one_mismatch	./src/c++/lib/blt_common/blt_shared.hh	/^    double bsnp_ssd_one_mismatch = 0;$/;"	m	struct:blt_options
buffer_pos	./src/c++/lib/starling_common/starling_read_segment.hh	/^    pos_t buffer_pos;$/;"	m	struct:read_segment
buildContigs	./src/c++/lib/assembly/IterativeAssembler.cpp	/^buildContigs($/;"	f	file:
buildContigs	./src/c++/lib/assembly/SmallAssembler.cpp	/^buildContigs($/;"	f	file:
buildTime	./src/c++/lib/common/Program.cpp	/^buildTime() const$/;"	f	class:illumina::Program
buildTime	./src/c++/lib/starling_common/version.cpp	/^buildTime()$/;"	f
c	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    HaplotypeId c;$/;"	m	struct:HaplotypeIdAndCountRatio
c1	./src/c++/lib/blt_util/fastRanksum.hh	/^        unsigned c1;$/;"	m	struct:fastRanksum::ranksumObs
c2	./src/c++/lib/blt_util/fastRanksum.hh	/^        unsigned c2;$/;"	m	struct:fastRanksum::ranksumObs
cacheIndel	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.cpp	/^cacheIndel($/;"	f	class:SomaticIndelVcfWriter
cache_val	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^struct cache_val$/;"	s
cache_val_n	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^    typedef cache_val<NVAL> cache_val_n;$/;"	t	struct:het_ratio_cache
cal_pool_t	./src/c++/lib/starling_common/starling_read_align_clipper.hh	/^typedef std::vector<const CandidateAlignment*> cal_pool_t;$/;"	t
calc_and_store_val	./src/c++/lib/blt_common/position_nonref_2allele_test.cpp	/^    calc_and_store_val(const blt_float_t x)$/;"	f	struct:nonref_allele_freq_loghood_sparse_func
calc_and_store_val	./src/c++/lib/blt_common/position_nonref_test.cpp	/^    calc_and_store_val(const blt_float_t x)$/;"	f	struct:nonref_freq_loghood_sparse_func
calc_pos_allele_distro_loghood	./src/c++/lib/blt_common/position_loghood_minfunc.cpp	/^calc_pos_allele_distro_loghood(const snp_pos_info& pi,$/;"	f	file:
calc_pos_nonref_allele_freq_loghood	./src/c++/lib/blt_common/position_loghood_minfunc.cpp	/^calc_pos_nonref_allele_freq_loghood(const snp_pos_info& pi,$/;"	f
calc_pos_nonref_freq_loghood	./src/c++/lib/blt_common/position_loghood_minfunc.cpp	/^calc_pos_nonref_freq_loghood(const snp_pos_info& pi,$/;"	f
calc_val	./src/c++/lib/blt_common/position_nonref_2allele_test.cpp	/^    calc_val(const blt_float_t x) const$/;"	f	struct:nonref_allele_freq_loghood_sparse_func
calc_val	./src/c++/lib/blt_common/position_nonref_test.cpp	/^    calc_val(const blt_float_t x) const$/;"	f	struct:nonref_freq_loghood_sparse_func
calculateBCNoise	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^calculateBCNoise(const win_avg_set& was)$/;"	f
calculateBSA	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^calculateBSA(const AlleleSampleReportInfo& indelSampleReportInfo)$/;"	f
calculateFS	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^calculateFS(const AlleleSampleReportInfo& indelSampleReportInfo)$/;"	f
calculateGermlineGenotypeLogPrior	./src/c++/lib/applications/strelka/qscore_calculator.cpp	/^calculateGermlineGenotypeLogPrior($/;"	f
calculateLogAltRatio	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^calculateLogAltRatio($/;"	f
calculateLogOddsRatio	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid_vcf.cpp	/^calculateLogOddsRatio($/;"	f	file:
calculateScoringFeatures	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^calculateScoringFeatures($/;"	f
calculate_result_set	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^calculate_result_set(const blt_float_t* lhood,$/;"	f	class:pprob_digt_caller
calculate_result_set_grid	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.cpp	/^calculate_result_set_grid($/;"	f	file:
calculate_result_set_grid	./src/c++/lib/applications/strelka/qscore_calculator.cpp	/^calculate_result_set_grid($/;"	f
call	./src/c++/lib/applications/starling/starling_pile_test_run.cpp	/^call($/;"	f	class:starling_pile_caller
call	./src/c++/lib/applications/strelka/strelka_pile_test_run.cpp	/^call($/;"	f	class:strelka_pile_caller
callRegion	./src/c++/lib/applications/starling/starling_run.cpp	/^callRegion($/;"	f	file:
callRegion	./src/c++/lib/applications/strelka/strelka_run.cpp	/^callRegion($/;"	f	file:
callRegionsBedFilename	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::string callRegionsBedFilename;$/;"	m	struct:starling_base_options
calls	./src/c++/lib/blt_common/snp_pos_info.hh	/^    std::vector<base_call> calls;$/;"	m	struct:snp_pos_info
candidateIndelToRefErrorProb	./src/c++/lib/starling_common/IndelData.hh	/^    LogValuePair candidateIndelToRefErrorProb;$/;"	m	struct:IndelErrorRates
candidateIndels	./src/c++/lib/appstats/RunStats.hh	/^    unsigned long candidateIndels = 0;$/;"	m	struct:RunStatsData
candidateRefToIndelErrorProb	./src/c++/lib/starling_common/IndelData.hh	/^    LogValuePair candidateRefToIndelErrorProb;$/;"	m	struct:IndelErrorRates
candidate_alignment_search	./src/c++/lib/starling_common/starling_read_align.cpp	/^candidate_alignment_search($/;"	f	file:
cdmap_t	./src/c++/lib/blt_util/chrom_depth_map.hh	/^typedef std::map<std::string,double> cdmap_t;$/;"	t
center_pos	./src/c++/lib/blt_util/known_pos_range2.hh	/^    center_pos() const$/;"	f	struct:known_pos_range2
change_bam_data_len	./src/c++/lib/htsapi/bam_util.cpp	/^change_bam_data_len(const int new_len,$/;"	f	file:
change_bam_data_segment_len	./src/c++/lib/htsapi/bam_util.cpp	/^change_bam_data_segment_len(const int end,$/;"	f
chdir	./src/c++/lib/blt_util/compat_unistd.h	32;"	d
check	./src/c++/lib/applications/starling/test/VariantPhaserTest.cpp	/^    bool check(const unsigned sampleIndex, const bool isSnv, const pos_t pos,$/;"	f	struct:DummyVariantSink
checkBamRecord	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^checkBamRecord($/;"	f	file:
checkEstimatedModel	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^checkEstimatedModel() const$/;"	f	class:IndelModelProduction
checkOptionalFile	./src/c++/lib/starling_common/starling_base_option_parser.cpp	/^checkOptionalFile($/;"	f
checkOptions	./src/c++/lib/options/AlignmentFileOptionsParser.cpp	/^checkOptions($/;"	f
checkOutputFilePathIsWriteable	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^checkOutputFilePathIsWriteable($/;"	f	file:
checkSampleIndex	./src/c++/lib/calibration/IndelErrorModel.cpp	/^checkSampleIndex($/;"	f	class:IndelErrorModel
checkSaneVal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^checkSaneVal(const double val)$/;"	f	namespace:__anon20
checkStandardizeInputFile	./src/c++/lib/options/optionsUtil.cpp	/^checkStandardizeInputFile($/;"	f
checkStream	./src/c++/lib/htsapi/test/bam_streamer_test.cpp	/^checkStream($/;"	f	file:
check_bam_bcf_header_compatability	./src/c++/lib/htsapi/vcf_streamer.cpp	/^check_bam_bcf_header_compatability($/;"	f	file:
check_block_single_tolerance	./src/c++/lib/applications/starling/gvcf_block_site_record.cpp	/^check_block_single_tolerance(const stream_stat& ss,$/;"	f	file:
check_block_tolerance	./src/c++/lib/applications/starling/gvcf_block_site_record.cpp	/^check_block_tolerance(const stream_stat& ss,$/;"	f	file:
check_for_candidate_indel_overlap	./src/c++/lib/starling_common/starling_read_align.cpp	/^check_for_candidate_indel_overlap($/;"	f	file:
check_get_seq_counts	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^check_get_seq_counts(std::istream& is,$/;"	f	file:
check_header_compatibility	./src/c++/lib/htsapi/bam_header_util.cpp	/^check_header_compatibility($/;"	f
check_istream	./src/c++/lib/blt_util/istream_line_splitter.cpp	/^check_istream(std::istream& is,$/;"	f	file:
check_ln_distro	./src/c++/lib/blt_util/prob_util.hh	/^check_ln_distro(It i,$/;"	f
check_ln_distro_invalid_sum	./src/c++/lib/blt_util/prob_util.cpp	/^check_ln_distro_invalid_sum(const char* label,$/;"	f
check_ln_distro_invalid_value	./src/c++/lib/blt_util/prob_util.cpp	/^check_ln_distro_invalid_value(const char* label,$/;"	f
check_long_line	./src/c++/lib/blt_util/test/istream_line_splitter_test.cpp	/^check_long_line(const int init_buffer_size)$/;"	f	file:
check_option_arg_range	./src/c++/lib/blt_common/blt_arg_validate.cpp	/^check_option_arg_range(const double val,$/;"	f
check_option_arg_range	./src/c++/lib/blt_common/blt_arg_validate.cpp	/^check_option_arg_range(const prog_info& pinfo,$/;"	f
check_process_pos	./src/c++/lib/blt_util/pos_processor_base.hh	/^    check_process_pos(const int stage_no,$/;"	f	struct:pos_processor_base
check_skipped_pos	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        check_skipped_pos(const pos_t pos)$/;"	f	struct:starling_pos_processor_base::pos_win_avgs
chrom	./src/c++/lib/htsapi/bed_record.hh	/^    std::string chrom;$/;"	m	struct:bed_record
chrom	./src/c++/lib/htsapi/vcf_record.hh	/^    std::string chrom;$/;"	m	struct:vcf_record
chromNames	./src/c++/lib/applications/GetChromDepth/ChromDepthOptions.hh	/^    std::vector<std::string> chromNames;$/;"	m	struct:ChromDepthOptions
chrom_data	./src/c++/lib/htsapi/bam_header_info.hh	/^    std::vector<chrom_info> chrom_data;$/;"	m	struct:bam_header_info
chrom_depth	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    cdmap_t chrom_depth;$/;"	m	struct:SequenceErrorCountsDerivOptions
chrom_depth	./src/c++/lib/applications/starling/gvcf_options.hh	/^    cdmap_t chrom_depth;$/;"	m	struct:gvcf_deriv_options
chrom_depth	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    cdmap_t chrom_depth;$/;"	m	struct:somatic_filter_deriv_options
chrom_depth_file	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    std::string chrom_depth_file;$/;"	m	struct:SequenceErrorCountsOptions
chrom_depth_file	./src/c++/lib/applications/starling/gvcf_options.hh	/^    std::string chrom_depth_file;$/;"	m	struct:gvcf_options
chrom_depth_file	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::string chrom_depth_file;$/;"	m	struct:somatic_filter_options
chrom_info	./src/c++/lib/htsapi/bam_header_info.hh	/^        chrom_info($/;"	f	struct:bam_header_info::chrom_info
chrom_info	./src/c++/lib/htsapi/bam_header_info.hh	/^    struct chrom_info$/;"	s	struct:bam_header_info
chrom_to_index	./src/c++/lib/htsapi/bam_header_info.hh	/^    std::map<std::string, int32_t> chrom_to_index;$/;"	m	struct:bam_header_info
chroms_t	./src/c++/lib/applications/GetChromDepth/ChromDepthOptions.cpp	/^typedef std::vector<std::string> chroms_t;$/;"	t	file:
cigar	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint16_t cigar[10];$/;"	m	struct:__anon8
cigar_code_to_segment_type	./src/c++/lib/blt_util/align_path.hh	/^cigar_code_to_segment_type(const char c)$/;"	f	namespace:ALIGNPATH
cigar_to_apath	./src/c++/lib/blt_util/align_path.cpp	/^cigar_to_apath(const char* cigar,$/;"	f	namespace:ALIGNPATH
classify_indel	./src/c++/lib/applications/starling/ScoringModelManager.cpp	/^classify_indel($/;"	f	class:ScoringModelManager
classify_site	./src/c++/lib/applications/starling/ScoringModelManager.cpp	/^classify_site($/;"	f	class:ScoringModelManager
cleanedPileup	./src/c++/lib/starling_common/PileupCleaner.hh	/^    cleanedPileup() const$/;"	f	struct:CleanedPileup
cleanedPileup	./src/c++/lib/starling_common/PileupCleaner.hh	/^    cleanedPileup()$/;"	f	struct:CleanedPileup
clear	./src/c++/lib/alignment/Alignment.hh	/^    clear()$/;"	f	struct:Alignment
clear	./src/c++/lib/alignment/SingleRefAlignerShared.hh	/^    clear()$/;"	f	struct:AlignmentResult
clear	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    clear()$/;"	f	struct:GermlineSiteAlleleInfo
clear	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    clear()$/;"	f	struct:GermlineVariantAlleleInfo
clear	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    clear()$/;"	f	struct:GenotypeLikelihoods
clear	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    clear()$/;"	f	struct:GermlineContinuousSiteLocusInfo
clear	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    clear()$/;"	f	struct:GermlineContinuousSiteSampleInfo
clear	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    clear()$/;"	f	struct:GermlineFilterKeeper
clear	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    clear()$/;"	f	struct:GermlineSiteLocusInfo
clear	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    clear()$/;"	f	struct:GermlineSiteSampleInfo
clear	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    clear()$/;"	f	struct:LocusInfo
clear	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    clear()$/;"	f	struct:LocusSampleInfo
clear	./src/c++/lib/applications/strelka/NoiseBuffer.hh	/^    clear()$/;"	f	struct:NoiseBuffer
clear	./src/c++/lib/applications/strelka/SiteNoise.hh	/^    clear()$/;"	f	struct:SiteNoise
clear	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    clear()$/;"	f	struct:SomaticIndelVcfWriter
clear	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    clear()$/;"	f	struct:strelka_filter_keeper
clear	./src/c++/lib/blt_common/MapqTracker.hh	/^    clear()$/;"	f	struct:MapqTracker
clear	./src/c++/lib/blt_common/snp_pos_info.hh	/^    clear()$/;"	f	struct:snp_pos_info
clear	./src/c++/lib/blt_util/MeanTracker.hh	/^    clear()$/;"	f	struct:MeanTracker
clear	./src/c++/lib/blt_util/RangeMap.hh	/^    clear()$/;"	f	struct:RangeMap
clear	./src/c++/lib/blt_util/RecordTracker.hh	/^    clear()$/;"	f	struct:RecordTracker
clear	./src/c++/lib/blt_util/RegionTracker.hh	/^    clear()$/;"	f	struct:RegionPayloadTracker
clear	./src/c++/lib/blt_util/RegionTracker.hh	/^    clear()$/;"	f	struct:RegionTracker
clear	./src/c++/lib/blt_util/align_path.hh	/^    clear()$/;"	f	struct:ALIGNPATH::path_segment
clear	./src/c++/lib/blt_util/depth_buffer.hh	/^    clear()$/;"	f	struct:depth_buffer_base
clear	./src/c++/lib/blt_util/fastRanksum.hh	/^    clear()$/;"	f	struct:fastRanksum
clear	./src/c++/lib/blt_util/id_map.hh	/^    clear()$/;"	f	struct:id_map
clear	./src/c++/lib/blt_util/id_map.hh	/^    clear()$/;"	f	struct:id_set
clear	./src/c++/lib/blt_util/known_pos_range2.hh	/^    clear()$/;"	f	struct:known_pos_range2
clear	./src/c++/lib/blt_util/pos_range.hh	/^    clear()$/;"	f	struct:pos_range
clear	./src/c++/lib/blt_util/ranksum.hh	/^    clear()$/;"	f	class:ranksum
clear	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    clear()$/;"	f	struct:reference_contig_segment
clear	./src/c++/lib/blt_util/time_util.hh	/^    clear()$/;"	f	struct:TimeTracker
clear	./src/c++/lib/calibration/RandomForestModel.hh	/^    clear()$/;"	f	struct:RandomForestModel
clear	./src/c++/lib/calibration/featuresetUtil.hh	/^    clear()$/;"	f	struct:VariantScoringFeatureKeeper
clear	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    clear()$/;"	f	struct:BaseErrorContextObservationExportData
clear	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    clear()$/;"	f	struct:BaseErrorCounts
clear	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    clear()$/;"	f	struct:IndelErrorCounts
clear	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^    clear()$/;"	f	struct:SequenceErrorCounts
clear	./src/c++/lib/htsapi/bed_record.hh	/^    void clear()$/;"	f	struct:bed_record
clear	./src/c++/lib/htsapi/vcf_record.hh	/^    void clear()$/;"	f	struct:vcf_record
clear	./src/c++/lib/htsapi/vcf_util.hh	/^    clear()$/;"	f	struct:VcfGenotype
clear	./src/c++/lib/starling_common/ActiveRegionDetector.cpp	/^void ActiveRegionDetector::clear()$/;"	f	class:ActiveRegionDetector
clear	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    clear()$/;"	f	struct:LocusSupportingReadStats
clear	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    clear()$/;"	f	struct:SupportingReadCountGroup
clear	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.hh	/^    clear()$/;"	f	struct:OrthogonalVariantAlleleCandidateGroup
clear	./src/c++/lib/starling_common/PileupCleaner.hh	/^    clear()$/;"	f	struct:CleanedPileup
clear	./src/c++/lib/starling_common/alignment.hh	/^    clear()$/;"	f	struct:alignment
clear	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    clear()$/;"	f	struct:pos_basecall_buffer
clear	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    clear()$/;"	f	struct:starling_read_buffer
clearBuffers	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^    clearBuffers()$/;"	f	struct:VariantOverlapResolver
clearChecked	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    clearChecked()$/;"	f	struct:ChromDepthTracker
clearEVSFeatures	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    clearEVSFeatures()$/;"	f	struct:GermlineDiploidIndelLocusInfo
clearEVSFeatures	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    clearEVSFeatures()$/;"	f	struct:GermlineDiploidSiteLocusInfo
clearIndels	./src/c++/lib/starling_common/IndelBuffer.hh	/^    clearIndels()$/;"	f	struct:IndelBuffer
clearIndelsAtPosition	./src/c++/lib/starling_common/IndelBuffer.cpp	/^clearIndelsAtPosition(const pos_t pos)$/;"	f	class:IndelBuffer
clearPos	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    void clearPos(const pos_t pos)$/;"	f	class:ActiveRegionReadBuffer
clearReadBuffer	./src/c++/lib/starling_common/ActiveRegionDetector.cpp	/^ActiveRegionDetector::clearReadBuffer(const pos_t pos)$/;"	f	class:ActiveRegionDetector
clearSnvs	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    void clearSnvs()$/;"	f	class:CandidateSnvBuffer
clearUpToPos	./src/c++/lib/starling_common/ActiveRegionDetector.cpp	/^ActiveRegionDetector::clearUpToPos(const pos_t pos)$/;"	f	class:ActiveRegionDetector
clearUpToPos	./src/c++/lib/starling_common/CandidateSnvBuffer.cpp	/^void CandidateSnvBuffer::clearUpToPos(const unsigned sampleIndex, const pos_t pos)$/;"	f	class:CandidateSnvBuffer
clear_iter	./src/c++/lib/starling_common/starling_read_buffer.cpp	/^clear_iter($/;"	f	class:starling_read_buffer
clear_pos	./src/c++/lib/applications/strelka/NoiseBuffer.hh	/^    clear_pos(const pos_t pos)$/;"	f	struct:NoiseBuffer
clear_pos	./src/c++/lib/blt_util/depth_buffer.hh	/^    clear_pos(const pos_t pos)$/;"	f	struct:depth_buffer
clear_pos	./src/c++/lib/blt_util/depth_buffer.hh	/^    clear_pos(const pos_t pos)$/;"	f	struct:depth_buffer_compressible
clear_pos	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    clear_pos(const pos_t pos)$/;"	f	struct:pos_basecall_buffer
clear_pos_annotation	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    clear_pos_annotation(const pos_t \/*pos*\/) {}$/;"	f	struct:starling_pos_processor_base
clear_to_pos	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    clear_to_pos(const pos_t pos)$/;"	f	struct:pos_basecall_buffer
clear_to_pos	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    clear_to_pos($/;"	f	struct:starling_read_buffer
closeExistingActiveRegion	./src/c++/lib/starling_common/ActiveRegionDetector.cpp	/^ActiveRegionDetector::closeExistingActiveRegion()$/;"	f	class:ActiveRegionDetector
cmdline	./src/c++/lib/blt_common/blt_arg_parse_util.hh	/^    std::string cmdline;$/;"	m	struct:arg_data
cmdline	./src/c++/lib/blt_common/blt_shared.hh	/^    std::string cmdline;$/;"	m	struct:blt_options
code_t	./src/c++/lib/alignment/GlobalAligner.hh	/^        typedef uint8_t code_t;$/;"	t	struct:GlobalAligner::PtrVal
collapseAlignmentIndels	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^collapseAlignmentIndels($/;"	f	file:
collapseInsert	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^collapseInsert($/;"	f	file:
common	./src/c++/lib/common/Exceptions.cpp	/^namespace common$/;"	n	namespace:illumina	file:
common	./src/c++/lib/common/Exceptions.hh	/^namespace common$/;"	n	namespace:illumina
common_xfix_length	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^common_xfix_length($/;"	f	file:
comp_base	./src/c++/lib/blt_util/seq_util.hh	/^comp_base(char a)$/;"	f
compareRepeatPattern	./src/c++/lib/blt_common/ref_context.cpp	/^compareRepeatPattern($/;"	f
compat_basename	./src/c++/lib/blt_util/compat_util.cpp	/^compat_basename(const char* str)$/;"	f
compat_realpath	./src/c++/lib/blt_util/compat_util.cpp	/^compat_realpath(std::string& path)$/;"	f
compat_round	./src/c++/lib/blt_util/compat_util.cpp	/^compat_round(const double x)$/;"	f
compiler	./src/c++/lib/common/Program.cpp	/^compiler() const$/;"	f	class:illumina::Program
compilerVersion	./src/c++/lib/common/ProgramConfig.hh	/^compilerVersion()$/;"	f	namespace:illumina
compilerVersion	./src/c++/lib/starling_common/version.cpp	/^compilerVersion()$/;"	f
completeProcessing	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^completeProcessing()$/;"	f	class:SequenceErrorCountsPosProcessor
compressCounts	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^compressCounts()$/;"	f	class:BaseErrorContextObservation
compressCounts	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^compressCounts()$/;"	f	class:StrandBaseCounts
compressInt	./src/c++/lib/blt_util/IntegerLogCompressor.hh	/^compressInt($/;"	f
computeContextCompressability	./src/c++/lib/blt_common/ref_context.cpp	/^computeContextCompressability($/;"	f
computeEmpiricalScoringFeatures	./src/c++/lib/applications/starling/gvcf_locus_info.cpp	/^computeEmpiricalScoringFeatures($/;"	f	class:GermlineDiploidIndelLocusInfo
computeEmpiricalScoringFeatures	./src/c++/lib/applications/starling/gvcf_locus_info.cpp	/^computeEmpiricalScoringFeatures($/;"	f	class:GermlineDiploidSiteLocusInfo
computeExtendedContext	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^computeExtendedContext($/;"	f	file:
computeSampleDiploidSiteGenotype	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^computeSampleDiploidSiteGenotype($/;"	f	file:
cond	./src/c++/lib/applications/starling/starling_run.cpp	/^    pthread_cond_t *cond;$/;"	m	struct:workerData	file:
confidentAlleleCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    confidentAlleleCount(const unsigned alleleIndex) const$/;"	f	struct:SupportingReadCountGroup
confidentAltAlleleCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    confidentAltAlleleCount(const unsigned altAlleleIndex) const$/;"	f	struct:SupportingReadCountGroup
confidentRefAlleleCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    confidentRefAlleleCount() const$/;"	f	struct:SupportingReadCountGroup
conservativeRange	./src/c++/lib/assembly/AssembledContig.hh	/^    known_pos_range2 conservativeRange; \/\/\/< subsection of the contig with conservative coverage$/;"	m	struct:AssembledContig
const_iterator	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    typedef data_t::const_iterator const_iterator;$/;"	t	struct:GenotypeLikelihoods
const_iterator	./src/c++/lib/blt_common/sparse_function_1d.hh	/^    typedef fmap_t::const_iterator const_iterator;$/;"	t	struct:sparse_function
const_iterator	./src/c++/lib/blt_util/basic_matrix.hh	/^    typedef typename data_t::const_iterator const_iterator;$/;"	t	struct:basic_matrix
const_iterator	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    typedef data_t::const_iterator const_iterator;$/;"	t	struct:BaseErrorContextObservationData
const_iterator	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    typedef data_t::const_iterator const_iterator;$/;"	t	struct:BaseErrorCounts
const_iterator	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    typedef data_t::const_iterator const_iterator;$/;"	t	struct:IndelBackgroundObservationData
const_iterator	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    typedef data_t::const_iterator const_iterator;$/;"	t	struct:IndelErrorContextObservationData
const_iterator	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    typedef data_t::const_iterator const_iterator;$/;"	t	struct:IndelErrorCounts
const_iterator	./src/c++/lib/starling_common/IndelBuffer.hh	/^    typedef indel_buffer_data_t::const_iterator const_iterator;$/;"	t	struct:IndelBuffer
constants	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum constants { HET_RES = 9,$/;"	g	namespace:DIGT_GRID
constants	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum constants { PRESTRAND_SIZE = DIGT_GRID::PRESTRAND_SIZE*DIGT_GRID::PRESTRAND_SIZE };$/;"	g	namespace:DDIGT_GRID
constants	./src/c++/lib/blt_util/digt.hh	/^enum constants$/;"	g	namespace:DIGT
contains	./src/c++/lib/starling_common/ActiveRegion.hh	/^    bool contains(const pos_t pos) const$/;"	f	class:ActiveRegion
containsReference	./src/c++/lib/htsapi/vcf_util.hh	/^    containsReference() const$/;"	f	struct:VcfGenotype
contanst	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^    enum contanst { MAX_QSCORE = 64, MAX_INDEX = 12 };$/;"	g	struct:het_ratio_cache
contextCompressability	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned contextCompressability = 0; \/\/\/ max adjacent sequence length encodable by 5 Ziv-Lempel-77 keywords$/;"	m	struct:AlleleReportInfo
contextLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^contextLogLhood($/;"	f	namespace:__anon20
contextLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^contextLogLhood($/;"	f	namespace:__anon18
contextLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^contextLogLhood($/;"	f	namespace:__anon26
contextLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^contextLogLhood($/;"	f	namespace:__anon22
contextLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^contextLogLhood($/;"	f	namespace:__anon21
contextLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^contextLogLhood($/;"	f	file:
contextLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^contextLogLhood($/;"	f	file:
contextLogLhood	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^contextLogLhood($/;"	f	file:
contigIds	./src/c++/lib/assembly/AssemblyReadInfo.hh	/^    std::vector<unsigned> contigIds; \/\/\/< index of the contigs that this read is used in$/;"	m	struct:AssemblyReadInfo
contigName	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^    std::string contigName;$/;"	m	struct:scan_result	file:
continuousAlleleDepth	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unsigned continuousAlleleDepth = 0;$/;"	m	struct:GermlineContinuousSiteSampleInfo
continuousFrequencyCallerExpectedObservationQuality	./src/c++/lib/starling_common/starling_base_shared.hh	/^    const int continuousFrequencyCallerExpectedObservationQuality = 17;$/;"	m	struct:starling_base_options
continuousFrequencyCallerMaxQscore	./src/c++/lib/starling_common/starling_base_shared.hh	/^    const int continuousFrequencyCallerMaxQscore = 40;$/;"	m	struct:starling_base_options
continuousTotalDepth	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unsigned continuousTotalDepth = 0;$/;"	m	struct:GermlineContinuousSiteSampleInfo
convert	./src/c++/lib/htsapi/vcf_record.cpp	/^struct convert$/;"	s	file:
convertToPrimitiveAlleles	./src/c++/lib/starling_common/ActiveRegion.cpp	/^void ActiveRegion::convertToPrimitiveAlleles($/;"	f	class:ActiveRegion
convertVcfAltToIndel	./src/c++/lib/blt_util/RecordTracker.cpp	/^convertVcfAltToIndel($/;"	f	file:
convert_vcfrecord_to_indel_allele	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^convert_vcfrecord_to_indel_allele($/;"	f
copy_ref_subseq	./src/c++/lib/applications/starling/LocusReportInfoUtil.cpp	/^copy_ref_subseq($/;"	f	file:
copy_ref_subseq	./src/c++/lib/starling_common/AlleleReportInfoUtil.cpp	/^copy_ref_subseq(const reference_contig_segment& ref,$/;"	f	file:
count	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^    int count;$/;"	m	struct:gvcf_block_site_record
count	./src/c++/lib/blt_common/MapqTracker.hh	/^    unsigned count = 0;$/;"	m	struct:MapqTracker
count	./src/c++/lib/blt_util/CircularCounter.hh	/^    count() const$/;"	f	struct:CircularCounter
count	./src/c++/lib/blt_util/MeanTracker.hh	/^    count() const$/;"	f	struct:MeanTracker
countCache	./src/c++/lib/starling_common/starling_base_shared.hh	/^    const min_count_binom_gte_cache countCache;$/;"	m	struct:starling_base_deriv_options
countFastaBases	./src/c++/lib/applications/countFastaBases/countFastaBases.hh	/^struct countFastaBases : public illumina::Program$/;"	s
count_t	./src/c++/lib/blt_util/depth_buffer.hh	/^    typedef RangeMap<pos_t,unsigned> count_t;$/;"	t	struct:depth_buffer_base
countsFilename	./src/c++/lib/applications/DumpSequenceErrorCounts/DSECOptions.hh	/^    std::string countsFilename;$/;"	m	struct:DSECOptions
countsFilename	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^    std::string countsFilename;$/;"	m	struct:EPECOptions
countsFilename	./src/c++/lib/applications/EstimateVariantErrorRates/EPECOptions.hh	/^    std::string countsFilename;$/;"	m	struct:EPECOptions
countsFilename	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    std::string countsFilename;$/;"	m	struct:SequenceErrorCountsOptions
countsFilename	./src/c++/lib/applications/MergeSequenceErrorCounts/MSECOptions.hh	/^    std::vector<std::string> countsFilename;$/;"	m	struct:MSECOptions
countsFilenameList	./src/c++/lib/applications/MergeSequenceErrorCounts/MSECOptions.hh	/^    std::string countsFilenameList;$/;"	m	struct:MSECOptions
coverage	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    unsigned coverage = 35;$/;"	m	struct:starling_site_sim_options
cpi	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        CleanedPileup cpi;$/;"	m	struct:starling_pos_processor_base::sample_info
createPhaseRecord	./src/c++/lib/applications/starling/VariantPhaser.cpp	/^createPhaseRecord(unsigned sampleIndex)$/;"	f	class:VariantPhaser
create_mismatch_filter_map	./src/c++/lib/starling_common/starling_read_util.cpp	/^create_mismatch_filter_map(const blt_options& client_opt,$/;"	f
curBamRec	./src/c++/lib/htsapi/bam_streamer.hh	/^    bam1_t *curBamRec;$/;"	m	struct:bam_streamer
curData	./src/c++/lib/htsapi/bam_streamer.hh	/^    uint8_t *curData;$/;"	m	struct:bam_streamer
curEnd	./src/c++/lib/htsapi/bam_streamer.hh	/^    uint32_t curEnd;$/;"	m	struct:bam_streamer
curStart	./src/c++/lib/htsapi/bam_streamer.hh	/^    uint32_t curStart;$/;"	m	struct:bam_streamer
curTid	./src/c++/lib/htsapi/bam_streamer.hh	/^    int curTid, nContigs;$/;"	m	struct:bam_streamer
cur_aeb_rec	./src/c++/lib/htsapi/bam_streamer.hh	/^    int cur_aeb_rec, cur_aib_rec, total_aeb_rec, total_aib_rec;$/;"	m	struct:bam_streamer
cur_aib_rec	./src/c++/lib/htsapi/bam_streamer.hh	/^    int cur_aeb_rec, cur_aib_rec, total_aeb_rec, total_aib_rec;$/;"	m	struct:bam_streamer
currentRegionLength	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    currentRegionLength() const$/;"	f	struct:MeanDepthTracker	file:
cxxCompilerName	./src/c++/lib/common/ProgramConfig.hh	/^cxxCompilerName()$/;"	f	namespace:illumina
cxxCompilerName	./src/c++/lib/starling_common/version.cpp	/^cxxCompilerName()$/;"	f
data	./src/c++/lib/calibration/RandomForestModel.hh	/^        std::vector<DecisionTreeNode> data;$/;"	m	struct:RandomForestModel::DecisionTree
data	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    data_t data;$/;"	m	struct:BaseErrorContextObservationData
data	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    std::map<IndelBackgroundObservation,unsigned> data;$/;"	m	struct:IndelBackgroundObservationData
data	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    std::map<IndelErrorContextObservation,unsigned> data;$/;"	m	struct:IndelErrorContextObservationData
data	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.hh	/^    data($/;"	f	struct:OrthogonalVariantAlleleCandidateGroup
data	./src/c++/lib/starling_common/indel.hh	/^    IndelData data;$/;"	m	struct:indel
data	./src/c++/lib/starling_common/indel.hh	/^    IndelObservationData data;$/;"	m	struct:IndelObservation
data_t	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    typedef std::vector<unsigned> data_t;$/;"	t	struct:GenotypeLikelihoods
data_t	./src/c++/lib/blt_util/basic_matrix.hh	/^    typedef typename std::vector<T> data_t;$/;"	t	struct:basic_matrix
data_t	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    typedef std::map<BaseErrorContext,BaseErrorData> data_t;$/;"	t	struct:BaseErrorCounts
data_t	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    typedef std::map<BaseErrorContextObservation,unsigned> data_t;$/;"	t	struct:BaseErrorContextObservationData
data_t	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    typedef std::map<IndelBackgroundObservation,unsigned> data_t;$/;"	t	struct:IndelBackgroundObservationData
data_t	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    typedef std::map<IndelErrorContext,IndelErrorData> data_t;$/;"	t	struct:IndelErrorCounts
data_t	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    typedef std::map<IndelErrorContextObservation,unsigned> data_t;$/;"	t	struct:IndelErrorContextObservationData
date	./src/c++/lib/calibration/IndelErrorModelMetadata.hh	/^    std::string date;$/;"	m	struct:IndelErrorModelMetadata
date	./src/c++/lib/calibration/VariantScoringModelMetadata.hh	/^    std::string date;$/;"	m	struct:VariantScoringModelMetadata
dbp	./src/c++/lib/starling_common/IndelBuffer.hh	/^        const depth_buffer* dbp;$/;"	m	struct:IndelBuffer::IndelBufferSampleData
dbp2	./src/c++/lib/starling_common/IndelBuffer.hh	/^        const depth_buffer* dbp2;$/;"	m	struct:IndelBuffer::IndelBufferSampleData
ddata	./src/c++/lib/starling_common/starling_read_util.cpp	/^    ddata(const unsigned read_size,$/;"	f	struct:__anon12::ddata
ddata	./src/c++/lib/starling_common/starling_read_util.cpp	/^struct ddata$/;"	s	namespace:__anon12	file:
de	./src/c++/lib/blt_common/snp_pos_info.hh	/^    const std::vector<float>& de;$/;"	m	struct:extended_pos_info
debug_dump_digt_lhood	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^debug_dump_digt_lhood(const blt_float_t* lhood,$/;"	f
decision	./src/c++/lib/calibration/RandomForestModel.hh	/^        TreeNode<int,double> decision; \/\/ (feature index, feature value)$/;"	m	struct:RandomForestModel::DecisionTreeNode
decrementSpanningIndelPloidy	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    decrementSpanningIndelPloidy(const pos_t pos)$/;"	f	struct:pos_basecall_buffer
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    static const double defaultLogTheta;$/;"	m	struct:__anon20::error_minfunc_model4	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^const double error_minfunc_model4::defaultLogTheta = std::log(1e-4);$/;"	m	class:__anon20::error_minfunc_model4	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    static const double defaultLogTheta;$/;"	m	struct:__anon18::error_minfunc_model3	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^const double error_minfunc_model3::defaultLogTheta = std::log(1e-4);$/;"	m	class:__anon18::error_minfunc_model3	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    static const double defaultLogTheta;$/;"	m	struct:__anon26::error_minfunc_model3	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^const double error_minfunc_model3::defaultLogTheta = std::log(1e-4);$/;"	m	class:__anon26::error_minfunc_model3	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    static const double defaultLogTheta;$/;"	m	struct:__anon22::error_minfunc	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^const double error_minfunc::defaultLogTheta = std::log(1e-4);$/;"	m	class:__anon22::error_minfunc	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    static const double defaultLogTheta;$/;"	m	struct:__anon21::error_minfunc	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^const double error_minfunc::defaultLogTheta = std::log(1e-4);$/;"	m	class:__anon21::error_minfunc	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    static const double defaultLogTheta;$/;"	m	struct:__anon19::error_minfunc	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^const double error_minfunc::defaultLogTheta = std::log(1e-3);$/;"	m	class:__anon19::error_minfunc	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    static const double defaultLogTheta;$/;"	m	struct:__anon24::error_minfunc	file:
defaultLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^const double error_minfunc::defaultLogTheta = std::log(1e-3);$/;"	m	class:__anon24::error_minfunc	file:
defaultLogTheta	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    const double defaultLogTheta;$/;"	m	struct:error_minfunc_model3	file:
defaultMinChunk	./src/c++/lib/blt_util/RangeMap.hh	/^    static const unsigned defaultMinChunk = 1024;$/;"	m	struct:RangeMap
default_classify_indel	./src/c++/lib/applications/starling/ScoringModelManager.cpp	/^default_classify_indel($/;"	f	class:ScoringModelManager
default_classify_indel_locus	./src/c++/lib/applications/starling/ScoringModelManager.cpp	/^default_classify_indel_locus($/;"	f	class:ScoringModelManager
default_classify_site	./src/c++/lib/applications/starling/ScoringModelManager.cpp	/^default_classify_site($/;"	f	class:ScoringModelManager
default_classify_site_locus	./src/c++/lib/applications/starling/ScoringModelManager.cpp	/^default_classify_site_locus($/;"	f	class:ScoringModelManager
default_min_read_bp_flank	./src/c++/lib/starling_common/starling_base_shared.hh	/^    int default_min_read_bp_flank = 5;$/;"	m	struct:starling_base_options
del	./src/c++/lib/alignment/GlobalAligner.hh	/^        ScoreType del;$/;"	m	struct:GlobalAligner::ScoreVal
del	./src/c++/lib/alignment/GlobalAligner.hh	/^        code_t del : 2;$/;"	m	struct:GlobalAligner::PtrVal
delete_length	./src/c++/lib/blt_util/align_path_util.hh	/^    unsigned delete_length;$/;"	m	struct:ALIGNPATH::swap_info
delete_length	./src/c++/lib/starling_common/IndelKey.hh	/^    delete_length() const$/;"	f	struct:IndelKey
deletionErrorRate	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^        double deletionErrorRate = 0;$/;"	m	struct:IndelErrorRateSet::IndelErrorRates
deletionLength	./src/c++/lib/starling_common/IndelKey.hh	/^    unsigned deletionLength;$/;"	m	struct:IndelKey
delta	./src/c++/lib/starling_common/read_mismatch_info.hh	/^    int delta;$/;"	m	struct:read_base_mismatch_info
delta_size	./src/c++/lib/starling_common/starling_read_util.cpp	/^    const unsigned delta_size;$/;"	m	struct:__anon12::ddata	file:
dependentErrorProb	./src/c++/lib/starling_common/PileupCleaner.hh	/^    dependentErrorProb() const$/;"	f	struct:CleanedPileup
dependentErrorProb	./src/c++/lib/starling_common/PileupCleaner.hh	/^    dependentErrorProb()$/;"	f	struct:CleanedPileup
dependent_prob_cache	./src/c++/lib/blt_common/adjust_joint_eprob.hh	/^    dependent_prob_cache() : _val(MAX_QSCORE+1), _is_init(MAX_QSCORE+1,false) {}$/;"	f	struct:dependent_prob_cache
dependent_prob_cache	./src/c++/lib/blt_common/adjust_joint_eprob.hh	/^struct dependent_prob_cache$/;"	s
depth	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    double depth;$/;"	m	struct:IndelDepthSupportTotal
depth	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    unsigned depth;$/;"	m	struct:IndelBackgroundObservation
depthObservations	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    depthObservations() const$/;"	f	struct:ChromDepthTracker
depthSkipped	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    uint64_t depthSkipped = 0;$/;"	m	struct:BaseErrorData
depthSkipped	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    uint64_t depthSkipped = 0;$/;"	m	struct:IndelErrorData
depthSupport	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    IndelDepthSupportTotal depthSupport;$/;"	m	struct:IndelErrorData
depth_buffer	./src/c++/lib/blt_util/depth_buffer.hh	/^struct depth_buffer : public depth_buffer_base$/;"	s
depth_buffer_base	./src/c++/lib/blt_util/depth_buffer.hh	/^struct depth_buffer_base$/;"	s
depth_buffer_compressible	./src/c++/lib/blt_util/depth_buffer.hh	/^    depth_buffer_compressible($/;"	f	struct:depth_buffer_compressible
depth_buffer_compressible	./src/c++/lib/blt_util/depth_buffer.hh	/^struct depth_buffer_compressible : public depth_buffer_base$/;"	s
depth_stream_stat	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    depth_stream_stat() : M_(0),Q_(0),max_(0),min_(0),k_(0),n_(0) {}$/;"	f	struct:depth_stream_stat
depth_stream_stat	./src/c++/lib/blt_util/depth_stream_stat.hh	/^struct depth_stream_stat$/;"	s
depth_stream_stat_range	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    depth_stream_stat_range(const unsigned total_obs)$/;"	f	struct:depth_stream_stat_range
depth_stream_stat_range	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^struct depth_stream_stat_range$/;"	s
derived_empty	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    derived_empty() const$/;"	f	struct:starling_pos_processor_base
description	./src/c++/lib/blt_util/align_path.hh	/^description(const issue_t i)$/;"	f	namespace:ALIGNPATH::ALIGN_ISSUE
deserialize	./src/c++/lib/calibration/IndelErrorModelMetadata.cpp	/^deserialize(const Json::Value& root)$/;"	f	class:IndelErrorModelMetadata
deserializeIndelErrorModels	./src/c++/lib/calibration/IndelErrorModelJson.cpp	/^deserializeIndelErrorModels(const std::vector<std::string>& modelFilenames)$/;"	f	class:IndelErrorModelJson
deserializeTheta	./src/c++/lib/calibration/IndelErrorModelJson.cpp	/^deserializeTheta($/;"	f	class:IndelErrorModelJson
destructive_split_string	./src/c++/lib/blt_util/string_util.cpp	/^destructive_split_string($/;"	f
dfeatures	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    VariantScoringFeatureKeeper dfeatures;$/;"	m	struct:strelka_shared_modifiers
difference	./src/c++/lib/blt_util/time_util.hh	/^    difference($/;"	f	struct:CpuTimes
digit	./src/c++/lib/htsapi/vcf_util.cpp	/^    digit(const char* gt,$/;"	f	struct:gt_parse_helper	file:
dim	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    virtual unsigned dim() const$/;"	f	struct:__anon22::error_minfunc
dim	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    virtual unsigned dim() const$/;"	f	struct:__anon21::error_minfunc
dim	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    virtual unsigned dim() const$/;"	f	struct:__anon19::error_minfunc
dim	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    virtual unsigned dim() const$/;"	f	struct:__anon24::error_minfunc
dim	./src/c++/lib/blt_common/position_loghood_minfunc.hh	/^    virtual unsigned dim() const$/;"	f	struct:position_allele_distro_loghood_minfunc
diploid_genotype	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    diploid_genotype()$/;"	f	struct:diploid_genotype
diploid_genotype	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^struct diploid_genotype$/;"	s
dist_t	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^typedef boost::poisson_distribution<> dist_t;$/;"	t	file:
dist_t	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^typedef boost::poisson_distribution<> dist_t;$/;"	t	file:
distanceFromClosestReadEdge	./src/c++/lib/starling_common/IndelData.hh	/^    int16_t distanceFromClosestReadEdge;$/;"	m	struct:ReadPathScores
distanceFromReadEdge	./src/c++/lib/blt_common/snp_pos_info.hh	/^    MeanTracker distanceFromReadEdge;$/;"	m	struct:snp_pos_info
distanceFromReadEdge	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    MeanTracker distanceFromReadEdge;$/;"	m	struct:AlleleSampleReportInfo
doHaplotypesMeetPhasingErrorCondition1	./src/c++/lib/starling_common/ActiveRegion.cpp	/^doHaplotypesMeetPhasingErrorCondition1($/;"	f	file:
doNotUseHaplotyping	./src/c++/lib/starling_common/ActiveRegion.cpp	/^void ActiveRegion::doNotUseHaplotyping()$/;"	f	class:ActiveRegion
doc	./src/c++/lib/applications/strelka/strelka_info.cpp	/^doc() const$/;"	f	class:strelka_info
downcast	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^    static std::unique_ptr<TDerived> downcast(std::unique_ptr<TBase> basePtr)$/;"	f	class:variant_pipe_stage_base
dump	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^dump(std::ostream& os) const$/;"	f	class:VariantOverlapResolver
dump	./src/c++/lib/blt_util/RangeMap.hh	/^    dump(const char* msg, std::ostream& os) const$/;"	f	struct:RangeMap
dump	./src/c++/lib/blt_util/RecordTracker.cpp	/^dump($/;"	f	class:RecordTracker
dump	./src/c++/lib/blt_util/RegionTracker.cpp	/^dump($/;"	f	class:RegionTracker
dump	./src/c++/lib/blt_util/RegionTrackerImpl.hh	/^dump($/;"	f	class:RegionPayloadTracker
dump	./src/c++/lib/blt_util/istream_line_splitter.cpp	/^dump(std::ostream& os) const$/;"	f	class:istream_line_splitter
dump	./src/c++/lib/blt_util/stage_manager.cpp	/^dump(std::ostream& os) const$/;"	f	class:stage_data
dump	./src/c++/lib/calibration/featuresetUtil.hh	/^    dump($/;"	f	struct:VariantScoringFeatureKeeper
dump	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^dump($/;"	f	class:BaseErrorContextObservationData
dump	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^dump($/;"	f	class:BaseErrorCounts
dump	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^dump($/;"	f	class:BaseErrorData
dump	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^dump($/;"	f	class:IndelBackgroundObservationData
dump	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^dump($/;"	f	class:IndelErrorContextObservationData
dump	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^dump($/;"	f	class:IndelErrorCounts
dump	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^dump($/;"	f	class:IndelErrorData
dump	./src/c++/lib/errorAnalysis/SequenceErrorCounts.cpp	/^dump($/;"	f	class:SequenceErrorCounts
dump	./src/c++/lib/starling_common/AlleleReportInfo.cpp	/^void AlleleReportInfo::dump(std::ostream& os) const$/;"	f	class:AlleleReportInfo
dump	./src/c++/lib/starling_common/AlleleReportInfo.cpp	/^void AlleleSampleReportInfo::dump(std::ostream& os) const$/;"	f	class:AlleleSampleReportInfo
dump	./src/c++/lib/starling_common/IndelBuffer.cpp	/^dump(std::ostream& os) const$/;"	f	class:IndelBuffer
dump	./src/c++/lib/starling_common/pos_basecall_buffer.cpp	/^dump(std::ostream& \/*os*\/) const$/;"	f	class:pos_basecall_buffer
dump	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^    dump(std::ostream& os) const$/;"	f	struct:align_printer
dumpLocusBuffer	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^dumpLocusBuffer($/;"	f
dumpPosition	./src/c++/lib/starling_common/IndelBuffer.cpp	/^dumpPosition($/;"	f	class:IndelBuffer
dumpSingleRefTable	./src/c++/lib/alignment/AlignerBaseImpl.hh	/^dumpSingleRefTable($/;"	f	class:AlignerBase
dumpTables	./src/c++/lib/alignment/SingleRefAlignerSharedImpl.hh	/^dumpTables($/;"	f	class:SingleRefAlignerBase
dump_cl	./src/c++/lib/common/Program.cpp	/^dump_cl(int argc,$/;"	f	file:
dump_indel_set	./src/c++/lib/starling_common/indel_set.cpp	/^dump_indel_set(const indel_set_t& is,$/;"	f
dump_indel_status	./src/c++/lib/starling_common/starling_read_align.cpp	/^dump_indel_status(const starling_align_indel_status& ismap,$/;"	f	file:
dump_pos	./src/c++/lib/starling_common/starling_read_buffer.cpp	/^dump_pos(const pos_t pos,$/;"	f	class:starling_read_buffer
dump_range	./src/c++/lib/starling_common/IndelBuffer.cpp	/^dump_range($/;"	f	file:
dump_ref_map	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^dump_ref_map(const std::vector<ref_map_type>& ref_map,$/;"	f	file:
dup2	./src/c++/lib/blt_util/compat_unistd.h	26;"	d
duplicate	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned duplicate = 0;$/;"	m	struct:blt_read_counts
ebuff	./src/c++/lib/starling_common/IndelBuffer.hh	/^    ebuff(const unsigned sampleId) const$/;"	f	struct:IndelBuffer
ebuff2	./src/c++/lib/starling_common/IndelBuffer.hh	/^    ebuff2(const unsigned sampleId) const$/;"	f	struct:IndelBuffer
edit_bam_cigar	./src/c++/lib/htsapi/align_path_bam_util.cpp	/^edit_bam_cigar(const path_t& apath,$/;"	f
edit_bam_qname	./src/c++/lib/htsapi/bam_util.cpp	/^edit_bam_qname(const char* name,$/;"	f
edit_bam_read_and_quality	./src/c++/lib/htsapi/bam_util.cpp	/^edit_bam_read_and_quality(const char* read,$/;"	f
efreq_levels	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^        unsigned efreq_levels[N_BASE];$/;"	m	struct:nploid_info::gtype_info
elandize_base	./src/c++/lib/blt_util/seq_util.hh	/^elandize_base(char a)$/;"	f
empiricalVariantScore	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    int empiricalVariantScore = -1;$/;"	m	struct:LocusSampleInfo
empty	./src/c++/lib/applications/strelka/NoiseBuffer.hh	/^    empty() const$/;"	f	struct:NoiseBuffer
empty	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    empty() const$/;"	f	struct:SomaticIndelVcfWriter
empty	./src/c++/lib/blt_util/RangeMap.hh	/^    empty() const$/;"	f	struct:RangeMap
empty	./src/c++/lib/blt_util/RecordTracker.hh	/^    empty() const$/;"	f	struct:RecordTracker
empty	./src/c++/lib/blt_util/RegionTracker.hh	/^    empty() const$/;"	f	struct:RegionPayloadTracker
empty	./src/c++/lib/blt_util/RegionTracker.hh	/^    empty() const$/;"	f	struct:RegionTracker
empty	./src/c++/lib/blt_util/basic_matrix.hh	/^    empty()$/;"	f	struct:basic_matrix
empty	./src/c++/lib/blt_util/fastRanksum.hh	/^        empty() const$/;"	f	struct:fastRanksum::ranksumObs
empty	./src/c++/lib/blt_util/id_map.hh	/^    empty() const$/;"	f	struct:id_map
empty	./src/c++/lib/blt_util/id_map.hh	/^    empty() const$/;"	f	struct:id_set
empty	./src/c++/lib/blt_util/stream_stat.hh	/^    bool empty() const$/;"	f	struct:stream_stat
empty	./src/c++/lib/calibration/featuresetUtil.hh	/^    empty() const$/;"	f	struct:VariantScoringFeatureKeeper
empty	./src/c++/lib/htsapi/bam_record.hh	/^    empty() const$/;"	f	struct:bam_record
empty	./src/c++/lib/starling_common/CandidateSnvBuffer.cpp	/^bool CandidateSnvBuffer::empty() const$/;"	f	class:CandidateSnvBuffer
empty	./src/c++/lib/starling_common/IndelBuffer.hh	/^    empty() const$/;"	f	struct:IndelBuffer
empty	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.hh	/^    empty() const$/;"	f	struct:OrthogonalVariantAlleleCandidateGroup
empty	./src/c++/lib/starling_common/alignment.hh	/^    empty() const$/;"	f	struct:alignment
empty	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    empty() const$/;"	f	struct:pos_basecall_buffer
empty	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    empty() const$/;"	f	struct:starling_pos_processor_base
empty	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    empty() const$/;"	f	struct:starling_read_buffer
emptySkipped	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    uint64_t emptySkipped = 0;$/;"	m	struct:BaseErrorData
end	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    end() const$/;"	f	struct:GenotypeLikelihoods
end	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    end() const$/;"	f	struct:GermlineIndelLocusInfo
end	./src/c++/lib/blt_common/sparse_function_1d.hh	/^    end() const$/;"	f	struct:sparse_function
end	./src/c++/lib/blt_util/basic_matrix.hh	/^    end() const$/;"	f	struct:basic_matrix
end	./src/c++/lib/blt_util/basic_matrix.hh	/^    end()$/;"	f	struct:basic_matrix
end	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    end() const$/;"	f	struct:reference_contig_segment
end	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    end() const$/;"	f	struct:BaseErrorContextObservationData
end	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    end() const$/;"	f	struct:BaseErrorCounts
end	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    end() const$/;"	f	struct:IndelBackgroundObservationData
end	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    end() const$/;"	f	struct:IndelErrorContextObservationData
end	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    end() const$/;"	f	struct:IndelErrorCounts
end	./src/c++/lib/htsapi/bed_record.hh	/^    int end = 0;$/;"	m	struct:bed_record
endFile	./src/c++/lib/htsapi/bam_streamer.hh	/^    int startFile, endFile;$/;"	m	struct:bam_streamer
endPriorIndelSegment	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^    unsigned endPriorIndelSegment = 0;$/;"	m	struct:AlignmentInfo	file:
endPriorMatchSegment	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^    unsigned endPriorMatchSegment = 0;$/;"	m	struct:AlignmentInfo	file:
endRegion	./src/c++/lib/applications/starling/starling_run.cpp	/^    uint32_t *endRegion, *regionNumber, *numFinishedTasks;$/;"	m	struct:workerData	file:
end_pos	./src/c++/lib/blt_util/known_pos_range2.hh	/^    end_pos() const$/;"	f	struct:known_pos_range2
end_pos	./src/c++/lib/blt_util/pos_range.hh	/^    pos_t end_pos;$/;"	m	struct:pos_range
enforceKeyPresent	./src/c++/lib/blt_util/RangeMap.hh	/^    enforceKeyPresent($/;"	f	struct:RangeMap
erase	./src/c++/lib/blt_util/RangeMap.hh	/^    erase($/;"	f	struct:RangeMap
eraseTo	./src/c++/lib/blt_util/RangeMap.hh	/^    eraseTo($/;"	f	struct:RangeMap
error	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    BaseErrorContextObservationData error;$/;"	m	struct:BaseErrorData
error	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    IndelErrorContextObservationData error;$/;"	m	struct:IndelErrorData
errorNumber_	./src/c++/lib/common/Exceptions.hh	/^    const int errorNumber_;$/;"	m	class:illumina::common::ExceptionData
errorRate	./src/c++/lib/calibration/IndelErrorModel.cpp	/^double AdaptiveIndelErrorModel::errorRate(const unsigned repeatCount) const$/;"	f	class:AdaptiveIndelErrorModel
error_minfunc	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    error_minfunc($/;"	f	struct:__anon22::error_minfunc
error_minfunc	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^struct error_minfunc : public codemin::minfunc_interface<double>$/;"	s	namespace:__anon22	file:
error_minfunc	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    error_minfunc($/;"	f	struct:__anon21::error_minfunc
error_minfunc	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^struct error_minfunc : public codemin::minfunc_interface<double>$/;"	s	namespace:__anon21	file:
error_minfunc	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    error_minfunc($/;"	f	struct:__anon19::error_minfunc
error_minfunc	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^struct error_minfunc : public codemin::minfunc_interface<double>$/;"	s	namespace:__anon19	file:
error_minfunc	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    error_minfunc($/;"	f	struct:__anon24::error_minfunc
error_minfunc	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^struct error_minfunc : public codemin::minfunc_interface<double>$/;"	s	namespace:__anon24	file:
error_minfunc_model3	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    error_minfunc_model3($/;"	f	struct:__anon18::error_minfunc_model3
error_minfunc_model3	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^struct error_minfunc_model3 : public codemin::minfunc_interface<double>$/;"	s	namespace:__anon18	file:
error_minfunc_model3	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    error_minfunc_model3($/;"	f	struct:__anon26::error_minfunc_model3
error_minfunc_model3	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^struct error_minfunc_model3 : public codemin::minfunc_interface<double>$/;"	s	namespace:__anon26	file:
error_minfunc_model3	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    error_minfunc_model3($/;"	f	struct:error_minfunc_model3
error_minfunc_model3	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^struct error_minfunc_model3 : public codemin::minfunc_interface<double>$/;"	s	file:
error_minfunc_model4	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    error_minfunc_model4($/;"	f	struct:__anon20::error_minfunc_model4
error_minfunc_model4	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^struct error_minfunc_model4 : public codemin::minfunc_interface<double>$/;"	s	namespace:__anon20	file:
error_prob	./src/c++/lib/blt_common/snp_pos_info.hh	/^    error_prob() const$/;"	f	struct:base_call
error_prob_to_phred	./src/c++/lib/blt_util/qscore.hh	/^error_prob_to_phred(const FloatType prob)$/;"	f
error_prob_to_qphred	./src/c++/lib/blt_util/qscore.hh	/^error_prob_to_qphred(const FloatType prob)$/;"	f
estdepth_buff	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        depth_buffer estdepth_buff; \/\/ provide an early estimate of read depth before realignment.$/;"	m	struct:starling_pos_processor_base::sample_info
estdepth_buff_tier2	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        depth_buffer estdepth_buff_tier2; \/\/ provide an early estimate of read depth before realignment.$/;"	m	struct:starling_pos_processor_base::sample_info
estimateIndelErrorRates	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^estimateIndelErrorRates()$/;"	f	class:IndelModelProduction
estimateModelParams	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^estimateModelParams($/;"	f	file:
evidence_t	./src/c++/lib/starling_common/IndelData.hh	/^    typedef std::set<align_id_t> evidence_t;$/;"	t	struct:IndelSampleData
evsDevelopmentFeatures	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    VariantScoringFeatureKeeper evsDevelopmentFeatures;$/;"	m	struct:GermlineDiploidIndelLocusInfo
evsDevelopmentFeatures	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    VariantScoringFeatureKeeper evsDevelopmentFeatures;$/;"	m	struct:GermlineDiploidSiteLocusInfo
evsFeatures	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    VariantScoringFeatureKeeper evsFeatures;$/;"	m	struct:GermlineDiploidIndelLocusInfo
evsFeatures	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    VariantScoringFeatureKeeper evsFeatures;$/;"	m	struct:GermlineDiploidSiteLocusInfo
excludedRegionSkipped	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    uint64_t excludedRegionSkipped = 0;$/;"	m	struct:BaseErrorData
excludedRegionSkipped	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    uint64_t excludedRegionSkipped = 0;$/;"	m	struct:IndelErrorData
excludedRegionsFileList	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    std::vector<std::string> excludedRegionsFileList;$/;"	m	struct:SequenceErrorCountsOptions
execve	./src/c++/lib/blt_util/compat_unistd.h	27;"	d
exon_offsets	./src/c++/lib/blt_util/align_path.hh	/^    exon_offsets(const path_t& apath)$/;"	f	struct:ALIGNPATH::exon_offsets
exon_offsets	./src/c++/lib/blt_util/align_path.hh	/^struct exon_offsets$/;"	s	namespace:ALIGNPATH
expand	./src/c++/lib/blt_util/RangeMap.hh	/^    expand($/;"	f	struct:RangeMap
expandBy	./src/c++/lib/blt_util/known_pos_range2.hh	/^    expandBy($/;"	f	struct:known_pos_range2
expect	./src/c++/lib/blt_util/digt.hh	/^expect($/;"	f	namespace:DIGT
expect	./src/c++/lib/blt_util/monogt.hh	/^expect(const int base_id,$/;"	f	namespace:MONOGT
expect2	./src/c++/lib/blt_util/digt.hh	/^expect2(const int base_id,$/;"	f	namespace:DIGT
expect2_bias	./src/c++/lib/blt_util/digt.hh	/^expect2_bias(const int base_id,$/;"	f	namespace:DIGT
expect_freq	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    expect_freq(const unsigned gt_index,$/;"	f	struct:nploid_info
expect_freq_chunk	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    expect_freq_chunk() const$/;"	f	struct:nploid_info
expect_freq_level	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    expect_freq_level(const unsigned gt_index,$/;"	f	struct:nploid_info
expect_freq_level_size	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    expect_freq_level_size() const$/;"	f	struct:nploid_info
exportModel	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^IndelModelProduction::exportModel() const$/;"	f	class:IndelModelProduction
exportModelUsingInputJson	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^IndelModelProduction::exportModelUsingInputJson(const std::string& jsonFilename) const$/;"	f	class:IndelModelProduction
exportObservations	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^exportObservations($/;"	f	class:IndelErrorData
export_md_to_apath	./src/c++/lib/blt_util/align_path_match_descriptor.cpp	/^export_md_to_apath(const char* md,$/;"	f	namespace:ALIGNPATH
export_md_to_apath_impl	./src/c++/lib/blt_util/align_path_match_descriptor.cpp	/^export_md_to_apath_impl(const char* md,$/;"	f	namespace:ALIGNPATH
extend	./src/c++/lib/alignment/AlignmentScores.hh	/^    const ScoreType extend; \/\/\/< gap extend, gap of length N is scored (open + N * extend) (should be negative or zero)$/;"	m	struct:AlignmentScores
extend_or_add_sc	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^extend_or_add_sc(alignment& al,$/;"	f	file:
extendedIndelReport	./src/c++/lib/applications/DumpSequenceErrorCounts/DumpSequenceErrorCounts.cpp	/^extendedIndelReport($/;"	f	file:
extended_pos_info	./src/c++/lib/blt_common/snp_pos_info.hh	/^    extended_pos_info(const snp_pos_info& pi_init,$/;"	f	struct:extended_pos_info
extended_pos_info	./src/c++/lib/blt_common/snp_pos_info.hh	/^struct extended_pos_info$/;"	s
extra_path_info	./src/c++/lib/starling_common/starling_read_align.cpp	/^struct extra_path_info$/;"	s	file:
extractAlts	./src/c++/lib/blt_util/RecordTracker.cpp	/^extractAlts()$/;"	f	class:IndelGenotype
extractFormatEntry	./src/c++/lib/blt_util/RecordTracker.cpp	/^extractFormatEntry($/;"	f	file:
extractVcfField	./src/c++/lib/blt_util/RecordTracker.cpp	/^extractVcfField($/;"	f	file:
fR	./src/c++/lib/htsapi/bam_streamer.hh	/^    fullRec *fR;$/;"	m	struct:bam_streamer
fallbackFilename	./src/c++/lib/applications/EstimateVariantErrorRates/EPECOptions.hh	/^    std::string fallbackFilename;$/;"	m	struct:EPECOptions
fastRanksum	./src/c++/lib/blt_util/fastRanksum.hh	/^struct fastRanksum$/;"	s
featureError	./src/c++/lib/calibration/featuresetUtil.cpp	/^featureError($/;"	f	class:VariantScoringFeatureKeeper
featureInput_t	./src/c++/lib/calibration/VariantScoringModelBase.hh	/^    typedef std::vector<double> featureInput_t;$/;"	t	struct:VariantScoringModelBase
featureMapError	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^featureMapError($/;"	f	file:
featureMapOrderError	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^featureMapOrderError($/;"	f	file:
featureMap_t	./src/c++/lib/calibration/VariantScoringModelMetadata.hh	/^    typedef std::map<std::string,unsigned> featureMap_t;$/;"	t	struct:VariantScoringModelMetadata
features	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    VariantScoringFeatureKeeper features;$/;"	m	struct:strelka_shared_modifiers
fexists	./src/c++/lib/htsapi/bam_streamer.cpp	/^fexists(const char* filename)$/;"	f	file:
fileName	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^    const char* fileName;$/;"	m	struct:scan_result	file:
fileno	./src/c++/lib/blt_util/compat_unistd.h	30;"	d
files_t	./src/c++/lib/options/AlignmentFileOptions.hh	/^    typedef std::vector<std::string> files_t;$/;"	t	struct:AlignmentFileOptions
filter	./src/c++/lib/blt_util/RecordTracker.hh	/^    std::string filter;$/;"	m	struct:IndelGenotype
filterCutoff	./src/c++/lib/calibration/VariantScoringModelMetadata.hh	/^    double filterCutoff;$/;"	m	struct:VariantScoringModelMetadata
filters	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    GermlineFilterKeeper filters;$/;"	m	struct:LocusInfo
filters	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    GermlineFilterKeeper filters;$/;"	m	struct:LocusSampleInfo
filters	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    std::bitset<GERMLINE_VARIANT_VCF_FILTERS::SIZE> filters;$/;"	m	struct:GermlineFilterKeeper
filters	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    strelka_filter_keeper filters;$/;"	m	struct:strelka_shared_modifiers
final	./src/c++/lib/starling_common/test/starling_base_options_test.hh	/^struct starling_base_options_test final : public starling_base_options$/;"	s
finalize	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    finalize($/;"	f	struct:ChromDepthTracker
finalizeRates	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    finalizeRates()$/;"	f	struct:IndelErrorRateSet
finalizeSamples	./src/c++/lib/starling_common/IndelBuffer.hh	/^    finalizeSamples()$/;"	f	struct:IndelBuffer
finalizeSequenceErrorCountsOptions	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptionsParser.cpp	/^finalizeSequenceErrorCountsOptions($/;"	f
finalize_args	./src/c++/lib/blt_common/blt_arg_parse_util.cpp	/^finalize_args()$/;"	f	class:arg_data
finalize_legacy_starling_options	./src/c++/lib/starling_common/starling_base_option_parser.cpp	/^finalize_legacy_starling_options($/;"	f	file:
finalize_snoise_options	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_option_parser.cpp	/^finalize_snoise_options($/;"	f
finalize_starling_base_options	./src/c++/lib/starling_common/starling_base_option_parser.cpp	/^finalize_starling_base_options($/;"	f
finalize_starling_options	./src/c++/lib/applications/starling/starling_option_parser.cpp	/^finalize_starling_options($/;"	f
finalize_strelka_options	./src/c++/lib/applications/strelka/strelka_option_parser.cpp	/^finalize_strelka_options($/;"	f
find	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    find(const IndelErrorContext& key) const$/;"	f	struct:IndelErrorCounts
findDataException	./src/c++/lib/starling_common/IndelBuffer.cpp	/^findDataException(const IndelKey& indelKey) const$/;"	f	class:IndelBuffer
findInsertCollapse	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^findInsertCollapse($/;"	f	file:
findLeftShift	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^findLeftShift($/;"	f	file:
finishRealignment	./src/c++/lib/starling_common/starling_read_align.cpp	/^finishRealignment($/;"	f	file:
finish_gvcf_header	./src/c++/lib/applications/starling/gvcf_header.cpp	/^finish_gvcf_header($/;"	f
finish_indel_sppr	./src/c++/lib/starling_common/starling_pos_processor_indel_util.cpp	/^finish_indel_sppr(IndelObservation& obs,$/;"	f	file:
finish_prior	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^finish_prior($/;"	f	file:
finish_process_pos	./src/c++/lib/blt_util/stage_manager.cpp	/^finish_process_pos()$/;"	f	class:stage_manager
fisher_exact_test_pval_2x2	./src/c++/lib/blt_util/fisher_exact_test.cpp	/^fisher_exact_test_pval_2x2($/;"	f
fixCstring	./src/c++/lib/blt_util/seq_util.hh	/^inline void fixCstring(char* b)$/;"	f
fixCstring	./src/c++/lib/blt_util/seq_util.hh	/^template <typename T> void fixCstring(T) {}$/;"	f
flag	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint16_t flag;$/;"	m	struct:__anon7
flag	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint16_t flag;$/;"	m	struct:__anon8
floating	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned floating = 0;$/;"	m	struct:blt_read_counts
flush	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^    void flush()$/;"	f	class:variant_pipe_stage_base
flush	./src/c++/lib/blt_util/RegionProcessor.cpp	/^flush()$/;"	f	class:RegionProcessor
flushPos	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    flushPos($/;"	f	struct:DepthTracker	file:
flush_impl	./src/c++/lib/applications/starling/VariantPhaser.cpp	/^flush_impl()$/;"	f	class:VariantPhaser
flush_impl	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^flush_impl()$/;"	f	class:gvcf_writer
flush_impl	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^    virtual void flush_impl() {}$/;"	f	class:variant_pipe_stage_base
flyweight_notifier	./src/c++/lib/blt_util/flyweight_observer.hh	/^struct flyweight_notifier$/;"	s
flyweight_observer	./src/c++/lib/blt_util/flyweight_observer.hh	/^struct flyweight_observer$/;"	s
flyweight_observer_t	./src/c++/lib/blt_util/flyweight_observer.hh	/^    typedef flyweight_observer<T> flyweight_observer_t;$/;"	t	struct:flyweight_notifier
fmap_t	./src/c++/lib/blt_common/sparse_function_1d.hh	/^    typedef std::map<blt_float_t,blt_float_t> fmap_t;$/;"	t	struct:sparse_function
force_output_vcf	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::vector<std::string> force_output_vcf;$/;"	m	struct:starling_base_options
frac_tol	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^    const double frac_tol;$/;"	m	struct:gvcf_block_site_record
freeBam	./src/c++/lib/htsapi/bam_record.hh	/^    freeBam()$/;"	f	struct:bam_record
from_ntype_qphred	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    int from_ntype_qphred = 0;$/;"	m	struct:result_set
fs	./src/c++/lib/starling_common/starling_read_util.cpp	/^    const unsigned fs;$/;"	m	struct:__anon12::ddata	file:
fs2	./src/c++/lib/starling_common/starling_read_util.cpp	/^    const unsigned fs2;$/;"	m	struct:__anon12::ddata	file:
ftruncate	./src/c++/lib/blt_util/compat_unistd.h	28;"	d
fullRec	./src/c++/lib/htsapi/bam_streamer.hh	/^}fullRec;$/;"	t	typeref:struct:__anon7
full_read_offset	./src/c++/lib/starling_common/starling_read_segment.hh	/^    full_read_offset() const$/;"	f	struct:read_segment
full_read_size	./src/c++/lib/starling_common/starling_read_segment.cpp	/^full_read_size() const$/;"	f	class:read_segment
full_size	./src/c++/lib/blt_util/window_util.hh	/^    full_size() const$/;"	f	struct:window_average
fval	./src/c++/lib/blt_common/sample_range_impl.hh	/^    fval(const blt_float_t x_init = 0.,$/;"	f	struct:fval
fval	./src/c++/lib/blt_common/sample_range_impl.hh	/^struct fval$/;"	s
fwdAlt	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^    unsigned fwdAlt = 0;$/;"	m	struct:StrandBiasCounts	file:
fwdCounts	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    SupportingReadCountGroup fwdCounts;$/;"	m	struct:LocusSupportingReadStats
fwdOther	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^    unsigned fwdOther = 0;$/;"	m	struct:StrandBiasCounts	file:
fwd_apath_to_export_md	./src/c++/lib/blt_util/align_path_match_descriptor.cpp	/^fwd_apath_to_export_md(path_t& apath,$/;"	f	namespace:ALIGNPATH
g	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    HaplotypeId g;$/;"	m	struct:HaplotypeIdAndCountRatio
gen	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^static gen_t gen;\/\/(static_cast<unsigned> (std::time(0));$/;"	v	file:
gen	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^static gen_t gen;\/\/(static_cast<unsigned> (std::time(0));$/;"	v	file:
gen_t	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^typedef boost::mt19937 gen_t;$/;"	t	file:
gen_t	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^typedef boost::mt19937 gen_t;$/;"	t	file:
generateMotifsNode	./src/c++/lib/calibration/IndelErrorModelJson.cpp	/^generateMotifsNode() const$/;"	f	class:IndelErrorModelJson
genome	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^        blt_float_t genome[DIGT::SIZE];$/;"	m	struct:pprob_digt_caller::prior_set
genome	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    result_set genome;$/;"	m	struct:diploid_genotype
genotype	./src/c++/lib/blt_util/RecordTracker.hh	/^    GENOTYPE_STATUS::genotype_t genotype = GENOTYPE_STATUS::HOMREF;$/;"	m	struct:IndelGenotype
genotypePhredLoghood	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    GenotypeLikelihoods genotypePhredLoghood;$/;"	m	struct:LocusSampleInfo
genotypeQuality	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    int genotypeQuality=0;$/;"	m	struct:LocusSampleInfo
genotypeQualityPolymorphic	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    int genotypeQualityPolymorphic=0;$/;"	m	struct:LocusSampleInfo
genotype_t	./src/c++/lib/blt_util/RecordTracker.hh	/^enum genotype_t$/;"	g	namespace:GENOTYPE_STATUS
get	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsInfo.hh	/^    const prog_info& get()$/;"	f	struct:GetSequenceErrorCountsInfo
get	./src/c++/lib/applications/starling/starling_info.hh	/^    const prog_info& get()$/;"	f	struct:starling_info
get	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^    get() const$/;"	f	struct:qval_distro
get	./src/c++/lib/applications/strelka/strelka_info.hh	/^    const prog_info& get()$/;"	f	struct:strelka_info
get	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^    get() const$/;"	f	struct:qval_distro
get	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_info.hh	/^    const prog_info& get()$/;"	f	struct:snoise_info
get	./src/c++/lib/calibration/featuresetUtil.hh	/^    get(const unsigned featureIndex) const$/;"	f	struct:VariantScoringFeatureKeeper
get	./src/c++/lib/starling_common/IndelData.hh	/^    get()$/;"	f	struct:BreakpointInsertSequenceManager
get	./src/c++/lib/starling_common/starling_read_util.cpp	/^    get(const unsigned pos)$/;"	f	struct:__anon12::ddata
get32	./src/c++/lib/blt_util/stringer.hh	/^    get32(const T val) const$/;"	f	struct:stringer
get32_error	./src/c++/lib/blt_util/stringer.cpp	/^get32_error(const int write_size) const$/;"	f	class:stringer_base
getActiveRegionDetector	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    getActiveRegionDetector(const unsigned sampleIndex) const$/;"	f	struct:starling_pos_processor_base
getActiveRegionId	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    ActiveRegionId getActiveRegionId() const$/;"	f	struct:LocusInfo
getActiveRegionId	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getActiveRegionId() const$/;"	f	struct:LocusSampleInfo
getActiveRegionId	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    ActiveRegionId getActiveRegionId(const pos_t pos) const$/;"	f	class:ActiveRegionDetector
getActiveRegionReadBuffer	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    getActiveRegionReadBuffer(const unsigned sampleIndex)$/;"	f	struct:starling_pos_processor_base
getAlignInfo	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    const AlignInfo& getAlignInfo(const align_id_t alignId) const$/;"	f	class:ActiveRegionReadBuffer
getAlignmentFromBamRecord	./src/c++/lib/starling_common/alignment_util.cpp	/^getAlignmentFromBamRecord($/;"	f
getAlignmentIndels	./src/c++/lib/starling_common/CandidateAlignment.cpp	/^getAlignmentIndels($/;"	f
getAll	./src/c++/lib/calibration/featuresetUtil.hh	/^    getAll() const$/;"	f	struct:VariantScoringFeatureKeeper
getAllele0HaplotypeId	./src/c++/lib/htsapi/vcf_util.hh	/^    getAllele0HaplotypeId() const$/;"	f	struct:VcfGenotype
getAllele0Index	./src/c++/lib/htsapi/vcf_util.hh	/^    getAllele0Index() const$/;"	f	struct:VcfGenotype
getAllele1HaplotypeId	./src/c++/lib/htsapi/vcf_util.hh	/^    getAllele1HaplotypeId() const$/;"	f	struct:VcfGenotype
getAllele1Index	./src/c++/lib/htsapi/vcf_util.hh	/^    getAllele1Index() const$/;"	f	struct:VcfGenotype
getAlleleBiasFeatures	./src/c++/lib/applications/starling/gvcf_locus_info.cpp	/^getAlleleBiasFeatures($/;"	f	file:
getAlleleGroupAltRepeats	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^getAlleleGroupAltRepeats($/;"	f	file:
getAlleleGroupIntersectionReadIds	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^getAlleleGroupIntersectionReadIds($/;"	f
getAlleleGroupSupportingReadIds	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^getAlleleGroupSupportingReadIds($/;"	f
getAlleleGroupUnionReadIds	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^getAlleleGroupUnionReadIds($/;"	f
getAlleleIndices	./src/c++/lib/htsapi/vcf_util.hh	/^    getAlleleIndices($/;"	f	struct:VcfGenotypeUtil
getAlleleLogLhoodFromRead	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^getAlleleLogLhoodFromRead($/;"	f
getAlleleNaivePosteriorFromRead	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^getAlleleNaivePosteriorFromRead($/;"	f
getAlleleReportInfo	./src/c++/lib/starling_common/AlleleReportInfoUtil.cpp	/^getAlleleReportInfo($/;"	f
getAlleleSampleReportInfo	./src/c++/lib/starling_common/AlleleReportInfoUtil.cpp	/^getAlleleSampleReportInfo($/;"	f
getAlleleSequencingErrorProb	./src/c++/lib/applications/starling/starling_continuous_variant_caller.cpp	/^getAlleleSequencingErrorProb($/;"	f	file:
getAlleleSequencingErrorQscore	./src/c++/lib/applications/starling/starling_continuous_variant_caller.cpp	/^getAlleleSequencingErrorQscore($/;"	f	class:starling_continuous_variant_caller
getAltAlleleCount	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    getAltAlleleCount() const$/;"	f	struct:OrthogonalAlleleSetLocusReportInfo
getAltAlleleCount	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getAltAlleleCount() const$/;"	f	struct:LocusInfo
getAltCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    getAltCount() const$/;"	f	struct:LocusSupportingReadStats
getAltCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    getAltCount() const$/;"	f	struct:SupportingReadCountGroup
getAltHaplotypeCountRatio	./src/c++/lib/htsapi/vcf_util.hh	/^    getAltHaplotypeCountRatio() const$/;"	f	struct:VcfGenotype
getAltHaplotypeCountRatio	./src/c++/lib/starling_common/CandidateSnvBuffer.cpp	/^float CandidateSnvBuffer::getAltHaplotypeCountRatio(const unsigned sampleIndex, const pos_t pos) const$/;"	f	class:CandidateSnvBuffer
getAltSigTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^getAltSigTotal($/;"	f	namespace:__anon20
getAltSigTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^getAltSigTotal($/;"	f	namespace:__anon18
getAltSigTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^getAltSigTotal($/;"	f	namespace:__anon26
getAltSigTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^getAltSigTotal($/;"	f	namespace:__anon22
getAltSigTotal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^getAltSigTotal($/;"	f	namespace:__anon21
getArgCount	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    getArgCount() const$/;"	f	struct:__anon19::error_minfunc
getBaseCounts	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^    getBaseCounts() const$/;"	f	struct:SequenceErrorCounts
getBaseCounts	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^    getBaseCounts()$/;"	f	struct:SequenceErrorCounts
getBeginPos	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    pos_t getBeginPos() const$/;"	f	class:ActiveRegionReadBuffer
getBeginPosition	./src/c++/lib/starling_common/ActiveRegion.hh	/^    pos_t getBeginPosition() const$/;"	f	class:ActiveRegion
getBestAlignment	./src/c++/lib/starling_common/starling_read_segment.hh	/^    getBestAlignment() const$/;"	f	struct:read_segment
getBreakpointInsertSeq	./src/c++/lib/starling_common/IndelData.hh	/^    getBreakpointInsertSeq() const$/;"	f	struct:IndelData
getBreakpointInsertSize	./src/c++/lib/starling_common/IndelData.hh	/^    getBreakpointInsertSize() const$/;"	f	struct:IndelData
getBuildTime	./src/c++/lib/common/ProgramConfig.hh	/^getBuildTime()$/;"	f	namespace:illumina
getCandidateAlignment	./src/c++/lib/starling_common/starling_read_align.cpp	/^getCandidateAlignment($/;"	f	file:
getCandidateAlignments	./src/c++/lib/starling_common/starling_read_align.cpp	/^getCandidateAlignments($/;"	f	file:
getCandidateIndelCount	./src/c++/lib/starling_common/starling_read_align.cpp	/^getCandidateIndelCount($/;"	f	file:
getCandidateSnvBuffer	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    getCandidateSnvBuffer() const$/;"	f	struct:starling_pos_processor_base
getCandidateSnvBuffer	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    getCandidateSnvBuffer()$/;"	f	struct:starling_pos_processor_base
getChromDepth	./src/c++/lib/applications/GetChromDepth/GetChromDepth.cpp	/^getChromDepth(const ChromDepthOptions& opt)$/;"	f	file:
getChromName	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    getChromName() const$/;"	f	struct:gvcf_writer
getChromSegments	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^getChromSegments($/;"	f	file:
getClippedAlignmentFromTopAlignmentPool	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^getClippedAlignmentFromTopAlignmentPool($/;"	f
getCommonPrefixLength	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getCommonPrefixLength() const$/;"	f	struct:GermlineIndelLocusInfo
getCommonPrefixLength	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^getCommonPrefixLength($/;"	f	file:
getConstRef	./src/c++/lib/blt_util/RangeMap.hh	/^    getConstRef($/;"	f	struct:RangeMap
getConstRefDefault	./src/c++/lib/blt_util/RangeMap.hh	/^    getConstRefDefault($/;"	f	struct:RangeMap
getContext	./src/c++/lib/common/Exceptions.cpp	/^std::string ExceptionData::getContext() const$/;"	f	class:illumina::common::ExceptionData
getContextIterator	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^getContextIterator($/;"	f	class:BaseErrorCounts
getContextIterator	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^getContextIterator($/;"	f	class:IndelErrorCounts
getContextSpecificPriorSet	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    getContextSpecificPriorSet($/;"	f	struct:GenotypePriorSet
getContinuousAlleleFrequency	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getContinuousAlleleFrequency() const$/;"	f	struct:GermlineContinuousSiteSampleInfo
getContinuousSiteSample	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getContinuousSiteSample(const unsigned sampleIndex) const$/;"	f	struct:GermlineContinuousSiteLocusInfo
getCount	./src/c++/lib/starling_common/min_count_binom_gte_cache.cpp	/^getCount($/;"	f	class:min_count_binom_gte_cache
getCounts	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    getCounts(const bool isFwdStrand) const$/;"	f	struct:LocusSupportingReadStats
getCounts	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    getCounts(const bool isFwdStrand)$/;"	f	struct:LocusSupportingReadStats
getCurrent	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getCurrent() const$/;"	f	struct:HtsMergeStreamer
getCurrentBam	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getCurrentBam() const$/;"	f	struct:HtsMergeStreamer
getCurrentBamStreamer	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getCurrentBamStreamer() const$/;"	f	struct:HtsMergeStreamer
getCurrentBed	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getCurrentBed() const$/;"	f	struct:HtsMergeStreamer
getCurrentIndex	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getCurrentIndex() const$/;"	f	struct:HtsMergeStreamer
getCurrentPos	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getCurrentPos() const$/;"	f	struct:HtsMergeStreamer
getCurrentType	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getCurrentType() const$/;"	f	struct:HtsMergeStreamer
getCurrentVcf	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getCurrentVcf() const$/;"	f	struct:HtsMergeStreamer
getCurrentVcfStreamer	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getCurrentVcfStreamer() const$/;"	f	struct:HtsMergeStreamer
getDecisionTreeProb	./src/c++/lib/calibration/RandomForestModel.cpp	/^getDecisionTreeProb($/;"	f	class:RandomForestModel
getDeletionLocusInfo	./src/c++/lib/applications/starling/test/VariantPhaserTest.cpp	/^getDeletionLocusInfo($/;"	f	file:
getDepth	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    getDepth() const$/;"	f	struct:ChromDepthTracker
getDepth	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    getDepth() const$/;"	f	struct:DepthTracker
getDepth	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    unsigned getDepth(const pos_t pos) const$/;"	f	class:ActiveRegionReadBuffer
getDuplicatesInSortedInput	./src/c++/lib/blt_util/algo_util_impl.hh	/^getDuplicatesInSortedInput($/;"	f
getEVSGenotypeCode	./src/c++/lib/applications/starling/gvcf_locus_info.cpp	/^getEVSGenotypeCode($/;"	f	file:
getEnd	./src/c++/lib/assembly/IterativeAssembler.cpp	/^getEnd($/;"	f	file:
getEnd	./src/c++/lib/assembly/SmallAssembler.cpp	/^getEnd($/;"	f	file:
getEndPos	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    pos_t getEndPos() const$/;"	f	class:ActiveRegionReadBuffer
getEndPosition	./src/c++/lib/starling_common/ActiveRegion.hh	/^    pos_t getEndPosition() const$/;"	f	class:ActiveRegion
getErrorNumber	./src/c++/lib/common/Exceptions.hh	/^    int getErrorNumber() const$/;"	f	class:illumina::common::ExceptionData
getErrorRates	./src/c++/lib/starling_common/IndelData.hh	/^    getErrorRates() const$/;"	f	struct:IndelSampleData
getExemplarReadScore	./src/c++/lib/starling_common/AlleleGroupGenotype.cpp	/^getExemplarReadScore($/;"	f	file:
getExonCount	./src/c++/lib/starling_common/starling_read.hh	/^    getExonCount() const$/;"	f	struct:starling_read
getExpectedCategory2Value	./src/c++/lib/blt_util/fastRanksum.cpp	/^getExpectedCategory2Value() const$/;"	f	class:fastRanksum
getExportData	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^getExportData(BaseErrorContextObservationExportData& exportData) const$/;"	f	class:BaseErrorContextObservationData
getExtendedLocusFilters	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^getExtendedLocusFilters($/;"	f	file:
getExtendedPosInfo	./src/c++/lib/starling_common/PileupCleaner.hh	/^    getExtendedPosInfo() const$/;"	f	struct:CleanedPileup
getExtraPathInfo	./src/c++/lib/starling_common/starling_read_align.cpp	/^getExtraPathInfo(const ALIGNPATH::path_t& p)$/;"	f	file:
getFeatureMap	./src/c++/lib/calibration/featuresetUtil.hh	/^    getFeatureMap() const$/;"	f	struct:FeatureSet
getFeatureSet	./src/c++/lib/calibration/featuresetUtil.hh	/^    getFeatureSet() const$/;"	f	struct:VariantScoringFeatureKeeper
getFirstRecordIndexForRange	./src/c++/lib/htsapi/bam_streamer.cpp	/^size_t bam_streamer::getFirstRecordIndexForRange (FILE *fp, int isaibfile, size_t l1, size_t h1, int key)$/;"	f	class:bam_streamer
getGenotypeCount	./src/c++/lib/htsapi/vcf_util.hh	/^    getGenotypeCount($/;"	f	struct:VcfGenotypeUtil
getGenotypeIndex	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getGenotypeIndex($/;"	f	struct:GenotypeLikelihoods
getGenotypeIndex	./src/c++/lib/htsapi/vcf_util.hh	/^    getGenotypeIndex($/;"	f	struct:VcfGenotypeUtil
getGenotypeLikelihood	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getGenotypeLikelihood($/;"	f	struct:GenotypeLikelihoods
getGenotypeLikelihood	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getGenotypeLikelihood() const$/;"	f	struct:GenotypeLikelihoods
getGenotypeLikelihood	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getGenotypeLikelihood()$/;"	f	struct:GenotypeLikelihoods
getGenotypeString	./src/c++/lib/blt_util/RecordTracker.cpp	/^getGenotypeString($/;"	f	file:
getHaplotypeBase	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^bool ActiveRegionReadBuffer::getHaplotypeBase(const align_id_t id, const pos_t pos, std::string& base) const$/;"	f	class:ActiveRegionReadBuffer
getHaplotypeId	./src/c++/lib/starling_common/CandidateSnvBuffer.cpp	/^HaplotypeId CandidateSnvBuffer::getHaplotypeId(const unsigned sampleIndex, const pos_t pos, const BASE_ID::index_t baseIndex) const$/;"	f	class:CandidateSnvBuffer
getHtsStreamer	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getHtsStreamer($/;"	f	struct:HtsMergeStreamer
getHtsType	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getHtsType(const unsigned orderIndex) const$/;"	f	struct:HtsMergeStreamer
getIndelAlleleCountLogOddsRatio	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^getIndelAlleleCountLogOddsRatio($/;"	f
getIndelAlleles	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getIndelAlleles() const$/;"	f	struct:GermlineIndelLocusInfo
getIndelAllelesAtPosition	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^getIndelAllelesAtPosition($/;"	f	file:
getIndelBuffer	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    getIndelBuffer() const$/;"	f	struct:starling_pos_processor_base
getIndelBuffer	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    getIndelBuffer()$/;"	f	struct:starling_pos_processor_base
getIndelBuffer	./src/c++/lib/starling_common/test/ActiveRegionTest.cpp	/^    getIndelBuffer()$/;"	f	struct:TestIndelBuffer
getIndelCounts	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^    getIndelCounts() const$/;"	f	struct:SequenceErrorCounts
getIndelCounts	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^    getIndelCounts()$/;"	f	struct:SequenceErrorCounts
getIndelData	./src/c++/lib/starling_common/IndelBuffer.hh	/^getIndelData(const IndelBuffer::const_iterator i)$/;"	f
getIndelData	./src/c++/lib/starling_common/IndelBuffer.hh	/^getIndelData(const IndelBuffer::iterator i)$/;"	f
getIndelDataPtr	./src/c++/lib/starling_common/IndelBuffer.hh	/^    getIndelDataPtr(const IndelKey& indelKey) const$/;"	f	struct:IndelBuffer
getIndelDataPtr	./src/c++/lib/starling_common/IndelBuffer.hh	/^    getIndelDataPtr(const IndelKey& indelKey)$/;"	f	struct:IndelBuffer
getIndelErrorModel	./src/c++/lib/starling_common/starling_base_shared.hh	/^    getIndelErrorModel() const$/;"	f	struct:starling_base_deriv_options
getIndelErrorRate	./src/c++/lib/calibration/IndelErrorModel.cpp	/^getIndelErrorRate($/;"	f	class:IndelErrorModel
getIndelGenotypePriors	./src/c++/lib/starling_common/starling_base_shared.hh	/^    getIndelGenotypePriors() const$/;"	f	struct:starling_base_deriv_options
getIndelIter	./src/c++/lib/starling_common/IndelBuffer.hh	/^    getIndelIter(const IndelKey& indelKey) const$/;"	f	struct:IndelBuffer
getIndelIter	./src/c++/lib/starling_common/IndelBuffer.hh	/^    getIndelIter(const IndelKey& indelKey)$/;"	f	struct:IndelBuffer
getIndelSample	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getIndelSample(const unsigned sampleIndex) const$/;"	f	struct:GermlineIndelLocusInfo
getIndelSampleData	./src/c++/lib/starling_common/IndelBuffer.hh	/^    getIndelSampleData($/;"	f	struct:IndelBuffer
getIndelType	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^getIndelType($/;"	f	file:
getIndels	./src/c++/lib/starling_common/CandidateAlignment.hh	/^    getIndels() const$/;"	f	struct:CandidateAlignment
getInputAlignment	./src/c++/lib/starling_common/starling_read_segment.hh	/^    getInputAlignment() const$/;"	f	struct:read_segment
getInputAlignmentMapLevel	./src/c++/lib/starling_common/starling_read.hh	/^    getInputAlignmentMapLevel() const$/;"	f	struct:starling_read
getInputAlignmentMapLevel	./src/c++/lib/starling_common/starling_read_segment.cpp	/^getInputAlignmentMapLevel() const$/;"	f	class:read_segment
getInsertSeq	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^getInsertSeq($/;"	f	file:
getInstance	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES
getInstance	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:GERMLINE_INDEL_SCORING_FEATURES
getInstance	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES
getInstance	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:GERMLINE_SNV_SCORING_FEATURES
getInstance	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES
getInstance	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:RNA_INDEL_SCORING_FEATURES
getInstance	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:RNA_SNV_SCORING_DEVELOPMENT_FEATURES
getInstance	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:RNA_SNV_SCORING_FEATURES
getInstance	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES
getInstance	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:SOMATIC_INDEL_SCORING_FEATURES
getInstance	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES
getInstance	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    getInstance()$/;"	f	struct:SOMATIC_SNV_SCORING_FEATURES
getInterruptedHomopolymerLength	./src/c++/lib/blt_common/ref_context.cpp	/^getInterruptedHomopolymerLength($/;"	f
getIsPhased	./src/c++/lib/htsapi/vcf_util.hh	/^    getIsPhased() const$/;"	f	struct:VcfGenotype
getKeyIndex	./src/c++/lib/blt_util/RangeMap.hh	/^    getKeyIndex($/;"	f	struct:RangeMap
getKeyIndexOffset	./src/c++/lib/blt_util/RangeMap.hh	/^    getKeyIndexOffset($/;"	f	struct:RangeMap
getKmerCounts	./src/c++/lib/assembly/IterativeAssembler.cpp	/^getKmerCounts($/;"	f	file:
getKmerCounts	./src/c++/lib/assembly/SmallAssembler.cpp	/^getKmerCounts($/;"	f	file:
getLastSegmentTime	./src/c++/lib/common/SegmentTimeTracker.hh	/^    getLastSegmentTime() const$/;"	f	struct:SegmentTimeTracker
getLeftShiftedSTRRepeatCount	./src/c++/lib/blt_common/ref_context.cpp	/^getLeftShiftedSTRRepeatCount($/;"	f
getLocusReportInfoFromAlleles	./src/c++/lib/applications/starling/LocusReportInfoUtil.cpp	/^getLocusReportInfoFromAlleles($/;"	f
getLogCleanLocusBaseErrorRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^getLogCleanLocusBaseErrorRate($/;"	f	file:
getLogLinearIndelErrorModel	./src/c++/lib/calibration/IndelErrorModel.cpp	/^getLogLinearIndelErrorModel()$/;"	f	file:
getLogValue	./src/c++/lib/blt_util/LogValuePair.hh	/^    getLogValue() const$/;"	f	struct:LogValuePair
getLowestFwdReadPosForRefRange	./src/c++/lib/starling_common/alignment_util.cpp	/^getLowestFwdReadPosForRefRange($/;"	f
getMannWhitneyZScore	./src/c++/lib/blt_util/fastRanksum.cpp	/^getMannWhitneyZScore($/;"	f	file:
getMappedReadDepth	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getMappedReadDepth() const$/;"	f	struct:GermlineSiteSampleInfo
getMatchingIndelKey	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^getMatchingIndelKey($/;"	f	file:
getMaxDepth	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    getMaxDepth() const$/;"	f	struct:ScoringModelManager
getMaxDepth	./src/c++/lib/applications/starling/gvcf_aggregator.hh	/^    getMaxDepth() const$/;"	f	class:gvcf_aggregator
getMaxPathScore	./src/c++/lib/alignment/AlignerBaseImpl.hh	/^getMaxPathScore($/;"	f	class:AlignerBase
getMeanDepth	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    getMeanDepth() const$/;"	f	struct:MeanDepthTracker
getMedian	./src/c++/lib/blt_util/MedianDepthTracker.hh	/^    getMedian() const$/;"	f	struct:MedianDepthTracker
getMessage	./src/c++/lib/common/Exceptions.hh	/^    const std::string& getMessage() const$/;"	f	class:illumina::common::ExceptionData
getMockOptions	./src/c++/lib/applications/starling/test/VariantPhaserTest.cpp	/^getMockOptions(const char* refSeq)$/;"	f	file:
getNAllele	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    getNAllele(const bool isHaploid) const$/;"	f	struct:ContextGenotypePriors
getNAllelePolymorphic	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    getNAllelePolymorphic(const bool isHaploid) const$/;"	f	struct:ContextGenotypePriors
getNextReadIndex	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    getNextReadIndex() const$/;"	f	struct:starling_read_buffer
getNode	./src/c++/lib/calibration/RandomForestModel.hh	/^        getNode(const unsigned i) const$/;"	f	struct:RandomForestModel::DecisionTree
getNoisyLocusArgIndex	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    getNoisyLocusArgIndex() const$/;"	f	struct:__anon19::error_minfunc
getNoisyLocusParamIndex	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    getNoisyLocusParamIndex() const$/;"	f	struct:__anon19::error_minfunc
getObsLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^getObsLogLhood($/;"	f	namespace:__anon20
getObsLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^getObsLogLhood($/;"	f	namespace:__anon18
getObsLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^getObsLogLhood($/;"	f	namespace:__anon26
getObsLogLhood	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^getObsLogLhood($/;"	f	file:
getObsLogLhood	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^getObsLogLhood($/;"	f	file:
getOptionsDescription	./src/c++/lib/options/AlignmentFileOptionsParser.cpp	/^getOptionsDescription($/;"	f
getOptionsDescription	./src/c++/lib/options/TumorNormalAlignmentFileOptionsParser.cpp	/^getOptionsDescription($/;"	f
getOrderForType	./src/c++/lib/starling_common/HtsMergeStreamer.cpp	/^getOrderForType($/;"	f	class:HtsMergeStreamer
getOrthogonalHaplotypeSupportCounts	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^getOrthogonalHaplotypeSupportCounts($/;"	f	file:
getParamCount	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    getParamCount() const$/;"	f	struct:__anon19::error_minfunc
getPathScore	./src/c++/lib/alignment/AlignerBaseImpl.hh	/^getPathScore($/;"	f	class:AlignerBase
getPloidy	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getPloidy() const$/;"	f	struct:LocusSampleInfo
getPloidy	./src/c++/lib/applications/starling/ploidyUtil.hh	/^    getPloidy() const$/;"	f	struct:SamplePloidyState
getPloidy	./src/c++/lib/htsapi/vcf_util.hh	/^    getPloidy() const$/;"	f	struct:VcfGenotype
getPos	./src/c++/lib/applications/strelka/NoiseBuffer.hh	/^    getPos(const pos_t pos) const$/;"	f	struct:NoiseBuffer
getPositionToAlignIds	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    const std::vector<align_id_t>& getPositionToAlignIds(const pos_t pos) const$/;"	f	class:ActiveRegionReadBuffer
getPostCallStage	./src/c++/lib/starling_common/starling_base_shared.hh	/^    getPostCallStage() const$/;"	f	struct:starling_base_deriv_options
getPriorIndex	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^getPriorIndex($/;"	f	file:
getProb	./src/c++/lib/calibration/RandomForestModel.cpp	/^getProb($/;"	f	class:RandomForestModel
getQualArgCount	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    getQualArgCount() const$/;"	f	struct:__anon19::error_minfunc
getQualParamCount	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    getQualParamCount() const$/;"	f	struct:__anon19::error_minfunc
getRMS	./src/c++/lib/blt_common/MapqTracker.hh	/^    getRMS() const$/;"	f	struct:MapqTracker
getRate	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^        getRate(const IndelErrorRateType::index_t simpleIndelType) const$/;"	f	struct:IndelErrorRateSet::IndelErrorRates
getRate	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    getRate($/;"	f	struct:IndelErrorRateSet
getRateType	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^getRateType($/;"	f	namespace:IndelErrorRateType
getRateType	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^getRateType($/;"	f	namespace:SimplifiedIndelReportType
getReadAlignmentZone	./src/c++/lib/starling_common/starling_read_align.cpp	/^getReadAlignmentZone($/;"	f	file:
getReadAmbiguousEndLength	./src/c++/lib/htsapi/bam_seq_read_util.cpp	/^getReadAmbiguousEndLength($/;"	f
getReadBuffer	./src/c++/lib/starling_common/ActiveRegionDetector.hh	/^    ActiveRegionReadBuffer& getReadBuffer()$/;"	f	class:ActiveRegionDetector
getReadCount	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    getReadCount() const$/;"	f	struct:DepthTracker
getReadCount	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    getReadCount() const$/;"	f	struct:MeanDepthTracker
getReadIndex	./src/c++/lib/starling_common/starling_read.hh	/^    align_id_t getReadIndex() const$/;"	f	struct:starling_read
getReadIndex	./src/c++/lib/starling_common/starling_read_segment.cpp	/^getReadIndex() const$/;"	f	class:read_segment
getReadSegments	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^void ActiveRegionReadBuffer::getReadSegments($/;"	f	class:ActiveRegionReadBuffer
getRef	./src/c++/lib/blt_util/RangeMap.hh	/^    getRef($/;"	f	struct:RangeMap
getRef	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^        getRef($/;"	f	struct:pos_basecall_buffer::PosData
getRefQuals	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    getRefQuals() const$/;"	f	struct:BaseErrorContextObservationData
getReferenceRange	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.cpp	/^getReferenceRange() const$/;"	f	class:OrthogonalVariantAlleleCandidateGroup
getReferenceSTRContext	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^getReferenceSTRContext($/;"	f	file:
getRegionPtr	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getRegionPtr()$/;"	f	struct:HtsMergeStreamer
getRepeatCount	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    unsigned getRepeatCount() const$/;"	f	struct:IndelErrorContext
getRepeatKmers	./src/c++/lib/assembly/IterativeAssembler.cpp	/^getRepeatKmers($/;"	f	file:
getRepeatPatternSize	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    unsigned getRepeatPatternSize() const$/;"	f	struct:IndelErrorContext
getReportInfo	./src/c++/lib/starling_common/IndelData.hh	/^    getReportInfo() const$/;"	f	struct:IndelData
getSample	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getSample(const unsigned sampleIndex) const$/;"	f	struct:LocusInfo
getSample	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getSample(const unsigned sampleIndex)$/;"	f	struct:LocusInfo
getSampleCount	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getSampleCount() const$/;"	f	struct:LocusInfo
getSampleCount	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    getSampleCount() const$/;"	f	struct:gvcf_writer
getSampleCount	./src/c++/lib/htsapi/vcf_streamer.hh	/^    getSampleCount() const$/;"	f	struct:vcf_streamer
getSampleCount	./src/c++/lib/starling_common/IndelBuffer.hh	/^    getSampleCount() const$/;"	f	struct:IndelBuffer
getSampleCount	./src/c++/lib/starling_common/IndelData.hh	/^    getSampleCount() const$/;"	f	struct:IndelData
getSampleCount	./src/c++/lib/starling_common/starling_base_shared.hh	/^    getSampleCount() const$/;"	f	struct:starling_base_options
getSampleCount	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    getSampleCount() const$/;"	f	struct:starling_pos_processor_base
getSampleCount	./src/c++/lib/starling_common/starling_streams_base.hh	/^    getSampleCount() const$/;"	f	struct:starling_streams_base
getSampleData	./src/c++/lib/starling_common/IndelData.hh	/^    getSampleData(const unsigned sampleId) const$/;"	f	struct:IndelData
getSampleData	./src/c++/lib/starling_common/IndelData.hh	/^    getSampleData(const unsigned sampleIndex)$/;"	f	struct:IndelData
getSampleIndelAlleleFrequency	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^getSampleIndelAlleleFrequency($/;"	f
getSampleIndelNoiseLogOdds	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^getSampleIndelNoiseLogOdds(const AlleleSampleReportInfo& indelSampleReportInfo)$/;"	f
getSampleIndex	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    unsigned getSampleIndex(const align_id_t alignId) const$/;"	f	class:ActiveRegionReadBuffer
getSampleName	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsStreams.hh	/^    getSampleName() const$/;"	f	struct:SequenceErrorCountsStreams
getSampleName	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^    getSampleName() const$/;"	f	class:IndelErrorModelJson
getSampleName	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^    getSampleName() const$/;"	f	struct:SequenceErrorCounts
getSampleName	./src/c++/lib/htsapi/vcf_streamer.hh	/^    getSampleName(const unsigned sampleIndex) const$/;"	f	struct:vcf_streamer
getSampleNames	./src/c++/lib/applications/starling/starling_streams.hh	/^    getSampleNames() const$/;"	f	struct:starling_streams
getSampleOtherAlleleFrequency	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^getSampleOtherAlleleFrequency($/;"	f
getSampleSpecificIndelErrorRates	./src/c++/lib/calibration/IndelErrorModel.hh	/^    getSampleSpecificIndelErrorRates($/;"	f	struct:IndelErrorModel
getSampleStrandOddsRatio	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^getSampleStrandOddsRatio($/;"	f
getSamtoolsRegionString	./src/c++/lib/starling_common/starling_ref_seq.cpp	/^getSamtoolsRegionString($/;"	f
getScale	./src/c++/lib/blt_util/LinearScaler.hh	/^    getScale($/;"	f	struct:LinearScaler
getScore	./src/c++/lib/alignment/GlobalAligner.hh	/^        getScore(const AlignState::index_t i) const$/;"	f	struct:GlobalAligner::ScoreVal
getScores	./src/c++/lib/alignment/AlignerBase.hh	/^    getScores() const$/;"	f	struct:AlignerBase
getSequenceErrorCountsOptionsParser	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptionsParser.cpp	/^getSequenceErrorCountsOptionsParser($/;"	f
getSequenceErrorCountsRun	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsRun.cpp	/^getSequenceErrorCountsRun($/;"	f
getSimplifiedAdaptiveParameters	./src/c++/lib/calibration/IndelErrorModel.cpp	/^getSimplifiedAdaptiveParameters()$/;"	f	file:
getSingleIndelAlleleVcfSummaryStrings	./src/c++/lib/starling_common/AlleleReportInfoUtil.cpp	/^getSingleIndelAlleleVcfSummaryStrings($/;"	f
getSiteAlleles	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getSiteAlleles() const$/;"	f	struct:GermlineSiteLocusInfo
getSiteAlleles	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getSiteAlleles()$/;"	f	struct:GermlineSiteLocusInfo
getSiteAltAlleles	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^getSiteAltAlleles($/;"	f	class:starling_pos_processor
getSiteSample	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getSiteSample(const unsigned sampleIndex) const$/;"	f	struct:GermlineSiteLocusInfo
getSize	./src/c++/lib/starling_common/IndelData.hh	/^    getSize() const$/;"	f	struct:BreakpointInsertSequenceManager
getSnvLocusInfo	./src/c++/lib/applications/starling/test/VariantPhaserTest.cpp	/^getSnvLocusInfo($/;"	f	file:
getSpace	./src/c++/lib/blt_util/ranksum.hh	/^    getSpace() const$/;"	f	class:ranksum
getStateCode	./src/c++/lib/alignment/GlobalAligner.hh	/^        getStateCode(const AlignState::index_t i) const$/;"	f	struct:GlobalAligner::PtrVal
getStatePtr	./src/c++/lib/alignment/GlobalAligner.hh	/^        getStatePtr(const AlignState::index_t i) const$/;"	f	struct:GlobalAligner::PtrVal
getStrand0Counts	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    getStrand0Counts() const$/;"	f	struct:BaseErrorContextObservation
getStrand1Counts	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    getStrand1Counts() const$/;"	f	struct:BaseErrorContextObservation
getStream	./src/c++/lib/common/OutStream.hh	/^    getStream()$/;"	f	struct:OutStream
getStreamType	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^template <> inline index_t getStreamType<bam_streamer>()$/;"	f	namespace:HTS_TYPE
getStreamType	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^template <> inline index_t getStreamType<bed_streamer>()$/;"	f	namespace:HTS_TYPE
getStreamType	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^template <> inline index_t getStreamType<vcf_streamer>()$/;"	f	namespace:HTS_TYPE
getStrelkaAnalysisRegionInfo	./src/c++/lib/starling_common/starling_ref_seq.cpp	/^getStrelkaAnalysisRegionInfo($/;"	f
getStrelkaAnalysisRegions	./src/c++/lib/starling_common/starling_ref_seq.cpp	/^getStrelkaAnalysisRegions($/;"	f
getStrictAlignmentRange	./src/c++/lib/starling_common/alignment_util.cpp	/^getStrictAlignmentRange(const alignment& al)$/;"	f
getSubRegionsFromBedTrack	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^getSubRegionsFromBedTrack($/;"	f
getTestAlignmentFileOptions	./src/c++/lib/starling_common/test/starling_base_options_test.hh	/^    getTestAlignmentFileOptions()$/;"	f	struct:final
getTestFastaPath	./src/c++/lib/htsapi/test/vcf_record_util_test.cpp	/^getTestFastaPath()$/;"	f	file:
getTestVcfPath	./src/c++/lib/htsapi/test/vcf_record_util_test.cpp	/^getTestVcfPath()$/;"	f	file:
getTestpath	./src/c++/lib/htsapi/test/bed_streamer_test.cpp	/^getTestpath()$/;"	f	file:
getTestpath	./src/c++/lib/htsapi/test/vcf_streamer_test.cpp	/^getTestpath()$/;"	f	file:
getTestpath	./src/c++/lib/starling_common/test/starling_pos_processor_util_test.cpp	/^getTestpath()$/;"	f	file:
getThetaArgIndex	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    getThetaArgIndex() const$/;"	f	struct:__anon19::error_minfunc
getThetaParamIndex	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    getThetaParamIndex() const$/;"	f	struct:__anon19::error_minfunc
getTier2OptionsDescription	./src/c++/lib/starling_common/Tier2OptionsParser.cpp	/^getTier2OptionsDescription($/;"	f
getTimerSeconds	./src/c++/lib/blt_util/time_util.hh	/^getTimerSeconds($/;"	f	namespace:BOOST_TIMER_HELPER
getTimes	./src/c++/lib/blt_util/time_util.hh	/^    getTimes() const$/;"	f	struct:TimeTracker
getTotalReadDepth	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getTotalReadDepth() const$/;"	f	struct:GermlineIndelLocusInfo
getTotalReadDepth	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getTotalReadDepth() const$/;"	f	struct:GermlineIndelSampleInfo
getTotalReadDepth	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getTotalReadDepth() const$/;"	f	struct:GermlineSiteLocusInfo
getTotalReadDepth	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    getTotalReadDepth() const$/;"	f	struct:GermlineSiteSampleInfo
getTumorNormalIndelAlleleLogOdds	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^getTumorNormalIndelAlleleLogOdds($/;"	f
getUserIndex	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    getUserIndex(const unsigned orderIndex) const$/;"	f	struct:HtsMergeStreamer
getUserSeconds	./src/c++/lib/blt_util/time_util.hh	/^    getUserSeconds() const$/;"	f	struct:TimeTracker
getValue	./src/c++/lib/blt_util/LogValuePair.hh	/^    getValue() const$/;"	f	struct:LogValuePair
getVariantAlleleGroupGenotypeLhoodsForSample	./src/c++/lib/starling_common/AlleleGroupGenotype.cpp	/^getVariantAlleleGroupGenotypeLhoodsForSample($/;"	f
getVariantCount	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    unsigned getVariantCount(const pos_t pos) const$/;"	f	class:ActiveRegionReadBuffer
getVersion	./src/c++/lib/common/ProgramConfig.hh	/^getVersion()$/;"	f	namespace:illumina
getVersion	./src/c++/lib/starling_common/version.cpp	/^getVersion()$/;"	f
getWallSeconds	./src/c++/lib/blt_util/time_util.hh	/^    getWallSeconds() const$/;"	f	struct:TimeTracker
getZeroFrac	./src/c++/lib/blt_common/MapqTracker.hh	/^    getZeroFrac() const$/;"	f	struct:MapqTracker
get_align_score	./src/c++/lib/blt_common/hapscore.cpp	/^get_align_score($/;"	f	file:
get_alignment_buffer_pos	./src/c++/lib/starling_common/starling_read_util.cpp	/^get_alignment_buffer_pos(const alignment& al)$/;"	f
get_alignment_indel_bp_overlap	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^get_alignment_indel_bp_overlap($/;"	f	file:
get_alignment_range	./src/c++/lib/starling_common/alignment_util.cpp	/^get_alignment_range($/;"	f
get_alignment_ref_map	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^get_alignment_ref_map($/;"	f	file:
get_alignment_zone	./src/c++/lib/starling_common/alignment_util.cpp	/^get_alignment_zone(const alignment& al,$/;"	f
get_allele	./src/c++/lib/blt_util/digt.hh	/^get_allele(const int gt,$/;"	f	namespace:DIGT
get_allele	./src/c++/lib/starling_common/starling_diploid_indel.hh	/^get_allele($/;"	f	namespace:STAR_DIINDEL
get_apath_invalid_reason	./src/c++/lib/blt_util/align_path.cpp	/^get_apath_invalid_reason(const path_t& apath,$/;"	f	namespace:ALIGNPATH
get_apath_invalid_type	./src/c++/lib/blt_util/align_path.cpp	/^get_apath_invalid_type(const path_t& apath,$/;"	f	namespace:ALIGNPATH
get_bam_header_sample_name	./src/c++/lib/htsapi/bam_header_util.cpp	/^get_bam_header_sample_name($/;"	f
get_bam_read	./src/c++/lib/htsapi/bam_record.hh	/^    bam_seq get_bam_read() const$/;"	f	struct:bam_record
get_bam_read	./src/c++/lib/starling_common/starling_read_segment.cpp	/^get_bam_read() const$/;"	f	class:read_segment
get_bam_seq_char	./src/c++/lib/htsapi/bam_seq.hh	/^get_bam_seq_char(const uint8_t a)$/;"	f
get_bam_seq_code	./src/c++/lib/htsapi/bam_seq.hh	/^get_bam_seq_code(const char c)$/;"	f
get_bam_seq_complement_char	./src/c++/lib/htsapi/bam_seq.hh	/^get_bam_seq_complement_char(const uint8_t a)$/;"	f
get_base	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    get_base(const pos_t pos) const$/;"	f	struct:reference_contig_segment
get_baseq_ranksum	./src/c++/lib/blt_common/snp_pos_info.cpp	/^get_baseq_ranksum() const$/;"	f	class:snp_pos_info
get_binom	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^get_binom(const unsigned n,$/;"	f	file:
get_binom	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^get_binom(const unsigned n,$/;"	f	file:
get_binomial_gte_n_success_exact_pval	./src/c++/lib/blt_util/binomial_test.cpp	/^get_binomial_gte_n_success_exact_pval($/;"	f
get_binomial_twosided_exact_pval	./src/c++/lib/blt_util/binomial_test.cpp	/^get_binomial_twosided_exact_pval($/;"	f
get_brp	./src/c++/lib/starling_common/starling_read.hh	/^    get_brp() const$/;"	f	struct:starling_read
get_char_label	./src/c++/lib/applications/strelka/StrelkaSampleSetSummary.hh	/^get_char_label(const unsigned i)$/;"	f	namespace:STRELKA_SAMPLE_TYPE
get_chrom_length	./src/c++/lib/htsapi/samtools_fasta_util.cpp	/^get_chrom_length(const std::string& fai_file,$/;"	f
get_chrom_sizes	./src/c++/lib/htsapi/samtools_fasta_util.cpp	/^get_chrom_sizes(const std::string& fai_file,$/;"	f
get_clip_len	./src/c++/lib/blt_util/align_path.cpp	/^get_clip_len(const path_t& apath)$/;"	f	namespace:ALIGNPATH
get_complement_char	./src/c++/lib/htsapi/bam_seq.hh	/^    get_complement_char(const pos_t i) const$/;"	f	struct:bam_seq
get_data	./src/c++/lib/htsapi/bam_record.hh	/^    get_data() const$/;"	f	struct:bam_record
get_data	./src/c++/lib/htsapi/bam_record.hh	/^    get_data()$/;"	f	struct:bam_record
get_db_compressible_test_pattern	./src/c++/lib/blt_util/test/depth_buffer_test.cpp	/^get_db_compressible_test_pattern($/;"	f	file:
get_db_test_pattern	./src/c++/lib/blt_util/test/depth_buffer_test.cpp	/^get_db_test_pattern()$/;"	f	file:
get_dependent_eprob	./src/c++/lib/blt_common/adjust_joint_eprob.cpp	/^get_dependent_eprob(const unsigned qscore,$/;"	f	file:
get_dependent_val	./src/c++/lib/blt_common/adjust_joint_eprob.cpp	/^get_dependent_val(const unsigned qscore,$/;"	f	class:dependent_prob_cache
get_digt_states	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^get_digt_states($/;"	f	namespace:DDIGT
get_diploid_gt_lhood	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^get_diploid_gt_lhood(const blt_options& opt,$/;"	f	class:pprob_digt_caller
get_diploid_gt_lhood_cached	./src/c++/lib/strelka_common/position_snp_call_grid_lhood_cached.cpp	/^get_diploid_gt_lhood_cached($/;"	f
get_diploid_gt_lhood_cached	./src/c++/lib/strelka_common/position_snp_call_grid_lhood_cached.hh	/^get_diploid_gt_lhood_cached($/;"	f
get_diploid_gt_lhood_cached_simple	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid_lhood_cached.cpp	/^get_diploid_gt_lhood_cached_simple($/;"	f
get_diploid_het_grid_lhood_cached	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid_lhood_cached.cpp	/^get_diploid_het_grid_lhood_cached($/;"	f
get_diploid_het_grid_lhood_cached	./src/c++/lib/strelka_common/position_snp_call_grid_lhood_cached.cpp	/^get_diploid_het_grid_lhood_cached($/;"	f
get_diploid_strand_grid_lhood_spi	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.cpp	/^get_diploid_strand_grid_lhood_spi($/;"	f	file:
get_empty_site	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    get_empty_site(const pos_t pos)$/;"	f	struct:gvcf_writer
get_end_pin_start_pos	./src/c++/lib/starling_common/starling_read_align.cpp	/^get_end_pin_start_pos($/;"	f	file:
get_error_prob	./src/c++/lib/blt_util/qscore_cache.hh	/^    get_error_prob(const int qscore)$/;"	f	struct:qphred_cache
get_error_prob_imp	./src/c++/lib/blt_util/qscore_cache.hh	/^    get_error_prob_imp(const int qscore) const$/;"	f	struct:qphred_cache
get_exact_test_ws	./src/c++/lib/blt_util/table_test.cpp	/^get_exact_test_ws()$/;"	f
get_feature_label	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    get_feature_label(const unsigned idx)$/;"	f	struct:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES
get_feature_label	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    get_feature_label(const unsigned idx)$/;"	f	struct:SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES
get_feature_label	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    get_feature_label(const unsigned idx)$/;"	f	struct:SOMATIC_SNV_SCORING_FEATURES
get_format_key_index	./src/c++/lib/htsapi/vcf_util.hh	/^get_format_key_index(const char* format,$/;"	f
get_format_string_nocopy	./src/c++/lib/htsapi/vcf_util.hh	/^get_format_string_nocopy(const char* const* word,$/;"	f
get_fraction_from_index	./src/c++/lib/applications/strelka/strelka_digt_states.cpp	/^get_fraction_from_index(int index)$/;"	f	namespace:DIGT_GRID
get_full_segment	./src/c++/lib/starling_common/starling_read.hh	/^    get_full_segment() const$/;"	f	struct:starling_read
get_full_segment	./src/c++/lib/starling_common/starling_read.hh	/^    get_full_segment()$/;"	f	struct:starling_read
get_genomic_prior	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^get_genomic_prior($/;"	f	file:
get_gt_label	./src/c++/lib/starling_common/starling_diploid_indel.hh	/^get_gt_label(const unsigned idx)$/;"	f	namespace:STAR_DIINDEL
get_gt_with_alleles	./src/c++/lib/blt_util/digt.hh	/^get_gt_with_alleles($/;"	f	namespace:DIGT
get_haploid_genomic_prior	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^get_haploid_genomic_prior($/;"	f	file:
get_haploid_poly_prior	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^get_haploid_poly_prior($/;"	f	file:
get_hapscore	./src/c++/lib/blt_common/hapscore.cpp	/^get_hapscore($/;"	f
get_header	./src/c++/lib/htsapi/bam_streamer.hh	/^    get_header() const$/;"	f	struct:bam_streamer
get_het_observed_allele_ratio	./src/c++/lib/starling_common/starling_indel_call_pprob_digt.cpp	/^get_het_observed_allele_ratio($/;"	f
get_high_low_het_ratio_lhood	./src/c++/lib/starling_common/starling_indel_call_pprob_digt.cpp	/^get_high_low_het_ratio_lhood($/;"	f
get_high_low_het_ratio_lhood_cached	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid_lhood_cached.cpp	/^get_high_low_het_ratio_lhood_cached($/;"	f	file:
get_high_low_het_ratio_lhood_cached	./src/c++/lib/strelka_common/position_snp_call_grid_lhood_cached.cpp	/^get_high_low_het_ratio_lhood_cached($/;"	f	file:
get_id	./src/c++/lib/blt_util/id_map.hh	/^    unsigned get_id(const K& key) const$/;"	f	struct:id_map
get_id	./src/c++/lib/blt_util/id_map.hh	/^    unsigned get_id(const K& key) const$/;"	f	struct:id_set
get_indel_digt_lhood	./src/c++/lib/starling_common/starling_indel_call_pprob_digt.cpp	/^get_indel_digt_lhood($/;"	f
get_indel_het_grid_lhood	./src/c++/lib/applications/strelka/somatic_indel_grid.cpp	/^get_indel_het_grid_lhood(const starling_base_options& opt,$/;"	f	file:
get_index_label	./src/c++/lib/starling_common/indel_core.hh	/^get_index_label(index_t id)$/;"	f	namespace:INDEL
get_is_any_minpos	./src/c++/lib/blt_util/stage_manager.cpp	/^get_is_any_minpos(const std::vector<uint8_t>& minpos,$/;"	f	file:
get_key	./src/c++/lib/blt_util/id_map.hh	/^    const K& get_key(const unsigned id) const$/;"	f	struct:id_map
get_key	./src/c++/lib/blt_util/id_map.hh	/^    const K& get_key(const unsigned id) const$/;"	f	struct:id_set
get_known_counts	./src/c++/lib/blt_common/snp_pos_info.hh	/^    get_known_counts(std::array<T,N_BASE>& base_count,$/;"	f	struct:snp_pos_info
get_label	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^get_label(const unsigned idx)$/;"	f	namespace:GERMLINE_VARIANT_VCF_FILTERS
get_label	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^get_label(const unsigned idx)$/;"	f	namespace:MODIFIED_SITE_GT
get_label	./src/c++/lib/applications/strelka/StrelkaSampleSetSummary.hh	/^get_label(const unsigned i)$/;"	f	namespace:STRELKA_SAMPLE_TYPE
get_label	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^get_label(const unsigned idx)$/;"	f	namespace:SOMATIC_VARIANT_VCF_FILTERS
get_label	./src/c++/lib/blt_common/map_level.hh	/^get_label(const index_t i)$/;"	f	namespace:MAPLEVEL
get_label	./src/c++/lib/calibration/IndelErrorModelMetadata.cpp	/^get_label(const index_t i)$/;"	f	namespace:IMODEL_ENTRY_TYPE
get_label	./src/c++/lib/calibration/RandomForestModel.cpp	/^get_label(const index_t i)$/;"	f	namespace:DTREE_NODE_TYPE
get_label	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^get_label(const index_t i)$/;"	f	namespace:SMODEL_ENTRY_TYPE
get_label	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^get_label(const index_t i)$/;"	f	namespace:SCORING_CALL_TYPE
get_label	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^get_label(const index_t i)$/;"	f	namespace:SCORING_VARIANT_TYPE
get_label	./src/c++/lib/starling_common/SampleSetSummary.hh	/^    get_label($/;"	f	struct:SampleSetSummary
get_largest_read_size	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    get_largest_read_size() const$/;"	f	struct:starling_pos_processor_base
get_largest_total_indel_ref_span_per_read	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    get_largest_total_indel_ref_span_per_read() const$/;"	f	struct:starling_pos_processor_base
get_left_shifted_hpol_size	./src/c++/lib/blt_common/ref_context.cpp	/^get_left_shifted_hpol_size($/;"	f
get_ln_comp_error_prob	./src/c++/lib/blt_util/qscore_cache.hh	/^    get_ln_comp_error_prob(const int qscore)$/;"	f	struct:qphred_cache
get_ln_error_prob	./src/c++/lib/blt_util/qscore_cache.hh	/^    get_ln_error_prob(const int qscore)$/;"	f	struct:qphred_cache
get_lncompe_imp	./src/c++/lib/blt_util/qscore_cache.hh	/^    get_lncompe_imp(const int qscore) const$/;"	f	struct:qphred_cache
get_lne_imp	./src/c++/lib/blt_util/qscore_cache.hh	/^    get_lne_imp(const int qscore) const$/;"	f	struct:qphred_cache
get_map_level	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^get_map_level(const starling_base_options& opt,$/;"	f	file:
get_mapped_qscore	./src/c++/lib/blt_util/qscore_cache.hh	/^    get_mapped_qscore(const int basecall_qscore,$/;"	f	struct:qphred_cache
get_mapped_qscore_imp	./src/c++/lib/blt_util/qscore_cache.hh	/^    get_mapped_qscore_imp(const int basecall_qscore,$/;"	f	struct:qphred_cache
get_match_edge_segments	./src/c++/lib/blt_util/align_path.cpp	/^get_match_edge_segments(const path_t& apath)$/;"	f	namespace:ALIGNPATH
get_max_lhood_allele_freq	./src/c++/lib/blt_common/position_strand_distro_anomaly_lrt.cpp	/^get_max_lhood_allele_freq(const snp_pos_info& pi,$/;"	f	file:
get_max_toggle	./src/c++/lib/starling_common/starling_align_limit.hh	/^    get_max_toggle(const unsigned n_usable_indels) const$/;"	f	struct:starling_align_limit
get_most_frequent_alt_id	./src/c++/lib/blt_common/snp_pos_info.hh	/^    get_most_frequent_alt_id(const unsigned ref_gt) const$/;"	f	struct:snp_pos_info
get_mq_ranksum	./src/c++/lib/blt_common/snp_pos_info.cpp	/^get_mq_ranksum() const$/;"	f	class:snp_pos_info
get_mut_base_id	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^get_mut_base_id(const uint8_t base_id)$/;"	f	file:
get_mut_base_id	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^get_mut_base_id(const uint8_t base_id)$/;"	f	file:
get_name	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    get_name()$/;"	f	struct:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES
get_name	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    get_name()$/;"	f	struct:SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES
get_name	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    get_name()$/;"	f	struct:SOMATIC_SNV_SCORING_FEATURES
get_new_read_pos	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^get_new_read_pos(const read_segment& rseg)$/;"	f	file:
get_nonclip_range	./src/c++/lib/blt_util/align_path.cpp	/^get_nonclip_range(const path_t& apath)$/;"	f	namespace:ALIGNPATH
get_nonsite_path_lnp	./src/c++/lib/starling_common/starling_base_shared.hh	/^    get_nonsite_path_lnp(const bool is_tier2_pass,$/;"	f	struct:starling_base_deriv_options
get_num_tag	./src/c++/lib/htsapi/bam_record.cpp	/^get_num_tag(const char* tag, int32_t& num) const$/;"	f	class:bam_record
get_obs_base_id	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^get_obs_base_id(const uint8_t true_id,$/;"	f	file:
get_obs_base_id	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^get_obs_base_id(const uint8_t true_id,$/;"	f	file:
get_obs_count	./src/c++/lib/blt_util/ranksum.hh	/^    get_obs_count($/;"	f	class:ranksum
get_offset	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    get_offset() const$/;"	f	struct:reference_contig_segment
get_optional_id	./src/c++/lib/blt_util/id_map.hh	/^    get_optional_id(const K& key) const$/;"	f	struct:id_map
get_optional_id	./src/c++/lib/blt_util/id_map.hh	/^    get_optional_id(const K& key) const$/;"	f	struct:id_set
get_pileup_stage_no	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^get_pileup_stage_no(const starling_base_options& \/*opt*\/)$/;"	f	namespace:STAGE
get_ploidy	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    get_ploidy($/;"	f	struct:starling_pos_processor_base
get_poly_prior	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^get_poly_prior($/;"	f	file:
get_pos	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    get_pos(const pos_t pos) const$/;"	f	struct:pos_basecall_buffer
get_pos_read_segment_iter	./src/c++/lib/starling_common/starling_read_buffer.cpp	/^get_pos_read_segment_iter(const pos_t pos)$/;"	f	class:starling_read_buffer
get_prefix	./src/c++/lib/starling_common/SampleSetSummary.hh	/^    get_prefix($/;"	f	struct:SampleSetSummary
get_prior	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    get_prior($/;"	f	struct:pprob_digt_caller
get_pstat	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    get_pstat() const$/;"	f	struct:depth_stream_stat_range
get_ptr	./src/c++/lib/starling_common/starling_read_buffer.cpp	/^get_ptr()$/;"	f	class:read_segment_iter
get_qscore	./src/c++/lib/blt_common/snp_pos_info.hh	/^    get_qscore() const$/;"	f	struct:base_call
get_raw_baseQ	./src/c++/lib/blt_common/snp_pos_info.cpp	/^get_raw_baseQ() const$/;"	f	class:snp_pos_info
get_raw_pos	./src/c++/lib/blt_common/snp_pos_info.cpp	/^get_raw_pos() const$/;"	f	class:snp_pos_info
get_rc_string	./src/c++/lib/htsapi/bam_seq.hh	/^    get_rc_string() const$/;"	f	struct:bam_seq
get_read	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    get_read(const align_id_t read_id) const$/;"	f	struct:starling_read_buffer
get_read	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    get_read(const align_id_t read_id)$/;"	f	struct:starling_read_buffer
get_read_align_strand_end_skip	./src/c++/lib/blt_util/read_util.cpp	/^get_read_align_strand_end_skip(const char* const read,$/;"	f
get_read_buffer_size	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^get_read_buffer_size(const unsigned largest_read_size,$/;"	f	file:
get_read_fwd_strand_skip	./src/c++/lib/blt_util/read_util.cpp	/^get_read_fwd_strand_skip(const char* const read,$/;"	f
get_read_pos_ranksum	./src/c++/lib/blt_common/snp_pos_info.cpp	/^get_read_pos_ranksum() const$/;"	f	class:snp_pos_info
get_realignment_range	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^get_realignment_range(const pos_t pos,$/;"	f	file:
get_record_ptr	./src/c++/lib/htsapi/bam_streamer.hh	/^    const bam_record* get_record_ptr() const$/;"	f	struct:bam_streamer
get_record_ptr	./src/c++/lib/htsapi/bed_streamer.hh	/^    get_record_ptr() const$/;"	f	struct:bed_streamer
get_record_ptr	./src/c++/lib/htsapi/vcf_streamer.hh	/^    get_record_ptr() const$/;"	f	struct:vcf_streamer
get_ref_base	./src/c++/lib/blt_common/snp_pos_info.hh	/^    get_ref_base() const$/;"	f	struct:snp_pos_info
get_ref_gtype	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    get_ref_gtype(const char a) const$/;"	f	struct:nploid_info
get_ref_seq_known_size	./src/c++/lib/blt_util/seq_util.cpp	/^get_ref_seq_known_size(const reference_contig_segment& ref,$/;"	f
get_region_seq	./src/c++/lib/htsapi/samtools_fasta_util.cpp	/^get_region_seq(const std::string& ref_file,$/;"	f
get_scoring_features	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid_vcf.cpp	/^get_scoring_features($/;"	f	file:
get_segment	./src/c++/lib/starling_common/starling_read.hh	/^    get_segment(const seg_id_t segmentIndex) const$/;"	f	struct:starling_read
get_segment	./src/c++/lib/starling_common/starling_read.hh	/^    get_segment(const seg_id_t segmentIndex)$/;"	f	struct:starling_read
get_segment_edge_pin	./src/c++/lib/starling_common/starling_read_segment.cpp	/^get_segment_edge_pin() const$/;"	f	class:read_segment
get_seq_base	./src/c++/lib/blt_util/seq_util.hh	/^get_seq_base(const char* seq,$/;"	f
get_seq_base	./src/c++/lib/blt_util/seq_util.hh	/^get_seq_base(const std::string& seq,$/;"	f
get_seq_counts	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^get_seq_counts(std::istream& ref_is,$/;"	f	file:
get_seq_repeat_unit	./src/c++/lib/blt_util/seq_util.cpp	/^get_seq_repeat_unit($/;"	f
get_single_sample_scoring_features	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid_vcf.cpp	/^get_single_sample_scoring_features($/;"	f	file:
get_snoise_option_parser	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_option_parser.cpp	/^get_snoise_option_parser($/;"	f
get_snp_hpol_size	./src/c++/lib/blt_common/ref_context.cpp	/^get_snp_hpol_size(const pos_t pos,$/;"	f
get_soft_clip_alignment_range	./src/c++/lib/starling_common/alignment_util.cpp	/^get_soft_clip_alignment_range(const alignment& al)$/;"	f
get_somatic_indel	./src/c++/lib/applications/strelka/somatic_indel_grid.cpp	/^get_somatic_indel($/;"	f	class:somatic_indel_caller_grid
get_stage_data	./src/c++/lib/blt_util/stage_manager.hh	/^    get_stage_data() const$/;"	f	struct:stage_manager
get_stage_data	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^get_stage_data($/;"	f	namespace:STAGE
get_stage_id_shift	./src/c++/lib/blt_util/stage_manager.hh	/^    get_stage_id_shift(const int id) const$/;"	f	struct:stage_data
get_standardized_region_seq	./src/c++/lib/htsapi/samtools_fasta_util.cpp	/^get_standardized_region_seq($/;"	f
get_starling_base_option_parser	./src/c++/lib/starling_common/starling_base_option_parser.cpp	/^get_starling_base_option_parser($/;"	f
get_starling_option_parser	./src/c++/lib/applications/starling/starling_option_parser.cpp	/^get_starling_option_parser($/;"	f
get_state	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^get_state($/;"	f	namespace:DDIGT
get_state	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^get_state($/;"	f	namespace:DDIGT_GRID
get_strand_ratio_lhood_spi	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid_lhood_cached.cpp	/^get_strand_ratio_lhood_spi($/;"	f
get_strelka_option_parser	./src/c++/lib/applications/strelka/strelka_option_parser.cpp	/^get_strelka_option_parser($/;"	f
get_string	./src/c++/lib/htsapi/bam_seq.hh	/^    get_string() const$/;"	f	struct:bam_seq
get_string_tag	./src/c++/lib/htsapi/bam_record.cpp	/^get_string_tag(const char* tag) const$/;"	f	class:bam_record
get_substring	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    get_substring(const pos_t pos,$/;"	f	struct:reference_contig_segment
get_sum_path_pprob	./src/c++/lib/starling_common/starling_indel_call_pprob_digt.cpp	/^get_sum_path_pprob($/;"	f
get_test_alignment	./src/c++/lib/starling_common/test/alignment_util_test.cpp	/^get_test_alignment()$/;"	f	file:
get_test_stage_data	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^get_test_stage_data()$/;"	f	file:
get_type_label	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^    get_type_label(const map_t t)$/;"	f	struct:__anon10::ref_map_type
get_u_stat	./src/c++/lib/blt_util/ranksum.cpp	/^ranksum::get_u_stat() const$/;"	f	class:ranksum
get_val	./src/c++/lib/blt_common/sparse_function_1d.cpp	/^    get_val(const blt_float_t x) const$/;"	f	struct:linear_function
get_val	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^    get_val(const unsigned qscore,$/;"	f	struct:het_ratio_cache
get_valid_alignment_range	./src/c++/lib/starling_common/starling_read_util.cpp	/^get_valid_alignment_range(const alignment& al,$/;"	f
get_value	./src/c++/lib/blt_util/id_map.hh	/^    const V& get_value(const unsigned id) const$/;"	f	struct:id_map
get_vcf_gt	./src/c++/lib/blt_util/digt.hh	/^get_vcf_gt(const int gt,$/;"	f	namespace:DIGT
get_vcf_seq_repeat_unit	./src/c++/lib/blt_util/seq_util.cpp	/^get_vcf_seq_repeat_unit($/;"	f
get_win_avg_set	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        get_win_avg_set(const unsigned i) const$/;"	f	struct:starling_pos_processor_base::pos_win_avgs
get_z_score	./src/c++/lib/blt_util/ranksum.cpp	/^get_z_score(const int n1, const int n2, const double w1)$/;"	f	file:
get_z_stat	./src/c++/lib/blt_util/fastRanksum.cpp	/^get_z_stat() const$/;"	f	class:fastRanksum
getcwd	./src/c++/lib/blt_util/compat_unistd.h	31;"	d
ginfo_init	./src/c++/lib/blt_util/nploid_genotype_util.cpp	/^ginfo_init(const unsigned init_ploidy,$/;"	f	class:nploid_info
gqx	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    int gqx=0;$/;"	m	struct:LocusSampleInfo
greaterThanCore	./src/c++/lib/starling_common/IndelKey.hh	/^    greaterThanCore(const IndelKey& rhs) const$/;"	f	struct:IndelKey
gt_parse_helper	./src/c++/lib/htsapi/vcf_util.cpp	/^struct gt_parse_helper$/;"	s	file:
gt_string	./src/c++/lib/blt_util/RecordTracker.hh	/^    std::string gt_string;$/;"	m	struct:IndelGenotype
gtype_info	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^        gtype_info()$/;"	f	struct:nploid_info::gtype_info
gtype_info	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^        gtype_info(const gtype_info& g) : label(g.label)$/;"	f	struct:nploid_info::gtype_info
gtype_info	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    struct gtype_info$/;"	s	struct:nploid_info
gtype_size	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    gtype_size() const$/;"	f	struct:nploid_info
gvcf	./src/c++/lib/applications/starling/starling_shared.hh	/^    gvcf_deriv_options gvcf;$/;"	m	struct:starling_deriv_options
gvcf	./src/c++/lib/applications/starling/starling_shared.hh	/^    gvcf_options gvcf;$/;"	m	struct:starling_options
gvcfSampleStream	./src/c++/lib/applications/starling/starling_streams.hh	/^    gvcfSampleStream(const unsigned sampleIndex) const$/;"	f	struct:starling_streams
gvcfVariantsStream	./src/c++/lib/applications/starling/starling_streams.hh	/^    gvcfVariantsStream() const$/;"	f	struct:starling_streams
gvcf_aggregator	./src/c++/lib/applications/starling/gvcf_aggregator.cpp	/^gvcf_aggregator($/;"	f	class:gvcf_aggregator
gvcf_aggregator	./src/c++/lib/applications/starling/gvcf_aggregator.hh	/^class gvcf_aggregator$/;"	c
gvcf_block_site_record	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^    gvcf_block_site_record($/;"	f	struct:gvcf_block_site_record
gvcf_block_site_record	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^struct gvcf_block_site_record : public GermlineSiteLocusInfo$/;"	s
gvcf_compressor	./src/c++/lib/applications/starling/gvcf_compressor.cpp	/^gvcf_compressor($/;"	f	class:gvcf_compressor
gvcf_compressor	./src/c++/lib/applications/starling/gvcf_compressor.hh	/^struct gvcf_compressor$/;"	s
gvcf_deriv_options	./src/c++/lib/applications/starling/gvcf_options.cpp	/^gvcf_deriv_options($/;"	f	class:gvcf_deriv_options
gvcf_deriv_options	./src/c++/lib/applications/starling/gvcf_options.hh	/^struct gvcf_deriv_options$/;"	s
gvcf_nonsomatic_gvcf_prior	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.cpp	/^gvcf_nonsomatic_gvcf_prior($/;"	f	file:
gvcf_options	./src/c++/lib/applications/starling/gvcf_options.hh	/^struct gvcf_options$/;"	s
gvcf_writer	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^gvcf_writer($/;"	f	class:gvcf_writer
gvcf_writer	./src/c++/lib/applications/starling/gvcf_writer.hh	/^struct gvcf_writer : public variant_pipe_stage_base$/;"	s
handle_new_pos_value	./src/c++/lib/blt_util/stage_manager.cpp	/^handle_new_pos_value(const pos_t pos)$/;"	f	class:stage_manager
hap_cand	./src/c++/lib/blt_common/hapscore.cpp	/^hap_cand(const bam_seq_base& read_seq,$/;"	f	class:hap_cand
hap_cand	./src/c++/lib/blt_common/hapscore.hh	/^struct hap_cand$/;"	s
hap_set	./src/c++/lib/blt_common/snp_pos_info.hh	/^    mutable hap_set_t hap_set;$/;"	m	struct:snp_pos_info
hap_set_t	./src/c++/lib/blt_common/hapscore.hh	/^typedef std::vector<hap_cand> hap_set_t;$/;"	t
haplotypeId	./src/c++/lib/starling_common/IndelData.hh	/^    uint8_t haplotypeId;    \/\/ 0: reference; 1: haplotype 1; 2: haplotype 2; 3: haplotype 1 and 2$/;"	m	struct:IndelSampleData
hasEnding	./src/c++/lib/htsapi/bam_streamer.cpp	/^hasEnding($/;"	f	file:
het_bias_inc_fudge	./src/c++/lib/blt_common/blt_shared.hh	/^    const double het_bias_inc_fudge = 0.0001;$/;"	m	struct:blt_options
het_bias_max_ratio_inc	./src/c++/lib/blt_common/blt_shared.hh	/^    const double het_bias_max_ratio_inc = 0.05 + het_bias_inc_fudge;$/;"	m	struct:blt_options
het_ratio_cache	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^    het_ratio_cache()$/;"	f	struct:het_ratio_cache
het_ratio_cache	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^struct het_ratio_cache$/;"	s
highRepeatCount	./src/c++/lib/calibration/IndelErrorModel.hh	/^    highRepeatCount() const$/;"	f	class:AdaptiveIndelErrorModel
high_qscore_error	./src/c++/lib/blt_util/qscore_cache.cpp	/^high_qscore_error(const int qscore,$/;"	f	class:qphred_cache
hinfo	./src/c++/lib/blt_common/hapscore.cpp	/^    hinfo(const hap_cand& hc)$/;"	f	struct:hinfo
hinfo	./src/c++/lib/blt_common/hapscore.cpp	/^struct hinfo$/;"	s	file:
hom_base	./src/c++/lib/blt_util/digt.hh	/^hom_base(const unsigned idx)$/;"	f	namespace:DIGT
hpol	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unsigned hpol = 0;$/;"	m	struct:GermlineSiteLocusInfo
hseq	./src/c++/lib/blt_common/hapscore.cpp	/^    hseq_t hseq;$/;"	m	struct:hinfo	file:
hseq_t	./src/c++/lib/blt_common/hapscore.cpp	/^    typedef std::array<uint8_t,hap_cand::HAP_SIZE> hseq_t;$/;"	t	struct:hinfo	file:
htsType	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        HTS_TYPE::index_t htsType = HTS_TYPE::NONE;$/;"	m	struct:HtsMergeStreamer::OrderData
htsTypeFactory	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^T* htsTypeFactory(const char* htsFilename, const char* \/*referenceFilename*\/, const char* region, const bool \/*isRequireNormalized*\/)$/;"	f	namespace:HTS_TYPE
htsTypeFactory	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^T* htsTypeFactory(const char* htsFilename, const char* \/*referenceFilename*\/, const char* region, int rank, int numTasks, const bool \/*isRequireNormalized*\/)$/;"	f	namespace:HTS_TYPE
htsTypeFactory	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^inline bam_streamer* htsTypeFactory(const char* htsFilename, const char* referenceFilename, const char* region, const bool \/*isRequireNormalized*\/)$/;"	f	namespace:HTS_TYPE
htsTypeFactory	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^inline bam_streamer* htsTypeFactory(const char* htsFilename, const char* referenceFilename, const char* region, int rank, int numTasks, const bool \/*isRequireNormalized*\/)$/;"	f	namespace:HTS_TYPE
htsTypeFactory	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^inline vcf_streamer* htsTypeFactory(const char* htsFilename, const char* \/*referenceFilename*\/, const char* region, const bool isRequireNormalized)$/;"	f	namespace:HTS_TYPE
htsTypeIndex	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        unsigned htsTypeIndex = 0;$/;"	m	struct:HtsMergeStreamer::OrderData
hts_streamer	./src/c++/lib/htsapi/hts_streamer.cpp	/^hts_streamer($/;"	f	class:hts_streamer
hts_streamer	./src/c++/lib/htsapi/hts_streamer.hh	/^struct hts_streamer : private boost::noncopyable$/;"	s
iat	./src/c++/lib/starling_common/IndelData.hh	/^    INDEL_ALIGN_TYPE::index_t iat = INDEL_ALIGN_TYPE::GENOME_SUBMAP_READ;$/;"	m	struct:IndelObservationData
icall_t	./src/c++/lib/blt_common/adjust_joint_eprob.cpp	/^typedef unsigned icall_t;$/;"	t	file:
icalls_t	./src/c++/lib/blt_common/adjust_joint_eprob.cpp	/^typedef std::vector<icall_t> icalls_t;$/;"	t	file:
id	./src/c++/lib/starling_common/IndelData.hh	/^    align_id_t id = 0;$/;"	m	struct:IndelObservationData
id_map	./src/c++/lib/blt_util/id_map.hh	/^struct id_map$/;"	s
id_set	./src/c++/lib/blt_util/id_map.hh	/^struct id_set$/;"	s
id_to_base	./src/c++/lib/blt_util/seq_util.hh	/^id_to_base(const uint8_t i)$/;"	f
id_to_base_error	./src/c++/lib/blt_util/seq_util.cpp	/^id_to_base_error(const uint8_t i)$/;"	f
idmap_t	./src/c++/lib/blt_util/stage_manager.hh	/^    typedef std::map<int,unsigned> idmap_t;$/;"	t	struct:stage_data
ihpol_data	./src/c++/lib/blt_common/ref_context.cpp	/^    ihpol_data()$/;"	f	struct:ihpol_data
ihpol_data	./src/c++/lib/blt_common/ref_context.cpp	/^struct ihpol_data$/;"	s	file:
iks_map_t	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^typedef std::map<indel_status_t,align_info_t> iks_map_t;$/;"	t	file:
illumina	./src/c++/lib/blt_util/parse_util.cpp	/^namespace illumina$/;"	n	file:
illumina	./src/c++/lib/blt_util/parse_util.hh	/^namespace illumina$/;"	n
illumina	./src/c++/lib/common/Exceptions.cpp	/^namespace illumina$/;"	n	file:
illumina	./src/c++/lib/common/Exceptions.hh	/^namespace illumina$/;"	n
illumina	./src/c++/lib/common/Program.cpp	/^namespace illumina$/;"	n	file:
illumina	./src/c++/lib/common/Program.hh	/^namespace illumina$/;"	n
illumina	./src/c++/lib/common/ProgramConfig.hh	/^namespace illumina$/;"	n
in_range	./src/c++/lib/blt_common/sparse_function_1d.cpp	/^in_range(blt_float_t min,$/;"	f
inc	./src/c++/lib/blt_util/depth_buffer.hh	/^    inc(const pos_t pos)$/;"	f	struct:depth_buffer
inc	./src/c++/lib/blt_util/depth_buffer.hh	/^    inc(pos_t pos,$/;"	f	struct:depth_buffer_compressible
inc	./src/c++/lib/blt_util/fastRanksum.hh	/^        inc(const bool isCategory1)$/;"	f	struct:fastRanksum::ranksumObs
inc	./src/c++/lib/starling_common/starling_read_util.cpp	/^    inc(const unsigned start_pos,$/;"	f	struct:__anon12::ddata
include_headers	./src/c++/lib/applications/starling/gvcf_options.hh	/^    std::vector<std::string> include_headers;$/;"	m	struct:gvcf_options
increase_buffer_size	./src/c++/lib/blt_util/istream_line_splitter.cpp	/^increase_buffer_size()$/;"	f	class:istream_line_splitter
incrementAlleleCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    incrementAlleleCount(const unsigned alleleIndex)$/;"	f	struct:SupportingReadCountGroup
incrementAltAlleleCount	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    incrementAltAlleleCount()$/;"	f	struct:LocusInfo
incrementAltAlleleCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    incrementAltAlleleCount(const unsigned altAlleleIndex)$/;"	f	struct:SupportingReadCountGroup
incrementRefAlleleCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    incrementRefAlleleCount()$/;"	f	struct:SupportingReadCountGroup
increment_het_ratio_lhood	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^increment_het_ratio_lhood(const extended_pos_info& epi,$/;"	f	file:
increment_het_ratio_lhood	./src/c++/lib/starling_common/starling_indel_call_pprob_digt.cpp	/^increment_het_ratio_lhood($/;"	f	file:
increment_het_ratio_lhood_cached	./src/c++/lib/strelka_common/position_snp_call_grid_lhood_cached.cpp	/^increment_het_ratio_lhood_cached($/;"	f	file:
increment_observers	./src/c++/lib/blt_util/test/observer_test.cpp	/^    increment_observers() const$/;"	f	struct:notifier_test
increment_path	./src/c++/lib/blt_util/align_path_util.hh	/^increment_path(const path_t& path,$/;"	f	namespace:ALIGNPATH
indel	./src/c++/lib/starling_common/IndelData.hh	/^    score_t indel;$/;"	m	struct:ReadPathScores
indel	./src/c++/lib/starling_common/indel.hh	/^struct indel$/;"	s
indelAlignType	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    INDEL_ALIGN_TYPE::index_t indelAlignType;$/;"	m	struct:AlignInfo
indelCount	./src/c++/lib/starling_common/starling_read_align.cpp	/^    unsigned indelCount = 0;$/;"	m	struct:extra_path_info	file:
indelDevelopmentFeatureSet	./src/c++/lib/applications/starling/gvcf_options.hh	/^    const FeatureSet& indelDevelopmentFeatureSet;$/;"	m	struct:gvcf_deriv_options
indelEVSThreshold	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    indelEVSThreshold() const$/;"	f	struct:ScoringModelManager
indelErrorModelFilenames	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::vector<std::string> indelErrorModelFilenames;$/;"	m	struct:starling_base_options
indelFeatureSet	./src/c++/lib/applications/starling/gvcf_options.hh	/^    const FeatureSet& indelFeatureSet;$/;"	m	struct:gvcf_deriv_options
indelKey	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    const IndelKey indelKey;$/;"	m	struct:GermlineIndelAlleleInfo
indelMaxWindowFilteredBasecallFrac	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double indelMaxWindowFilteredBasecallFrac = 0.3;$/;"	m	struct:somatic_filter_options
indelModel1	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModel1.cpp	/^indelModel1($/;"	f
indelModelVariantAndBetaBinomialError	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^indelModelVariantAndBetaBinomialError($/;"	f
indelModelVariantAndBinomialMixtureError	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^indelModelVariantAndBinomialMixtureError($/;"	f
indelModelVariantAndBinomialMixtureErrorNoOverlap	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^indelModelVariantAndBinomialMixtureErrorNoOverlap($/;"	f
indelModelVariantAndIndyError	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^indelModelVariantAndIndyError($/;"	f
indelModelVariantAndIndyErrorNoOverlap	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^indelModelVariantAndIndyErrorNoOverlap($/;"	f
indelRate	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^    double indelRate = 0;$/;"	m	class:IndelMotifBinomialMixture
indelRefErrorFactor	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double indelRefErrorFactor = 1.;$/;"	m	struct:starling_base_options
indelRegionFlankSize	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    unsigned indelRegionFlankSize = 50;$/;"	m	struct:somatic_filter_options
indelRegionStage	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    unsigned indelRegionStage = 0;$/;"	m	struct:somatic_filter_deriv_options
indelRepeatCount	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned indelRepeatCount = 0;$/;"	m	struct:AlleleReportInfo
indelReportInfo	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    const AlleleReportInfo indelReportInfo;$/;"	m	struct:GermlineIndelAlleleInfo
indelReportInfo	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    AlleleReportInfo indelReportInfo;$/;"	m	struct:SomaticIndelVcfInfo
indelSampleData_t	./src/c++/lib/starling_common/IndelBuffer.hh	/^    typedef std::vector<IndelBufferSampleData> indelSampleData_t;$/;"	t	struct:IndelBuffer
indelToRefErrorProb	./src/c++/lib/starling_common/IndelData.hh	/^    LogValuePair indelToRefErrorProb;$/;"	m	struct:IndelErrorRates
indel_buffer_data_t	./src/c++/lib/starling_common/IndelBuffer.hh	/^    typedef std::map<IndelKey,indel_buffer_value_t> indel_buffer_data_t;$/;"	t	struct:IndelBuffer
indel_buffer_value_t	./src/c++/lib/starling_common/IndelBuffer.hh	/^    typedef IndelData indel_buffer_value_t;$/;"	t	struct:IndelBuffer
indel_candidate_signal_test_alpha	./src/c++/lib/starling_common/starling_base_shared.hh	/^    const double indel_candidate_signal_test_alpha = 1e-9;$/;"	m	struct:starling_base_options
indel_contam_tolerance	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double indel_contam_tolerance = 0.15;$/;"	m	struct:strelka_options
indel_error_model_name	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::string indel_error_model_name = "logLinear";$/;"	m	struct:starling_base_options
indel_lnp_to_pprob	./src/c++/lib/starling_common/AlleleReportInfoUtil.cpp	/^indel_lnp_to_pprob($/;"	f
indel_nonsite_match_lnp	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double indel_nonsite_match_lnp;$/;"	m	struct:starling_base_deriv_options
indel_nonsite_match_prob	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double indel_nonsite_match_prob = 0.25;$/;"	m	struct:starling_base_options
indel_pair_set	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^typedef std::set<std::pair<IndelKey,IndelKey> > indel_pair_set;$/;"	t	file:
indel_present_t	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^typedef std::pair<bool,IndelKey> indel_present_t;$/;"	t	file:
indel_ptr_t	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^    typedef std::unique_ptr<GermlineIndelLocusInfo> indel_ptr_t;$/;"	t	struct:VariantOverlapResolver
indel_record_t	./src/c++/lib/blt_util/RecordTracker.hh	/^    typedef boost::icl::interval_map<pos_t, indel_value_t> indel_record_t;$/;"	t	struct:RecordTracker
indel_result_set	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^struct indel_result_set : result_set$/;"	s
indel_scoring_model_filename	./src/c++/lib/applications/starling/starling_shared.hh	/^    std::string indel_scoring_model_filename;$/;"	m	struct:starling_options
indel_set_t	./src/c++/lib/starling_common/indel_set.hh	/^typedef std::set<IndelKey> indel_set_t;$/;"	t
indel_status_map_t	./src/c++/lib/starling_common/starling_read_align_score_indels.hh	/^typedef std::map<IndelKey,bool> indel_status_map_t;$/;"	t
indel_status_t	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^typedef std::pair<IndelKey, indel_present_t > indel_status_t;$/;"	t	file:
indel_value_t	./src/c++/lib/blt_util/RecordTracker.hh	/^    typedef std::set<IndelGenotype, IndelGenotypeSort> indel_value_t;$/;"	t	struct:RecordTracker
index_t	./src/c++/lib/alignment/Alignment.hh	/^    enum index_t$/;"	g	struct:AlignState
index_t	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^enum index_t$/;"	g	namespace:MODEL_TYPE
index_t	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^enum index_t$/;"	g	namespace:__anon20::MIN_PARAMS4	file:
index_t	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^enum index_t$/;"	g	namespace:__anon18::MIN_PARAMS3	file:
index_t	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^enum index_t$/;"	g	namespace:__anon26::MIN_PARAMS3	file:
index_t	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^enum index_t$/;"	g	namespace:__anon22::MIN_PARAMS	file:
index_t	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^enum index_t$/;"	g	namespace:__anon21::MIN_PARAMS	file:
index_t	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^enum index_t$/;"	g	namespace:MIN_PARAMS3	file:
index_t	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsRun.cpp	/^enum index_t$/;"	g	namespace:INPUT_TYPE	file:
index_t	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^enum index_t$/;"	g	namespace:VARQUEUE	file:
index_t	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES
index_t	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:GERMLINE_INDEL_SCORING_FEATURES
index_t	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES
index_t	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:GERMLINE_SNV_SCORING_FEATURES
index_t	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^enum index_t$/;"	g	namespace:GERMLINE_VARIANT_VCF_FILTERS
index_t	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^enum index_t$/;"	g	namespace:MODIFIED_SITE_GT
index_t	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES
index_t	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:RNA_INDEL_SCORING_FEATURES
index_t	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:RNA_SNV_SCORING_DEVELOPMENT_FEATURES
index_t	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:RNA_SNV_SCORING_FEATURES
index_t	./src/c++/lib/applications/starling/starling_run.cpp	/^enum index_t$/;"	g	namespace:INPUT_TYPE	file:
index_t	./src/c++/lib/applications/strelka/StrelkaSampleSetSummary.hh	/^enum index_t { NORMAL, TUMOR, SIZE };$/;"	g	namespace:STRELKA_SAMPLE_TYPE
index_t	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:SOMATIC_INDEL_SCORING_DEVELOPMENT_FEATURES
index_t	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:SOMATIC_INDEL_SCORING_FEATURES
index_t	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:SOMATIC_SNV_SCORING_DEVELOPMENT_FEATURES
index_t	./src/c++/lib/applications/strelka/somaticVariantEmpiricalScoringFeatures.hh	/^    enum index_t$/;"	g	struct:SOMATIC_SNV_SCORING_FEATURES
index_t	./src/c++/lib/applications/strelka/somatic_call_shared.hh	/^enum index_t { REF,$/;"	g	namespace:NTYPE
index_t	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum index_t { SIZE = PRESTRAND_SIZE+DIGT_GRID::STRAND_STATE_SIZE };$/;"	g	namespace:DDIGT_GRID
index_t	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum index_t { SIZE = PRESTRAND_SIZE+STRAND_STATE_SIZE };$/;"	g	namespace:DIGT_GRID
index_t	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum index_t { SIZE = SOMATIC_DIGT::SIZE*SOMATIC_STATE::SIZE };$/;"	g	namespace:DDIGT
index_t	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum index_t$/;"	g	namespace:SOMATIC_DIGT
index_t	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^enum index_t$/;"	g	namespace:SOMATIC_STATE
index_t	./src/c++/lib/applications/strelka/strelka_run.cpp	/^enum index_t$/;"	g	namespace:INPUT_TYPE	file:
index_t	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^enum index_t$/;"	g	namespace:SOMATIC_VARIANT_VCF_FILTERS
index_t	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_run.cpp	/^enum index_t$/;"	g	namespace:INPUT_TYPE	file:
index_t	./src/c++/lib/blt_common/blt_shared.hh	/^enum index_t$/;"	g	namespace:LOG_LEVEL
index_t	./src/c++/lib/blt_common/map_level.hh	/^enum index_t$/;"	g	namespace:MAPLEVEL
index_t	./src/c++/lib/blt_common/position_nonref_2allele_test.hh	/^enum index_t$/;"	g	namespace:NR2TEST
index_t	./src/c++/lib/blt_common/position_nonref_test.hh	/^enum index_t$/;"	g	namespace:NRTEST
index_t	./src/c++/lib/blt_util/digt.hh	/^enum index_t$/;"	g	namespace:DIGT
index_t	./src/c++/lib/blt_util/monogt.hh	/^enum index_t$/;"	g	namespace:MONOGT
index_t	./src/c++/lib/blt_util/seq_util.hh	/^enum index_t$/;"	g	namespace:BASE_ID
index_t	./src/c++/lib/calibration/IndelErrorModelMetadata.cpp	/^enum index_t$/;"	g	namespace:IMODEL_ENTRY_TYPE	file:
index_t	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^enum index_t$/;"	g	namespace:IndelErrorRateType
index_t	./src/c++/lib/calibration/RandomForestModel.cpp	/^enum index_t$/;"	g	namespace:DTREE_NODE_TYPE	file:
index_t	./src/c++/lib/calibration/VariantScoringModelMetadata.cpp	/^enum index_t$/;"	g	namespace:SMODEL_ENTRY_TYPE	file:
index_t	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^enum index_t$/;"	g	namespace:SCORING_CALL_TYPE
index_t	./src/c++/lib/calibration/VariantScoringModelTypes.hh	/^enum index_t$/;"	g	namespace:SCORING_VARIANT_TYPE
index_t	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^enum index_t$/;"	g	namespace:INDEL_SIGNAL_TYPE
index_t	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^enum index_t$/;"	g	namespace:INDEL_TYPE
index_t	./src/c++/lib/htsapi/bam_seq.hh	/^enum index_t$/;"	g	namespace:BAM_BASE
index_t	./src/c++/lib/htsapi/bam_util.hh	/^enum index_t$/;"	g	namespace:BAM_FLAG
index_t	./src/c++/lib/htsapi/vcf_util.hh	/^enum index_t$/;"	g	namespace:VCFID
index_t	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^enum index_t$/;"	g	namespace:AG_GENOTYPE
index_t	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^enum index_t$/;"	g	namespace:SimplifiedIndelReportType
index_t	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^enum index_t$/;"	g	namespace:HTS_TYPE
index_t	./src/c++/lib/starling_common/indel_align_type.hh	/^enum index_t$/;"	g	namespace:INDEL_ALIGN_TYPE
index_t	./src/c++/lib/starling_common/indel_core.hh	/^enum index_t$/;"	g	namespace:INDEL
index_t	./src/c++/lib/starling_common/starling_diploid_indel.hh	/^enum index_t$/;"	g	namespace:STAR_DIINDEL
index_t	./src/c++/lib/starling_common/starling_pos_processor_base_stages.hh	/^enum index_t$/;"	g	namespace:STAGE
index_t	./src/c++/lib/starling_common/starling_read_filter_shared.hh	/^enum index_t$/;"	g	namespace:READ_FILTER_TYPE
init	./src/c++/lib/blt_util/LinearScaler.hh	/^    init($/;"	f	struct:LinearScaler
initLogTheta	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    static const double initLogTheta;$/;"	m	struct:error_minfunc_model3	file:
initLogTheta	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^const double error_minfunc_model3::initLogTheta = std::log(1e-04);$/;"	m	class:error_minfunc_model3	file:
initRepeatSpan	./src/c++/lib/starling_common/ReferenceRepeatFinder.cpp	/^void ReferenceRepeatFinder::initRepeatSpan(pos_t pos)$/;"	f	class:ReferenceRepeatFinder
initStream	./src/c++/lib/common/OutStream.cpp	/^initStream()$/;"	f	class:OutStream
init_read_segment	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^init_read_segment($/;"	f	class:starling_pos_processor_base
initialize	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    initialize($/;"	f	struct:ContextGenotypePriors
initializeAuxInfo	./src/c++/lib/starling_common/IndelData.cpp	/^initializeAuxInfo($/;"	f	class:IndelData
initializeAuxInfo	./src/c++/lib/starling_common/IndelData.cpp	/^initializeAuxInfo($/;"	f	class:IndelSampleData
initializePriors	./src/c++/lib/starling_common/AlleleGroupGenotype.cpp	/^initializePriors($/;"	f	class:GenotypePriorSet
initializeSplicedReadSegmentsAtPos	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^initializeSplicedReadSegmentsAtPos(const pos_t pos)$/;"	f	class:starling_pos_processor_base
initializeThetas	./src/c++/lib/starling_common/AlleleGroupGenotype.cpp	/^initializeThetas()$/;"	f	class:GenotypePriorSet
initialize_blt_signals	./src/c++/lib/blt_util/sig_handler.cpp	/^initialize_blt_signals(const char* progname,$/;"	f
initialize_gvcf_file	./src/c++/lib/applications/starling/starling_streams.cpp	/^initialize_gvcf_file($/;"	f	class:starling_streams
initialize_realign_bam	./src/c++/lib/starling_common/starling_streams_base.cpp	/^initialize_realign_bam($/;"	f	class:starling_streams_base
inplaceSetSubtract	./src/c++/lib/blt_util/set_util.hh	/^inplaceSetSubtract($/;"	f
input_candidate_indel_vcf	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::vector<std::string> input_candidate_indel_vcf;$/;"	m	struct:starling_base_options
ins	./src/c++/lib/alignment/GlobalAligner.hh	/^        ScoreType ins;$/;"	m	struct:GlobalAligner::ScoreVal
ins	./src/c++/lib/alignment/GlobalAligner.hh	/^        code_t ins : 2;$/;"	m	struct:GlobalAligner::PtrVal
insert	./src/c++/lib/blt_common/sparse_function_1d.hh	/^    insert(const blt_float_t x,$/;"	f	struct:sparse_function
insert	./src/c++/lib/blt_util/id_map.hh	/^    unsigned insert(const K& key, const V& value)$/;"	f	struct:id_map
insert	./src/c++/lib/blt_util/window_util.hh	/^    insert(const int32_t x)$/;"	f	struct:window_average
insert	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        insert(const pos_t pos,$/;"	f	struct:starling_pos_processor_base::pos_win_avgs
insert	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^    char insert;$/;"	m	struct:align_position	file:
insertAlt	./src/c++/lib/starling_common/IndelData.cpp	/^insertAlt($/;"	f	class:ReadPathScores
insertCallRegion	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^insertCallRegion($/;"	f	class:starling_pos_processor_base
insertDelete	./src/c++/lib/alignment/AlignmentScores.hh	/^    const ScoreType insertDelete; \/\/\/< additional cost (beyond extend) applied to insert->delete transitions$/;"	m	struct:AlignmentScores
insertExcludedRegion	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^insertExcludedRegion($/;"	f	class:SequenceErrorCountsPosProcessor
insertIndel	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^ActiveRegionReadBuffer::insertIndel(const IndelObservation& indelObservation)$/;"	f	class:ActiveRegionReadBuffer
insertMatch	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^void ActiveRegionReadBuffer::insertMatch(const align_id_t alignId, const pos_t pos)$/;"	f	class:ActiveRegionReadBuffer
insertMismatch	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^ActiveRegionReadBuffer::insertMismatch(const align_id_t alignId, const pos_t pos, const char baseChar)$/;"	f	class:ActiveRegionReadBuffer
insertSequence	./src/c++/lib/starling_common/IndelKey.hh	/^    std::string insertSequence; \/\/\/< insert sequence used for complete types only, not for breakends$/;"	m	struct:IndelKey
insertSiteNoise	./src/c++/lib/applications/strelka/NoiseBuffer.hh	/^    insertSiteNoise($/;"	f	struct:NoiseBuffer
insertSoftClipSegment	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^void ActiveRegionReadBuffer::insertSoftClipSegment(const align_id_t alignId, const pos_t pos, const std::string& segmentSeq, const bool isBeginEdge)$/;"	f	class:ActiveRegionReadBuffer
insert_alt_read_pos	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    insert_alt_read_pos($/;"	f	struct:pos_basecall_buffer
insert_forced_output_pos	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^insert_forced_output_pos(const pos_t pos)$/;"	f	class:starling_pos_processor_base
insert_impl	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        insert_impl(const unsigned n_used,$/;"	f	struct:starling_pos_processor_base::pos_win_avgs
insert_indel	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^insert_indel($/;"	f	class:starling_pos_processor_base
insert_key	./src/c++/lib/blt_util/id_map.hh	/^    unsigned insert_key(const K& key)$/;"	f	struct:id_set
insert_length	./src/c++/lib/blt_util/align_path_util.hh	/^    unsigned insert_length;$/;"	m	struct:ALIGNPATH::swap_info
insert_length	./src/c++/lib/starling_common/IndelKey.hh	/^    insert_length() const$/;"	f	struct:IndelKey
insert_mapq_count	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    insert_mapq_count($/;"	f	struct:pos_basecall_buffer
insert_nocompress_region	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^insert_nocompress_region($/;"	f	class:starling_pos_processor
insert_noise_pos	./src/c++/lib/applications/strelka/strelka_pos_processor.cpp	/^insert_noise_pos($/;"	f	class:strelka_pos_processor
insert_null	./src/c++/lib/blt_util/window_util.hh	/^    insert_null()$/;"	f	struct:window_average
insert_null	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        insert_null(const pos_t pos)$/;"	f	struct:starling_pos_processor_base::pos_win_avgs
insert_ploidy_region	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^insert_ploidy_region($/;"	f	class:starling_pos_processor_base
insert_pos_basecall	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    insert_pos_basecall(const pos_t pos,$/;"	f	struct:pos_basecall_buffer
insert_pos_basecall	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^insert_pos_basecall(const pos_t pos,$/;"	f	class:starling_pos_processor_base
insert_pos_spandel_count	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    insert_pos_spandel_count(const pos_t pos)$/;"	f	struct:pos_basecall_buffer
insert_pos_spandel_count	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^insert_pos_spandel_count(const pos_t pos,$/;"	f	class:starling_pos_processor_base
insert_pos_submap_count	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    insert_pos_submap_count(const pos_t pos)$/;"	f	struct:pos_basecall_buffer
insert_pos_submap_count	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^insert_pos_submap_count(const pos_t pos,$/;"	f	class:starling_pos_processor_base
insert_read	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^insert_read($/;"	f	class:starling_pos_processor_base
insert_seq	./src/c++/lib/starling_common/IndelKey.hh	/^    insert_seq() const$/;"	f	struct:IndelKey
insertionErrorRate	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^        double insertionErrorRate = 0;$/;"	m	struct:IndelErrorRateSet::IndelErrorRates
int16_t	./src/c++/lib/blt_util/compat_unistd.h	/^typedef __int16           int16_t;$/;"	t
int32_t	./src/c++/lib/blt_util/compat_unistd.h	/^typedef __int32           int32_t;$/;"	t
int64_t	./src/c++/lib/blt_util/compat_unistd.h	/^typedef __int64           int64_t;$/;"	t
integrate_ln_sparsefunc	./src/c++/lib/blt_common/sparse_function_1d.cpp	/^integrate_ln_sparsefunc(const sparse_function& sf,$/;"	f
integrate_out_sites	./src/c++/lib/starling_common/AlleleGroupGenotype.cpp	/^integrate_out_sites($/;"	f	file:
integrate_out_sites	./src/c++/lib/starling_common/starling_indel_call_pprob_digt.cpp	/^integrate_out_sites(const starling_base_deriv_options& dopt,$/;"	f	file:
integrate_sparsefunc	./src/c++/lib/blt_common/sparse_function_1d.cpp	/^integrate_sparsefunc(const sparse_function& sf,$/;"	f
interruptedHomopolymerLength	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned interruptedHomopolymerLength = 0;$/;"	m	struct:AlleleReportInfo
intersectingRecord	./src/c++/lib/blt_util/RecordTracker.hh	/^    intersectingRecord($/;"	f	struct:RecordTracker
intersectingRecordImpl	./src/c++/lib/blt_util/RecordTracker.cpp	/^intersectingRecordImpl($/;"	f	class:RecordTracker
interval_t	./src/c++/lib/blt_util/RecordTracker.hh	/^    typedef boost::icl::discrete_interval<pos_t> interval_t;$/;"	t	struct:RecordTracker
invalid_qscore_error	./src/c++/lib/blt_util/qscore_cache.cpp	/^invalid_qscore_error(const int qscore,$/;"	f	class:qphred_cache
isAligned	./src/c++/lib/alignment/Alignment.hh	/^    isAligned()$/;"	f	struct:Alignment
isAlignmentAboveMaxDepth	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^isAlignmentAboveMaxDepth($/;"	f	file:
isAlignmentTumor	./src/c++/lib/options/TumorNormalAlignmentFileOptions.hh	/^    std::vector<bool> isAlignmentTumor; \/\/\/< indicates which positions in the alignmnetFilename vector correspond to tumor$/;"	m	struct:TumorNormalAlignmentFileOptions
isAlleleGroupReportable	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^isAlleleGroupReportable($/;"	f	file:
isAllowEdgeInsertion	./src/c++/lib/alignment/AlignmentScores.hh	/^    const bool isAllowEdgeInsertion; \/\/\/< are insertions allowed directly on the leading and trailing edges?$/;"	m	struct:AlignmentScores
isAnchor	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    bool isAnchor(const pos_t pos) const$/;"	f	class:ActiveRegionReadBuffer
isAnchor	./src/c++/lib/starling_common/ReferenceRepeatFinder.hh	/^    bool isAnchor(pos_t pos) const$/;"	f	class:ReferenceRepeatFinder
isAnyBreakpointAlleles	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    isAnyBreakpointAlleles() const$/;"	f	struct:GermlineIndelLocusInfo
isAnyForcedOutputAtLocus	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    isAnyForcedOutputAtLocus() const$/;"	f	struct:GermlineIndelLocusInfo
isAnyReadCoverage	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    isAnyReadCoverage() const$/;"	f	struct:GermlineSiteSampleInfo
isBase	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^static const bool isBase[128] =$/;"	v	file:
isBaseInSTR	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^    bool isBaseInSTR = false;$/;"	m	struct:ReferenceSTRContext	file:
isBaseLeftEndOfSTR	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^    bool isBaseLeftEndOfSTR = false;$/;"	m	struct:ReferenceSTRContext	file:
isBasecallQualAdjustedForMapq	./src/c++/lib/starling_common/starling_base_shared.hh	/^    bool isBasecallQualAdjustedForMapq = true;$/;"	m	struct:starling_base_options
isBlockGqxDefined	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^    bool isBlockGqxDefined;$/;"	m	struct:gvcf_block_site_record
isBuffer	./src/c++/lib/applications/starling/VariantPhaser.hh	/^    isBuffer() const$/;"	f	struct:VariantPhaser
isCandidateIndel	./src/c++/lib/starling_common/IndelBuffer.hh	/^    isCandidateIndel($/;"	f	struct:IndelBuffer
isCandidateIndelImpl	./src/c++/lib/starling_common/IndelBuffer.cpp	/^isCandidateIndelImpl($/;"	f	class:IndelBuffer
isCandidateIndelImplTest	./src/c++/lib/starling_common/IndelBuffer.cpp	/^isCandidateIndelImplTest($/;"	f	class:IndelBuffer
isCandidateIndelImplTestSignalNoise	./src/c++/lib/starling_common/IndelBuffer.cpp	/^isCandidateIndelImplTestSignalNoise($/;"	f	class:IndelBuffer
isCandidateIndelImplTestWeakSignal	./src/c++/lib/starling_common/IndelBuffer.cpp	/^isCandidateIndelImplTestWeakSignal($/;"	f	class:IndelBuffer
isCandidateSnv	./src/c++/lib/starling_common/CandidateSnvBuffer.cpp	/^bool CandidateSnvBuffer::isCandidateSnv(const unsigned sampleIndex, const pos_t pos, const char baseChar) const$/;"	f	class:CandidateSnvBuffer
isCandidateSnvAnySample	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    bool isCandidateSnvAnySample(const pos_t pos, const char baseChar) const$/;"	f	class:CandidateSnvBuffer
isCandidateVariant	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^bool ActiveRegionReadBuffer::isCandidateVariant(const pos_t pos) const$/;"	f	class:ActiveRegionReadBuffer
isChanged	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^    bool isChanged = false;$/;"	m	struct:AlignmentInfo	file:
isChecked	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    isChecked() const$/;"	f	struct:ChromDepthTracker
isChromNameInitialized	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    isChromNameInitialized() const$/;"	f	struct:starling_pos_processor_base
isChromSet	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    isChromSet() const$/;"	f	struct:ScoringModelManager
isConfirmedInActiveRegion	./src/c++/lib/starling_common/IndelData.hh	/^    bool isConfirmedInActiveRegion = false;$/;"	m	struct:IndelData
isConflict	./src/c++/lib/htsapi/vcf_util.hh	/^    bool isConflict() const$/;"	f	struct:VcfGenotype
isContinuous	./src/c++/lib/applications/starling/ploidyUtil.hh	/^    isContinuous() const$/;"	f	struct:SamplePloidyState
isCountTowardsDepthFilter	./src/c++/lib/starling_common/IndelBuffer.hh	/^        bool isCountTowardsDepthFilter; \/\/\/< if false, this sample is ignored for depth filtration purposes (typically tumors)$/;"	m	struct:IndelBuffer::IndelBufferSampleData
isDepthConverged	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    isDepthConverged() const$/;"	f	struct:ChromDepthTracker
isDepthCountCheck	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    isDepthCountCheck()$/;"	f	struct:ChromDepthTracker
isDepthMatch	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    isDepthMatch($/;"	f	struct:ChromDepthTracker	file:
isDepthZero	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    bool isDepthZero(const pos_t pos) const$/;"	f	class:ActiveRegionReadBuffer
isDiploid	./src/c++/lib/applications/starling/ploidyUtil.hh	/^    isDiploid() const$/;"	f	struct:SamplePloidyState
isEVS	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    bool isEVS = false;$/;"	m	struct:strelka_shared_modifiers
isEVSIndelModel	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    isEVSIndelModel() const$/;"	f	struct:ScoringModelManager
isEVSSiteModel	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    isEVSSiteModel() const$/;"	f	struct:ScoringModelManager
isExcludeBasecalls	./src/c++/lib/applications/DumpSequenceErrorCounts/DSECOptions.hh	/^    bool isExcludeBasecalls = false;$/;"	m	struct:DSECOptions
isExcludeIndels	./src/c++/lib/applications/DumpSequenceErrorCounts/DSECOptions.hh	/^    bool isExcludeIndels = false;$/;"	m	struct:DSECOptions
isExpectedVcfReference	./src/c++/lib/htsapi/vcf_record_util.cpp	/^isExpectedVcfReference($/;"	f
isExtendedOutput	./src/c++/lib/applications/DumpSequenceErrorCounts/DSECOptions.hh	/^    bool isExtendedOutput = false;$/;"	m	struct:DSECOptions
isFilterSecondHaplotypeAsSequencerPhasingNoise	./src/c++/lib/starling_common/ActiveRegion.cpp	/^isFilterSecondHaplotypeAsSequencerPhasingNoise($/;"	f	file:
isFiltered	./src/c++/lib/assembly/AssemblyReadInfo.hh	/^    bool isFiltered = false; \/\/\/< if true, the read was 'used' but filtered out, so there is no meaningful contig id association$/;"	m	struct:AssemblyReadInfo
isFirstCandidateAlignmentPreferred	./src/c++/lib/starling_common/starling_read_align.cpp	/^isFirstCandidateAlignmentPreferred($/;"	f	file:
isForcedOutput	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    bool isForcedOutput = false;$/;"	m	struct:GermlineVariantAlleleInfo
isForcedOutput	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    bool isForcedOutput = false;$/;"	m	struct:GermlineSiteLocusInfo
isForcedOutput	./src/c++/lib/starling_common/IndelData.hh	/^    bool isForcedOutput = false;$/;"	m	struct:IndelData
isForwardStrand	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    bool isForwardStrand;$/;"	m	struct:AlignInfo
isHaploid	./src/c++/lib/applications/starling/ploidyUtil.hh	/^    isHaploid() const$/;"	f	struct:SamplePloidyState
isHet	./src/c++/lib/htsapi/vcf_util.hh	/^    isHet() const$/;"	f	struct:VcfGenotype
isIndelRefErrorFactor	./src/c++/lib/starling_common/starling_base_shared.hh	/^    bool isIndelRefErrorFactor = false;$/;"	m	struct:starling_base_options
isInit	./src/c++/lib/alignment/AlignerUtil.hh	/^    bool isInit = false;$/;"	m	struct:BackTrace
isInit	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^        bool isInit = false;$/;"	m	struct:IndelErrorRateSet::IndelErrorRates
isInit	./src/c++/lib/calibration/RandomForestModel.hh	/^        bool isInit;$/;"	m	struct:RandomForestModel::TreeNode
isInit	./src/c++/lib/calibration/RandomForestModel.hh	/^    bool isInit() const$/;"	f	struct:RandomForestModel
isInstanceOf	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^    inline bool isInstanceOf(TBase& Instance)$/;"	f	class:variant_pipe_stage_base
isIntersectRegion	./src/c++/lib/blt_util/RegionTracker.hh	/^    isIntersectRegion($/;"	f	struct:RegionPayloadTracker
isIntersectRegion	./src/c++/lib/blt_util/RegionTracker.hh	/^    isIntersectRegion($/;"	f	struct:RegionTracker
isIntersectRegionImpl	./src/c++/lib/blt_util/RegionTracker.cpp	/^isIntersectRegionImpl($/;"	f	class:RegionTracker
isIntersectRegionImpl	./src/c++/lib/blt_util/RegionTrackerImpl.hh	/^isIntersectRegionImpl($/;"	f	class:RegionPayloadTracker
isKeyPresent	./src/c++/lib/blt_util/RangeMap.hh	/^    isKeyPresent($/;"	f	struct:RangeMap
isKnownVariantMatch	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^isKnownVariantMatch($/;"	f	file:
isLeftEndOfSTR	./src/c++/lib/blt_common/ref_context.cpp	/^isLeftEndOfSTR($/;"	f
isMaxBufferedReads	./src/c++/lib/starling_common/starling_base_shared.hh	/^    isMaxBufferedReads() const$/;"	f	struct:starling_base_options
isNonStrictSupplement	./src/c++/lib/htsapi/bam_record.hh	/^    isNonStrictSupplement() const$/;"	f	struct:bam_record
isNoploid	./src/c++/lib/applications/starling/ploidyUtil.hh	/^    isNoploid() const$/;"	f	struct:SamplePloidyState
isOverlappingHomAltDeletion	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    bool isOverlappingHomAltDeletion = false;$/;"	m	struct:GermlineSiteSampleInfo
isPloidyConflict	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    isPloidyConflict() const$/;"	f	struct:LocusSampleInfo
isPoissonApprox	./src/c++/lib/starling_common/min_count_binom_gte_cache.cpp	/^isPoissonApprox($/;"	f	file:
isPrimitiveDeletionAllele	./src/c++/lib/starling_common/IndelKey.hh	/^    isPrimitiveDeletionAllele() const$/;"	f	struct:IndelKey
isPrimitiveInsertionAllele	./src/c++/lib/starling_common/IndelKey.hh	/^    isPrimitiveInsertionAllele() const$/;"	f	struct:IndelKey
isPseudo	./src/c++/lib/assembly/AssemblyReadInfo.hh	/^    bool isPseudo = false; \/\/\/< if true, the read was an assembled contig$/;"	m	struct:AssemblyReadInfo
isQual	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    isQual() const$/;"	f	struct:GermlineSiteLocusInfo
isRNA	./src/c++/lib/applications/starling/starling_shared.hh	/^    bool isRNA = false;$/;"	m	struct:starling_options
isRate	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^        isRate() const$/;"	f	struct:IndelErrorRateSet::IndelErrorRates
isRefUnknown	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    isRefUnknown() const$/;"	f	struct:GermlineSiteLocusInfo
isRejectNull	./src/c++/lib/starling_common/min_count_binom_gte_cache.cpp	/^isRejectNull($/;"	f	class:min_count_binom_gte_cache
isRepeatUnit	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    isRepeatUnit() const$/;"	f	struct:AlleleReportInfo
isReportEVSFeatures	./src/c++/lib/blt_common/blt_shared.hh	/^    bool isReportEVSFeatures = false;$/;"	m	struct:blt_options
isRequireEdgeDeletion	./src/c++/lib/alignment/AlignmentScores.hh	/^    const bool isRequireEdgeDeletion; \/\/\/< requires that any remaining reference sequence at the edge is counted as a deletion$/;"	m	struct:AlignmentScores
isRetainOptimalSoftClipping	./src/c++/lib/starling_common/starling_base_shared.hh	/^    bool isRetainOptimalSoftClipping = false;$/;"	m	struct:starling_base_options
isSASplit	./src/c++/lib/htsapi/bam_record.hh	/^    isSASplit() const$/;"	f	struct:bam_record
isSaneVal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^isSaneVal(const double val)$/;"	f	namespace:__anon20
isSimpleVariantLocus	./src/c++/lib/htsapi/vcf_record.hh	/^    isSimpleVariantLocus() const$/;"	f	struct:vcf_record
isSpliced	./src/c++/lib/starling_common/starling_read.hh	/^    isSpliced() const$/;"	f	struct:starling_read
isSubsetOfRegion	./src/c++/lib/blt_util/RegionTracker.hh	/^    isSubsetOfRegion($/;"	f	struct:RegionPayloadTracker
isSubsetOfRegion	./src/c++/lib/blt_util/RegionTracker.hh	/^    isSubsetOfRegion($/;"	f	struct:RegionTracker
isSubsetOfRegionImpl	./src/c++/lib/blt_util/RegionTracker.cpp	/^isSubsetOfRegionImpl($/;"	f	class:RegionTracker
isSubsetOfRegionImpl	./src/c++/lib/blt_util/RegionTrackerImpl.hh	/^isSubsetOfRegionImpl($/;"	f	class:RegionPayloadTracker
isUnknown	./src/c++/lib/htsapi/vcf_util.hh	/^    isUnknown() const$/;"	f	struct:VcfGenotype
isUseCallRegions	./src/c++/lib/starling_common/starling_base_shared.hh	/^    isUseCallRegions() const$/;"	f	struct:starling_base_options
isUseSomaticIndelScoring	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    isUseSomaticIndelScoring() const$/;"	f	struct:strelka_options
isUseSomaticSNVScoring	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    isUseSomaticSNVScoring() const$/;"	f	struct:strelka_options
isUseVariantPhaser	./src/c++/lib/applications/starling/starling_shared.hh	/^    bool isUseVariantPhaser = false;$/;"	m	struct:starling_options
isUsed	./src/c++/lib/assembly/AssemblyReadInfo.hh	/^    bool isUsed = false;$/;"	m	struct:AssemblyReadInfo
isUsedReadCoverage	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    isUsedReadCoverage() const$/;"	f	struct:GermlineSiteSampleInfo
isValidErrorRate	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^isValidErrorRate($/;"	f	class:IndelModelProduction
isValidNonsomaticIndex	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.cpp	/^isValidNonsomaticIndex($/;"	f	file:
isVariant	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    isVariant() const$/;"	f	struct:LocusSampleInfo
isVariant	./src/c++/lib/htsapi/vcf_util.hh	/^    isVariant() const$/;"	f	struct:VcfGenotype
isVariantLocus	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    isVariantLocus() const$/;"	f	struct:LocusInfo
is_active_region_detector_enabled	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    bool is_active_region_detector_enabled()$/;"	f	struct:starling_pos_processor_base
is_alignment_spanned_by_range	./src/c++/lib/starling_common/starling_read_align.cpp	/^is_alignment_spanned_by_range(const known_pos_range pr,$/;"	f	file:
is_all_sites	./src/c++/lib/starling_common/starling_base_shared.hh	/^    is_all_sites() const$/;"	f	struct:starling_base_options
is_any_nonovermax	./src/c++/lib/starling_common/starling_read_segment.cpp	/^is_any_nonovermax(const unsigned max_indel_size) const$/;"	f	class:read_segment
is_apath_floating	./src/c++/lib/blt_util/align_path.cpp	/^is_apath_floating(const path_t& apath)$/;"	f	namespace:ALIGNPATH
is_apath_invalid	./src/c++/lib/blt_util/align_path.hh	/^is_apath_invalid(const path_t& apath,$/;"	f	namespace:ALIGNPATH
is_apath_starling_invalid	./src/c++/lib/blt_util/align_path.cpp	/^is_apath_starling_invalid(const path_t& apath)$/;"	f	namespace:ALIGNPATH
is_begin_pos	./src/c++/lib/blt_util/pos_range.hh	/^    bool is_begin_pos;$/;"	m	struct:pos_range
is_block_compression	./src/c++/lib/applications/starling/gvcf_options.hh	/^    bool is_block_compression = true;$/;"	m	struct:gvcf_options
is_breakpoint	./src/c++/lib/starling_common/IndelKey.hh	/^    is_breakpoint() const$/;"	f	struct:IndelKey
is_bsnp_diploid	./src/c++/lib/blt_common/blt_shared.hh	/^    is_bsnp_diploid() const$/;"	f	struct:blt_options
is_bsnp_diploid_het_bias	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_bsnp_diploid_het_bias = false;$/;"	m	struct:blt_options
is_bsnp_nploid	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_bsnp_nploid = false;$/;"	m	struct:blt_options
is_call_filter	./src/c++/lib/blt_common/snp_pos_info.hh	/^    uint16_t is_call_filter:1; \/\/ filtered from snp-calling$/;"	m	struct:base_call
is_candidate_indel	./src/c++/lib/starling_common/IndelData.hh	/^        bool is_candidate_indel = false;$/;"	m	struct:IndelData::status_t
is_candidate_indel_cached	./src/c++/lib/starling_common/IndelData.hh	/^        bool is_candidate_indel_cached = false;$/;"	m	struct:IndelData::status_t
is_candidate_indel_signal_test	./src/c++/lib/starling_common/starling_base_shared.hh	/^    bool is_candidate_indel_signal_test = true;$/;"	m	struct:starling_base_options
is_chi_sqr_reject	./src/c++/lib/blt_util/stat_util.cpp	/^is_chi_sqr_reject($/;"	f
is_chimeric	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_chimeric() const$/;"	f	struct:bam_record
is_clip_ambiguous_path	./src/c++/lib/starling_common/starling_base_shared.hh	/^    bool is_clip_ambiguous_path = true;$/;"	m	struct:starling_base_options
is_clipped	./src/c++/lib/blt_util/align_path.cpp	/^is_clipped(const path_t& apath)$/;"	f	namespace:ALIGNPATH
is_clipped_front	./src/c++/lib/blt_util/align_path.cpp	/^is_clipped_front(const path_t& apath)$/;"	f	namespace:ALIGNPATH
is_complete	./src/c++/lib/blt_util/pos_range.hh	/^    is_complete() const$/;"	f	struct:pos_range
is_compute_germline_scoring_metrics	./src/c++/lib/blt_common/blt_shared.hh	/^    is_compute_germline_scoring_metrics() const$/;"	f	struct:blt_options
is_compute_somatic_scoring_metrics	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_compute_somatic_scoring_metrics = false;$/;"	m	struct:blt_options
is_dependent_eprob	./src/c++/lib/blt_common/blt_shared.hh	/^    is_dependent_eprob() const$/;"	f	struct:blt_options
is_depth_filter	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    is_depth_filter() const$/;"	f	struct:SequenceErrorCountsOptions
is_depth_filter	./src/c++/lib/applications/starling/gvcf_options.hh	/^    is_depth_filter() const$/;"	f	struct:gvcf_options
is_depth_filter	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    is_depth_filter() const$/;"	f	struct:somatic_filter_options
is_dup	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_dup() const$/;"	f	struct:bam_record
is_edge_readref_len_segment	./src/c++/lib/blt_util/align_path.cpp	/^is_edge_readref_len_segment(const path_t& apath)$/;"	f	namespace:ALIGNPATH
is_empty	./src/c++/lib/blt_util/pos_range.hh	/^    is_empty() const$/;"	f	struct:pos_range
is_end_pos	./src/c++/lib/blt_util/pos_range.hh	/^    bool is_end_pos;$/;"	m	struct:pos_range
is_equiv_candidate	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^is_equiv_candidate($/;"	f	file:
is_estimated_depth_range_ge_than	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^is_estimated_depth_range_ge_than($/;"	f	class:starling_pos_processor_base
is_exact_cov	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    bool is_exact_cov = false;$/;"	m	struct:starling_site_sim_options
is_external_candidate	./src/c++/lib/starling_common/IndelData.hh	/^    bool is_external_candidate = false; \/\/\/< if true, the allele is automatically promoted to candidate status$/;"	m	struct:IndelObservationData
is_external_candidate	./src/c++/lib/starling_common/IndelData.hh	/^    bool is_external_candidate = false;$/;"	m	struct:IndelData
is_filter	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_filter() const$/;"	f	struct:bam_record
is_first	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_first() const$/;"	f	struct:bam_record
is_first_indel_dominant	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^is_first_indel_dominant($/;"	f	file:
is_first_pos_set	./src/c++/lib/blt_util/stage_manager.hh	/^    is_first_pos_set() const$/;"	f	struct:stage_manager
is_forced_output	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    bool is_forced_output = false;$/;"	m	struct:somatic_indel_call
is_forced_output	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    bool is_forced_output = false;$/;"	m	struct:somatic_snv_genotype_grid
is_forced_output	./src/c++/lib/starling_common/IndelData.hh	/^    bool is_forced_output = false; \/\/\/< if true, the allele must be scored in output$/;"	m	struct:IndelObservationData
is_forced_output_pos	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    is_forced_output_pos(const pos_t pos) const$/;"	f	struct:starling_pos_processor_base
is_fwd_strand	./src/c++/lib/blt_common/snp_pos_info.hh	/^    uint16_t is_fwd_strand:1;$/;"	m	struct:base_call
is_fwd_strand	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_fwd_strand() const$/;"	f	struct:bam_record
is_fwd_strand	./src/c++/lib/starling_common/IndelData.hh	/^    bool is_fwd_strand;$/;"	m	struct:ReadPathScores
is_fwd_strand	./src/c++/lib/starling_common/alignment.hh	/^    bool is_fwd_strand = true;$/;"	m	struct:alignment
is_fwd_strand	./src/c++/lib/starling_common/starling_read.hh	/^    is_fwd_strand() const$/;"	f	struct:starling_read
is_gqx	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    is_gqx(const unsigned sampleIndex) const$/;"	f	struct:GermlineSiteLocusInfo
is_gvcf_output	./src/c++/lib/applications/starling/gvcf_options.hh	/^    is_gvcf_output() const$/;"	f	struct:gvcf_options
is_hap_match	./src/c++/lib/blt_common/hapscore.cpp	/^is_hap_match($/;"	f	file:
is_haploid	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    is_haploid() const$/;"	f	struct:diploid_genotype
is_het	./src/c++/lib/blt_util/digt.hh	/^is_het(const unsigned idx)$/;"	f	namespace:DIGT
is_het_only	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    bool is_het_only = false;$/;"	m	struct:starling_site_sim_options
is_in_range	./src/c++/lib/htsapi/bam_seq.hh	/^    is_in_range(const pos_t i) const$/;"	f	struct:bam_seq_base
is_include_anomalous	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_include_anomalous = false;$/;"	m	struct:blt_options
is_include_singleton	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_include_singleton = false;$/;"	m	struct:blt_options
is_indel	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    is_indel() const$/;"	f	struct:somatic_indel_call
is_indel	./src/c++/lib/htsapi/vcf_record.hh	/^    is_indel() const$/;"	f	struct:vcf_record
is_indel_conflict	./src/c++/lib/starling_common/indel_util.cpp	/^is_indel_conflict($/;"	f
is_int_code	./src/c++/lib/htsapi/bam_record.hh	/^    is_int_code(char c)$/;"	f	struct:bam_record
is_intersect_window	./src/c++/lib/blt_util/known_pos_range2.hh	/^is_intersect_window($/;"	f
is_invalid_realignment	./src/c++/lib/starling_common/starling_read_segment.hh	/^    bool is_invalid_realignment;$/;"	m	struct:read_segment
is_iupac_base	./src/c++/lib/blt_util/seq_util.hh	/^is_iupac_base(char a)$/;"	f
is_low_map_quality	./src/c++/lib/starling_common/IndelData.hh	/^    bool is_low_map_quality = false;$/;"	m	struct:IndelObservationData
is_lrt_reject_null	./src/c++/lib/blt_util/stat_util.cpp	/^is_lrt_reject_null($/;"	f
is_lsnp	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_lsnp = false;$/;"	m	struct:blt_options
is_mate_fwd_strand	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_mate_fwd_strand() const$/;"	f	struct:bam_record
is_mate_unmapped	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_mate_unmapped() const$/;"	f	struct:bam_record
is_max_base_filt	./src/c++/lib/applications/starling/gvcf_options.hh	/^    bool is_max_base_filt = true;$/;"	m	struct:gvcf_options
is_max_depth	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    is_max_depth() const$/;"	f	struct:SequenceErrorCountsDerivOptions
is_max_depth	./src/c++/lib/applications/starling/gvcf_options.hh	/^    is_max_depth() const$/;"	f	struct:gvcf_deriv_options
is_max_depth	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    is_max_depth() const$/;"	f	struct:somatic_filter_deriv_options
is_max_input_depth	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_max_input_depth = false;$/;"	m	struct:blt_options
is_max_ref_rep	./src/c++/lib/applications/starling/gvcf_options.hh	/^    is_max_ref_rep() const$/;"	f	struct:gvcf_options
is_max_snv_hpol	./src/c++/lib/applications/starling/gvcf_options.hh	/^    bool is_max_snv_hpol = true;$/;"	m	struct:gvcf_options
is_max_snv_sb	./src/c++/lib/applications/starling/gvcf_options.hh	/^    bool is_max_snv_sb = true;$/;"	m	struct:gvcf_options
is_max_win_mismatch	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_max_win_mismatch = false;$/;"	m	struct:blt_options
is_min_gqx	./src/c++/lib/applications/starling/gvcf_options.hh	/^    bool is_min_gqx = true;$/;"	m	struct:gvcf_options
is_min_homref_gqx	./src/c++/lib/applications/starling/gvcf_options.hh	/^    bool is_min_homref_gqx = true;$/;"	m	struct:gvcf_options
is_min_vexp	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_min_vexp = false;$/;"	m	struct:blt_options
is_mismatch	./src/c++/lib/starling_common/read_mismatch_info.hh	/^    bool is_mismatch;$/;"	m	struct:read_base_mismatch_info
is_multi_indel_allele	./src/c++/lib/applications/strelka/somatic_indel_grid.cpp	/^is_multi_indel_allele($/;"	f	file:
is_n_ref_warn	./src/c++/lib/blt_common/snp_pos_info.hh	/^    bool is_n_ref_warn;$/;"	m	struct:snp_pos_info
is_neighbor_mismatch	./src/c++/lib/blt_common/snp_pos_info.hh	/^    uint16_t is_neighbor_mismatch:1;$/;"	m	struct:base_call
is_new_pos_value_valid	./src/c++/lib/blt_util/stage_manager.cpp	/^is_new_pos_value_valid(const pos_t pos,$/;"	f	class:stage_manager
is_new_value_blockable	./src/c++/lib/applications/starling/gvcf_block_site_record.cpp	/^is_new_value_blockable(const int new_val,$/;"	f	file:
is_noise	./src/c++/lib/starling_common/IndelData.hh	/^    bool is_noise = false;$/;"	m	struct:IndelObservationData
is_nonsom	./src/c++/lib/applications/strelka/strelka_digt_states.cpp	/^const is_nonsom_maker_t is_nonsom;$/;"	m	namespace:DDIGT_GRID	file:
is_nonsom_maker_t	./src/c++/lib/applications/strelka/strelka_digt_states.cpp	/^is_nonsom_maker_t()$/;"	f	class:DDIGT_GRID::is_nonsom_maker_t
is_nonsom_maker_t	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^struct is_nonsom_maker_t$/;"	s	namespace:DDIGT_GRID
is_noploid	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    is_noploid() const$/;"	f	struct:diploid_genotype
is_normalized	./src/c++/lib/htsapi/vcf_record.cpp	/^is_normalized() const$/;"	f	class:vcf_record
is_output	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    is_output() const$/;"	f	struct:somatic_indel_call
is_output	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    is_output() const$/;"	f	struct:somatic_snv_genotype_grid
is_overlap	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    bool is_overlap = false;$/;"	m	struct:indel_result_set
is_overmax	./src/c++/lib/starling_common/alignment.cpp	/^is_overmax(const unsigned max_indel_size) const$/;"	f	class:alignment
is_paired	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_paired() const$/;"	f	struct:bam_record
is_ploidy_prior	./src/c++/lib/starling_common/starling_base_shared.hh	/^    bool is_ploidy_prior = true;$/;"	m	struct:starling_base_options
is_pos_intersect	./src/c++/lib/blt_util/known_pos_range2.hh	/^    is_pos_intersect(const pos_t pos) const$/;"	f	struct:known_pos_range2
is_pos_intersect	./src/c++/lib/blt_util/pos_range.hh	/^    is_pos_intersect(const pos_t pos) const$/;"	f	struct:pos_range
is_pos_preceding_reportable_range	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    is_pos_preceding_reportable_range(const pos_t pos) const$/;"	f	struct:starling_pos_processor_base
is_pos_reportable	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    is_pos_reportable(const pos_t pos) const$/;"	f	struct:starling_pos_processor_base
is_present	./src/c++/lib/starling_common/starling_read_align.cpp	/^    bool is_present = false; \/\/\/< candidate indel is present in the alignment already$/;"	m	struct:starling_align_indel_info	file:
is_print_all_site_evidence	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_print_all_site_evidence = false;$/;"	m	struct:blt_options
is_print_evidence	./src/c++/lib/blt_common/blt_shared.hh	/^    bool is_print_evidence = false;$/;"	m	struct:blt_options
is_proper_pair	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_proper_pair() const$/;"	f	struct:bam_record
is_range_adjacent_indel_breakpoints	./src/c++/lib/starling_common/indel_util.cpp	/^is_range_adjacent_indel_breakpoints($/;"	f
is_range_compressible	./src/c++/lib/applications/starling/gvcf_compressor.cpp	/^is_range_compressible($/;"	f	class:gvcf_compressor
is_range_ge_than	./src/c++/lib/blt_util/depth_buffer.hh	/^    is_range_ge_than(const pos_t begin,$/;"	f	struct:depth_buffer
is_range_intersect	./src/c++/lib/blt_util/known_pos_range2.hh	/^    is_range_intersect(const known_pos_range2& pr) const$/;"	f	struct:known_pos_range2
is_range_intersect	./src/c++/lib/blt_util/pos_range.hh	/^    is_range_intersect(const pos_range& pr) const$/;"	f	struct:pos_range
is_range_intersect_indel_breakpoints	./src/c++/lib/starling_common/indel_util.cpp	/^is_range_intersect_indel_breakpoints($/;"	f
is_realign_submapped_reads	./src/c++/lib/starling_common/starling_base_shared.hh	/^    bool is_realign_submapped_reads = false;$/;"	m	struct:starling_base_options
is_realignable	./src/c++/lib/starling_common/alignment.hh	/^    is_realignable(const unsigned max_indel_size) const$/;"	f	struct:alignment
is_realigned	./src/c++/lib/starling_common/starling_read_segment.hh	/^    bool is_realigned;$/;"	m	struct:read_segment
is_realigned_read_file	./src/c++/lib/starling_common/starling_base_shared.hh	/^    is_realigned_read_file() const$/;"	f	struct:starling_base_options
is_ref_set	./src/c++/lib/blt_common/snp_pos_info.hh	/^    is_ref_set() const$/;"	f	struct:snp_pos_info
is_ref_site	./src/c++/lib/htsapi/vcf_record.hh	/^    is_ref_site() const$/;"	f	struct:vcf_record
is_reject_binomial_gte_n_success_exact	./src/c++/lib/blt_util/binomial_test.cpp	/^is_reject_binomial_gte_n_success_exact($/;"	f
is_reject_binomial_twosided	./src/c++/lib/blt_util/binomial_test.cpp	/^is_reject_binomial_twosided($/;"	f
is_reject_binomial_twosided_chi_sqr	./src/c++/lib/blt_util/binomial_test.cpp	/^is_reject_binomial_twosided_chi_sqr($/;"	f
is_reject_binomial_twosided_exact	./src/c++/lib/blt_util/binomial_test.cpp	/^is_reject_binomial_twosided_exact($/;"	f
is_reject_table_chi_sqr	./src/c++/lib/blt_util/table_test.cpp	/^is_reject_table_chi_sqr(const double alpha,$/;"	f
is_reject_table_exact	./src/c++/lib/blt_util/table_test.cpp	/^is_reject_table_exact(const double alpha,$/;"	f
is_remove_only	./src/c++/lib/starling_common/starling_read_align.cpp	/^    bool is_remove_only = false; \/\/\/< candidate indel can be toggled off during search but not added$/;"	m	struct:starling_align_indel_info	file:
is_save_pileup_buffer	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    is_save_pileup_buffer()$/;"	f	struct:starling_pos_processor_base
is_second	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_second() const$/;"	f	struct:bam_record
is_secondary	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_secondary() const$/;"	f	struct:bam_record
is_segment_align_match	./src/c++/lib/blt_util/align_path.hh	/^is_segment_align_match(const align_t id)$/;"	f	namespace:ALIGNPATH
is_segment_swap_start	./src/c++/lib/blt_util/align_path.cpp	/^is_segment_swap_start($/;"	f	namespace:ALIGNPATH
is_segment_type_indel	./src/c++/lib/blt_util/align_path.hh	/^is_segment_type_indel(const align_t id)$/;"	f	namespace:ALIGNPATH
is_segment_type_read_length	./src/c++/lib/blt_util/align_path.hh	/^is_segment_type_read_length(const align_t id)$/;"	f	namespace:ALIGNPATH
is_segment_type_ref_length	./src/c++/lib/blt_util/align_path.hh	/^is_segment_type_ref_length(const align_t id)$/;"	f	namespace:ALIGNPATH
is_segment_type_unaligned_read_edge	./src/c++/lib/blt_util/align_path.cpp	/^is_segment_type_unaligned_read_edge(const align_t id)$/;"	f	namespace:ALIGNPATH
is_seq_swap	./src/c++/lib/blt_util/align_path.cpp	/^is_seq_swap(const path_t& apath)$/;"	f	namespace:ALIGNPATH
is_seq_swap	./src/c++/lib/starling_common/alignment.hh	/^    is_seq_swap() const$/;"	f	struct:alignment
is_short_haplotyping_enabled	./src/c++/lib/starling_common/starling_base_shared.hh	/^    bool is_short_haplotyping_enabled = false;$/;"	m	struct:starling_base_options
is_site_compressible	./src/c++/lib/applications/starling/gvcf_compressor.cpp	/^is_site_compressible($/;"	f	class:gvcf_compressor
is_skip_header	./src/c++/lib/applications/starling/gvcf_options.hh	/^    bool is_skip_header = false;$/;"	m	struct:gvcf_options
is_skip_header	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    bool is_skip_header = false;$/;"	m	struct:somatic_filter_options
is_skip_header	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_shared.hh	/^    bool is_skip_header = false;$/;"	m	struct:snoise_options
is_smoothed_alignments	./src/c++/lib/starling_common/starling_base_shared.hh	/^    bool is_smoothed_alignments = true;$/;"	m	struct:starling_base_options
is_snp	./src/c++/lib/blt_common/nonref_test_call.hh	/^    bool is_snp;$/;"	m	struct:nonref_test_call
is_snp	./src/c++/lib/blt_common/position_snp_call_lrt.hh	/^    bool is_snp;$/;"	m	struct:lrt_snp_call
is_snp	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    bool is_snp() const$/;"	f	struct:diploid_genotype
is_snp	./src/c++/lib/blt_common/position_snp_call_pprob_monogt.hh	/^    bool is_snp;$/;"	m	struct:monoploid_genotype
is_snp	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.hh	/^    bool is_snp;$/;"	m	struct:nploid_genotype
is_snv	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    is_snv() const$/;"	f	struct:somatic_snv_genotype_grid
is_snv	./src/c++/lib/htsapi/vcf_record.hh	/^    is_snv() const$/;"	f	struct:vcf_record
is_soft_clipped	./src/c++/lib/blt_util/align_path.cpp	/^is_soft_clipped(const path_t& apath)$/;"	f	namespace:ALIGNPATH
is_somatic_callable	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    is_somatic_callable() const$/;"	f	struct:strelka_options
is_somatic_gvcf	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    bool is_somatic_gvcf;$/;"	m	struct:strelka_site_sim_options
is_somatic_indel	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    bool is_somatic_indel() const$/;"	f	struct:strelka_options
is_somatic_snv	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    bool is_somatic_snv() const$/;"	f	struct:strelka_options
is_spi_allref	./src/c++/lib/blt_common/snp_util.hh	/^is_spi_allref(const snp_pos_info& pi,$/;"	f
is_superset_of	./src/c++/lib/blt_util/known_pos_range2.hh	/^    is_superset_of(const known_pos_range2& pr) const$/;"	f	struct:known_pos_range2
is_superset_of	./src/c++/lib/blt_util/pos_range.hh	/^    is_superset_of(const pos_range& pr) const$/;"	f	struct:pos_range
is_supplement	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_supplement() const$/;"	f	struct:bam_record
is_tier1_mapping	./src/c++/lib/starling_common/starling_read.cpp	/^is_tier1_mapping() const$/;"	f	class:starling_read
is_tier1_mapping	./src/c++/lib/starling_common/starling_read_segment.cpp	/^is_tier1_mapping() const$/;"	f	class:read_segment
is_tier1_read	./src/c++/lib/starling_common/IndelData.hh	/^    bool is_tier1_read;$/;"	m	struct:ReadPathScores
is_tier1or2_mapping	./src/c++/lib/starling_common/starling_read.cpp	/^is_tier1or2_mapping() const$/;"	f	class:starling_read
is_tier1or2_mapping	./src/c++/lib/starling_common/starling_read_segment.cpp	/^is_tier1or2_mapping() const$/;"	f	class:read_segment
is_tier2	./src/c++/lib/starling_common/Tier2Options.hh	/^    is_tier2() const$/;"	f	struct:Tier2Options
is_tier2_include_anomalous	./src/c++/lib/starling_common/Tier2Options.hh	/^    bool is_tier2_include_anomalous = false;$/;"	m	struct:Tier2Options
is_tier2_include_singleton	./src/c++/lib/starling_common/Tier2Options.hh	/^    bool is_tier2_include_singleton = false;$/;"	m	struct:Tier2Options
is_tier2_indel_nonsite_match_prob	./src/c++/lib/starling_common/Tier2Options.hh	/^    bool is_tier2_indel_nonsite_match_prob = false;$/;"	m	struct:Tier2Options
is_tier2_min_mapping_quality	./src/c++/lib/starling_common/Tier2Options.hh	/^    bool is_tier2_min_mapping_quality = false;$/;"	m	struct:Tier2Options
is_tier2_mismatch_density_filter_count	./src/c++/lib/starling_common/Tier2Options.hh	/^    bool is_tier2_mismatch_density_filter_count = false;$/;"	m	struct:Tier2Options
is_tier2_no_mismatch_density_filter	./src/c++/lib/starling_common/Tier2Options.hh	/^    bool is_tier2_no_mismatch_density_filter = false;$/;"	m	struct:Tier2Options
is_tier_specific_call_filter	./src/c++/lib/blt_common/snp_pos_info.hh	/^    uint16_t is_tier_specific_call_filter:1;$/;"	m	struct:base_call
is_totaled	./src/c++/lib/starling_common/starling_read_util.cpp	/^    bool is_totaled;$/;"	m	struct:__anon12::ddata	file:
is_tumor_realigned_read	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    bool is_tumor_realigned_read() const$/;"	f	struct:strelka_options
is_unmapped	./src/c++/lib/htsapi/bam_record.hh	/^    bool is_unmapped() const$/;"	f	struct:bam_record
is_usable_indel	./src/c++/lib/starling_common/starling_read_align.cpp	/^is_usable_indel($/;"	f	file:
is_usable_read_mapping	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^is_usable_read_mapping(const starling_base_options& opt,$/;"	f	file:
is_user_genome_size	./src/c++/lib/starling_common/starling_base_shared.hh	/^    bool is_user_genome_size = false;$/;"	m	struct:starling_base_options
is_valid	./src/c++/lib/htsapi/bed_record.hh	/^    is_valid() const$/;"	f	struct:bed_record
is_valid	./src/c++/lib/starling_common/starling_read_segment.cpp	/^is_valid() const$/;"	f	class:read_segment
is_valid_bam_code	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^is_valid_bam_code(const uint8_t a)$/;"	f	file:
is_valid_bam_seq	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^is_valid_bam_seq(const bam_seq& bs)$/;"	f	file:
is_valid_base	./src/c++/lib/blt_util/seq_util.hh	/^is_valid_base(char a)$/;"	f
is_valid_seq	./src/c++/lib/blt_util/seq_util.cpp	/^is_valid_seq(const char* seq)$/;"	f
is_valid_xrange	./src/c++/lib/blt_common/blt_arg_parse_util.cpp	/^is_valid_xrange(const double val,$/;"	f	file:
is_write_observations	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    bool is_write_observations() const$/;"	f	struct:SequenceErrorCountsOptions
isatty	./src/c++/lib/blt_util/compat_unistd.h	33;"	d
issue_t	./src/c++/lib/blt_util/align_path.hh	/^enum issue_t$/;"	g	namespace:ALIGNPATH::ALIGN_ISSUE
istream_line_splitter	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    istream_line_splitter(std::istream& is,$/;"	f	struct:istream_line_splitter
istream_line_splitter	./src/c++/lib/blt_util/istream_line_splitter.hh	/^struct istream_line_splitter$/;"	s
it	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    SimplifiedIndelReportType::index_t it = SimplifiedIndelReportType::OTHER;$/;"	m	struct:AlleleReportInfo
iter	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.hh	/^    iter($/;"	f	struct:OrthogonalVariantAlleleCandidateGroup
iterMap	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^iterMap($/;"	f	file:
iterMap	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^iterMap($/;"	f	file:
iterator	./src/c++/lib/blt_util/basic_matrix.hh	/^    typedef typename data_t::iterator iterator;$/;"	t	struct:basic_matrix
iterator	./src/c++/lib/starling_common/IndelBuffer.hh	/^    typedef indel_buffer_data_t::iterator iterator;$/;"	t	struct:IndelBuffer
joinSiteToSampleBlock	./src/c++/lib/applications/starling/gvcf_block_site_record.cpp	/^joinSiteToSampleBlock($/;"	f	class:gvcf_block_site_record
k2id_t	./src/c++/lib/blt_util/id_map.hh	/^    typedef std::map<K,unsigned,COMPARE> k2id_t;$/;"	t	struct:id_map
k2id_t	./src/c++/lib/blt_util/id_map.hh	/^    typedef std::map<K,unsigned,COMPARE> k2id_t;$/;"	t	struct:id_set
k_	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    unsigned k_;$/;"	m	struct:depth_stream_stat
k_	./src/c++/lib/blt_util/stream_stat.hh	/^    unsigned k_;$/;"	m	struct:stream_stat
key	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.hh	/^    key($/;"	f	struct:OrthogonalVariantAlleleCandidateGroup
key	./src/c++/lib/starling_common/indel.hh	/^    IndelKey key;$/;"	m	struct:IndelObservation
key	./src/c++/lib/starling_common/indel.hh	/^    IndelKey key;$/;"	m	struct:indel
key	./src/c++/lib/starling_common/starling_read.hh	/^    key() const$/;"	f	struct:starling_read
key	./src/c++/lib/starling_common/starling_read_segment.cpp	/^key() const$/;"	f	class:read_segment
kinit	./src/c++/lib/htsapi/hts_streamer.cpp	/^static const kstring_t kinit = {0,0,0};$/;"	v	file:
knownCount	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^    unsigned knownCount;$/;"	m	struct:scan_result	file:
knownVariantsFile	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    std::string knownVariantsFile;$/;"	m	struct:SequenceErrorCountsOptions
known_pos_range	./src/c++/lib/blt_util/pos_range.hh	/^    known_pos_range(const pos_t bp,const pos_t ep) : pos_range(bp,ep) {}$/;"	f	struct:known_pos_range
known_pos_range	./src/c++/lib/blt_util/pos_range.hh	/^struct known_pos_range : public pos_range$/;"	s
known_pos_range2	./src/c++/lib/blt_util/known_pos_range2.hh	/^    known_pos_range2($/;"	f	struct:known_pos_range2
known_pos_range2	./src/c++/lib/blt_util/known_pos_range2.hh	/^    known_pos_range2() :$/;"	f	struct:known_pos_range2
known_pos_range2	./src/c++/lib/blt_util/known_pos_range2.hh	/^struct known_pos_range2$/;"	s
label	./src/c++/lib/alignment/Alignment.hh	/^    label(const index_t i)$/;"	f	struct:AlignState
label	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^label(const index_t i)$/;"	f	namespace:MODEL_TYPE
label	./src/c++/lib/applications/strelka/somatic_call_shared.hh	/^label(const unsigned idx)$/;"	f	namespace:NTYPE
label	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^label(const unsigned idx)$/;"	f	namespace:SOMATIC_DIGT
label	./src/c++/lib/blt_common/position_nonref_2allele_test.hh	/^label(const index_t i)$/;"	f	namespace:NR2TEST
label	./src/c++/lib/blt_common/position_nonref_test.hh	/^label(const index_t i)$/;"	f	namespace:NRTEST
label	./src/c++/lib/blt_util/RecordTracker.hh	/^label($/;"	f	namespace:GENOTYPE_STATUS
label	./src/c++/lib/blt_util/digt.hh	/^label(const unsigned idx)$/;"	f	namespace:DIGT
label	./src/c++/lib/blt_util/monogt.hh	/^label(const unsigned idx)$/;"	f	namespace:MONOGT
label	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^        std::string label;$/;"	m	struct:nploid_info::gtype_info
label	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    label(const unsigned gt_index) const$/;"	f	struct:nploid_info
label	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^label($/;"	f	namespace:INDEL_SIGNAL_TYPE
label	./src/c++/lib/htsapi/bam_header_info.hh	/^        std::string label;$/;"	m	struct:bam_header_info::chrom_info
label	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^label(const index_t i)$/;"	f	namespace:HTS_TYPE
label	./src/c++/lib/starling_common/indel_align_type.hh	/^label(const index_t i)$/;"	f	namespace:INDEL_ALIGN_TYPE
label	./src/c++/lib/starling_common/starling_diploid_indel.hh	/^label(const unsigned idx)$/;"	f	namespace:STAR_DIINDEL
label	./src/c++/lib/starling_common/starling_read_filter_shared.hh	/^label(const index_t id)$/;"	f	namespace:READ_FILTER_TYPE
large_ref_deletion	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned large_ref_deletion = 0;$/;"	m	struct:blt_read_counts
late_indel_normalization_filter	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^late_indel_normalization_filter($/;"	f	file:
leading_indel_key	./src/c++/lib/starling_common/CandidateAlignment.hh	/^    IndelKey leading_indel_key;$/;"	m	struct:CandidateAlignment
left	./src/c++/lib/calibration/RandomForestModel.hh	/^        L left;$/;"	m	struct:RandomForestModel::TreeNode
leftEdgeIndelCollapse	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^leftEdgeIndelCollapse($/;"	f	file:
leftShiftAlignmentIndels	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^leftShiftAlignmentIndels($/;"	f	file:
leftShiftIndel	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^leftShiftIndel($/;"	f	file:
legacyReportInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    AlleleSampleReportInfo legacyReportInfo;$/;"	m	struct:GermlineIndelSampleInfo
legacy_starling_arg_parse	./src/c++/lib/starling_common/starling_arg_parse.cpp	/^legacy_starling_arg_parse($/;"	f
length	./src/c++/lib/blt_util/align_path.hh	/^    unsigned length;$/;"	m	struct:ALIGNPATH::path_segment
length	./src/c++/lib/htsapi/bam_header_info.hh	/^        unsigned length;$/;"	m	struct:bam_header_info::chrom_info
lifeTime	./src/c++/lib/appstats/RunStats.hh	/^    CpuTimes lifeTime;$/;"	m	struct:RunStatsData
lifeTime	./src/c++/lib/appstats/RunStatsManager.hh	/^    TimeTracker lifeTime;$/;"	m	struct:RunStatsManager
line	./src/c++/lib/htsapi/bed_record.hh	/^    const char* line = nullptr;$/;"	m	struct:bed_record
line	./src/c++/lib/htsapi/vcf_record.hh	/^    const char* line = nullptr;$/;"	m	struct:vcf_record
linearFit	./src/c++/lib/calibration/IndelErrorModel.cpp	/^double AdaptiveIndelErrorModel::linearFit(const double x, const double x1, const double y1, const double x2, const double y2)$/;"	f	class:AdaptiveIndelErrorModel
linear_function	./src/c++/lib/blt_common/sparse_function_1d.cpp	/^    linear_function(blt_float_t x1,$/;"	f	struct:linear_function
linear_function	./src/c++/lib/blt_common/sparse_function_1d.cpp	/^struct linear_function$/;"	s	file:
ln_comp_error_prob	./src/c++/lib/blt_common/snp_pos_info.hh	/^    ln_comp_error_prob() const$/;"	f	struct:base_call
ln_error_prob	./src/c++/lib/blt_common/snp_pos_info.hh	/^    ln_error_prob() const$/;"	f	struct:base_call
ln_error_prob_to_phred	./src/c++/lib/blt_util/qscore.hh	/^ln_error_prob_to_phred(const FloatType lnProb)$/;"	f
ln_error_prob_to_qphred	./src/c++/lib/blt_util/qscore.hh	/^ln_error_prob_to_qphred(const FloatType lnProb)$/;"	f
lnprior_genomic	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    lnprior_genomic($/;"	f	struct:pprob_digt_caller
lnprior_polymorphic	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    lnprior_polymorphic($/;"	f	struct:pprob_digt_caller
load	./src/c++/lib/appstats/RunStats.cpp	/^load(const char* filename)$/;"	f	class:RunStats
load	./src/c++/lib/errorAnalysis/SequenceErrorCounts.cpp	/^load($/;"	f	class:SequenceErrorCounts
load_pi	./src/c++/lib/applications/strelka/strelka_pile_test_run.cpp	/^load_pi(const char ref_base,$/;"	f	file:
load_read_in_depth_buffer	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^load_read_in_depth_buffer(const read_segment& rseg,$/;"	f	class:starling_pos_processor_base
lock	./src/c++/lib/applications/starling/starling_run.cpp	/^    pthread_mutex_t *lock;$/;"	m	struct:workerData	file:
locus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModel1.cpp	/^    double locus = 0;$/;"	m	struct:__anon23::SignalGroupTotal	file:
locus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    double locus = 0;$/;"	m	struct:__anon20::SignalGroupTotal	file:
locus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    double locus = 0;$/;"	m	struct:__anon18::SignalGroupTotal	file:
locus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    double locus = 0;$/;"	m	struct:__anon26::SignalGroupTotal	file:
locus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    double locus = 0;$/;"	m	struct:__anon22::SignalGroupTotal	file:
locus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    double locus = 0;$/;"	m	struct:__anon21::SignalGroupTotal	file:
locus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModel1.cpp	/^    uint64_t locus = 0;$/;"	m	struct:__anon25::ContextTotal	file:
locus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    double locus = 0;$/;"	m	struct:__anon19::SignalGroupTotal	file:
locus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    double locus = 0;$/;"	m	struct:__anon24::SignalGroupTotal	file:
log1p_switch	./src/c++/lib/blt_util/math_util.hh	/^log1p_switch(const FloatType x)$/;"	f
logErrorRate	./src/c++/lib/calibration/IndelErrorModel.hh	/^    double logErrorRate = -std::numeric_limits<double>::infinity();$/;"	m	class:AdaptiveIndelErrorModelLogParams
logIndelRefErrorFactor	./src/c++/lib/starling_common/starling_base_shared.hh	/^    const double logIndelRefErrorFactor;$/;"	m	struct:starling_base_deriv_options
logNoisyLocusRate	./src/c++/lib/calibration/IndelErrorModel.hh	/^    double logNoisyLocusRate = -std::numeric_limits<double>::infinity();$/;"	m	class:AdaptiveIndelErrorModelLogParams
log_gt	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^log_gt(blt_float_t* const x)$/;"	f	file:
log_sum	./src/c++/lib/blt_util/math_util.hh	/^log_sum(FloatType x1, FloatType x2)$/;"	f
lowRepeatCount	./src/c++/lib/calibration/IndelErrorModel.cpp	/^unsigned AdaptiveIndelErrorModel::lowRepeatCount = 2;$/;"	m	class:AdaptiveIndelErrorModel	file:
lowRepeatCount	./src/c++/lib/calibration/IndelErrorModel.hh	/^    static unsigned lowRepeatCount; \/\/ it should be safe to fix this to 2$/;"	m	class:AdaptiveIndelErrorModel
lrt_snp_call	./src/c++/lib/blt_common/position_snp_call_lrt.hh	/^    lrt_snp_call()$/;"	f	struct:lrt_snp_call
lrt_snp_call	./src/c++/lib/blt_common/position_snp_call_lrt.hh	/^struct lrt_snp_call : private boost::noncopyable$/;"	s
lseek	./src/c++/lib/blt_util/compat_unistd.h	34;"	d
lsnp_alpha	./src/c++/lib/blt_common/blt_shared.hh	/^    double lsnp_alpha = 0;$/;"	m	struct:blt_options
main	./src/c++/bin/DumpSequenceErrorCounts.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/EstimateParametersFromErrorCounts.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/EstimateVariantErrorRates.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/GetChromDepth.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/GetSequenceErrorCounts.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/MergeRunStats.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/MergeSequenceErrorCounts.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/countFastaBases.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/starling2.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/starlingSiteSimulator.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/strelka2.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/strelkaNoiseExtractor.cpp	/^main(int argc, char* argv[])$/;"	f
main	./src/c++/bin/strelkaSiteSimulator.cpp	/^main(int argc, char* argv[])$/;"	f
makeNonNegative	./src/c++/lib/blt_util/known_pos_range2.hh	/^    makeNonNegative()$/;"	f	struct:known_pos_range2
makeSymmetric	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^makeSymmetric(const double inputRatio)$/;"	f	file:
make_fval	./src/c++/lib/blt_common/sample_range_impl.hh	/^make_fval(const blt_float_t x,$/;"	f
make_start_pos_alignment	./src/c++/lib/starling_common/starling_read_align.cpp	/^make_start_pos_alignment($/;"	f	file:
mapFindDefault	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^mapFindDefault($/;"	f	file:
mapVcfSampleIndices	./src/c++/lib/applications/starling/starling_run.cpp	/^mapVcfSampleIndices($/;"	f	file:
map_qual	./src/c++/lib/htsapi/bam_record.hh	/^    uint8_t map_qual() const$/;"	f	struct:bam_record
map_qual	./src/c++/lib/starling_common/starling_read.hh	/^    uint8_t map_qual() const$/;"	f	struct:starling_read
map_qual	./src/c++/lib/starling_common/starling_read_segment.cpp	/^map_qual() const$/;"	f	class:read_segment
map_t	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^    enum map_t$/;"	g	struct:__anon10::ref_map_type	file:
mappedq	./src/c++/lib/blt_util/qscore_cache.hh	/^    uint8_t mappedq[MAX_MAP+1][MAX_QSCORE+1];$/;"	m	struct:qphred_cache
mapqTracker	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    MapqTracker mapqTracker;$/;"	m	struct:GermlineIndelSampleInfo
mapqTracker	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    MapqTracker mapqTracker;$/;"	m	struct:GermlineSiteSampleInfo
mapqTracker	./src/c++/lib/blt_common/snp_pos_info.hh	/^    MapqTracker mapqTracker;$/;"	m	struct:snp_pos_info
mapqTracker	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    MapqTracker mapqTracker;$/;"	m	struct:AlleleSampleReportInfo
mapqZeroFraction	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        mapqZeroFraction,$/;"	e	enum:GERMLINE_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
mapqZeroFraction	./src/c++/lib/applications/starling/germlineVariantEmpiricalScoringFeatures.hh	/^        mapqZeroFraction,$/;"	e	enum:GERMLINE_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
mapqZeroFraction	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        mapqZeroFraction,$/;"	e	enum:RNA_INDEL_SCORING_DEVELOPMENT_FEATURES::index_t
mapqZeroFraction	./src/c++/lib/applications/starling/rnaVariantEmpiricalScoringFeatures.hh	/^        mapqZeroFraction,$/;"	e	enum:RNA_SNV_SCORING_DEVELOPMENT_FEATURES::index_t
mark_ref_map_conflicts	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^mark_ref_map_conflicts($/;"	f	file:
match	./src/c++/lib/alignment/AlignmentScores.hh	/^    const ScoreType match; \/\/\/< match score$/;"	m	struct:AlignmentScores
match	./src/c++/lib/alignment/GlobalAligner.hh	/^        ScoreType match;$/;"	m	struct:GlobalAligner::ScoreVal
match	./src/c++/lib/alignment/GlobalAligner.hh	/^        code_t match : 2;$/;"	m	struct:GlobalAligner::PtrVal
matchLen	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint8_t  matchLen;$/;"	m	struct:__anon7
matchify_edge_indels	./src/c++/lib/starling_common/alignment_util.cpp	/^matchify_edge_indels($/;"	f
matchify_edge_insertions	./src/c++/lib/starling_common/alignment_util.cpp	/^matchify_edge_insertions($/;"	f
matchify_edge_segment_type	./src/c++/lib/starling_common/alignment_util.cpp	/^matchify_edge_segment_type($/;"	f	file:
matchify_edge_soft_clip	./src/c++/lib/starling_common/alignment_util.cpp	/^matchify_edge_soft_clip($/;"	f
mate_pos	./src/c++/lib/htsapi/bam_record.hh	/^    int mate_pos() const$/;"	f	struct:bam_record
mate_target_id	./src/c++/lib/htsapi/bam_record.hh	/^    int mate_target_id() const$/;"	f	struct:bam_record
max	./src/c++/lib/alignment/AlignerUtil.hh	/^    ScoreType max = 0;$/;"	m	struct:BackTrace
max	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    double max() const$/;"	f	struct:depth_stream_stat
max	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    double max() const$/;"	f	struct:depth_stream_stat_range
max	./src/c++/lib/blt_util/stream_stat.hh	/^    double max() const$/;"	f	struct:stream_stat
max2_gt	./src/c++/lib/blt_common/position_snp_call_pprob_monogt.hh	/^    unsigned max2_gt;$/;"	m	struct:monoploid_genotype
max2_gt	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.hh	/^    unsigned max2_gt;$/;"	m	struct:nploid_genotype
max3	./src/c++/lib/alignment/AlignerBase.hh	/^    max3($/;"	f	struct:AlignerBase
maxAssemblyCount	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    unsigned maxAssemblyCount = 10;$/;"	m	struct:IterativeAssemblerOptions
maxAssemblyIterations	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    unsigned maxAssemblyIterations = 10;$/;"	m	struct:SmallAssemblerOptions
maxBufferedReads	./src/c++/lib/starling_common/starling_base_shared.hh	/^    unsigned maxBufferedReads = 100000;$/;"	m	struct:starling_base_options
maxChunkSize	./src/c++/lib/htsapi/bam_streamer.hh	/^    int numOutChunks, numMaxChunks, maxChunkSize;$/;"	m	struct:bam_streamer
maxError	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    double maxError = 0.35;$/;"	m	struct:IterativeAssemblerOptions
maxError	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    double maxError = 0.35;$/;"	m	struct:SmallAssemblerOptions
maxGenotypeIndex	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    VcfGenotype maxGenotypeIndex;$/;"	m	struct:LocusSampleInfo
maxGenotypeIndexPolymorphic	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    VcfGenotype maxGenotypeIndexPolymorphic;$/;"	m	struct:LocusSampleInfo
maxIndelSize	./src/c++/lib/starling_common/starling_base_shared.hh	/^    unsigned maxIndelSize = 150;$/;"	m	struct:starling_base_options
maxLogLocusRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    static const double maxLogLocusRate;$/;"	m	struct:__anon18::error_minfunc_model3	file:
maxLogLocusRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^const double error_minfunc_model3::maxLogLocusRate = std::log(1.0);$/;"	m	class:__anon18::error_minfunc_model3	file:
maxLogLocusRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    static const double maxLogLocusRate;$/;"	m	struct:__anon26::error_minfunc_model3	file:
maxLogLocusRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^const double error_minfunc_model3::maxLogLocusRate = std::log(1.0);$/;"	m	class:__anon26::error_minfunc_model3	file:
maxLogLocusRate	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    static const double maxLogLocusRate;$/;"	m	struct:error_minfunc_model3	file:
maxLogLocusRate	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^const double error_minfunc_model3::maxLogLocusRate = std::log(1.0);$/;"	m	class:error_minfunc_model3	file:
maxLogRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    static const double maxLogRate;$/;"	m	struct:__anon20::error_minfunc_model4	file:
maxLogRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^const double error_minfunc_model4::maxLogRate = std::log(0.35);$/;"	m	class:__anon20::error_minfunc_model4	file:
maxLogRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    static const double maxLogRate;$/;"	m	struct:__anon18::error_minfunc_model3	file:
maxLogRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^const double error_minfunc_model3::maxLogRate = std::log(0.5);$/;"	m	class:__anon18::error_minfunc_model3	file:
maxLogRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    static const double maxLogRate;$/;"	m	struct:__anon26::error_minfunc_model3	file:
maxLogRate	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^const double error_minfunc_model3::maxLogRate = std::log(0.5);$/;"	m	class:__anon26::error_minfunc_model3	file:
maxLogRate	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    static const double maxLogRate;$/;"	m	struct:error_minfunc_model3	file:
maxLogRate	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^const double error_minfunc_model3::maxLogRate = std::log(0.5);$/;"	m	class:error_minfunc_model3	file:
maxLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    static const double maxLogTheta;$/;"	m	struct:__anon20::error_minfunc_model4	file:
maxLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^const double error_minfunc_model4::maxLogTheta = std::log(0.4);$/;"	m	class:__anon20::error_minfunc_model4	file:
maxLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    static const double maxLogTheta;$/;"	m	struct:__anon18::error_minfunc_model3	file:
maxLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^const double error_minfunc_model3::maxLogTheta = std::log(0.4);$/;"	m	class:__anon18::error_minfunc_model3	file:
maxLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    static const double maxLogTheta;$/;"	m	struct:__anon26::error_minfunc_model3	file:
maxLogTheta	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^const double error_minfunc_model3::maxLogTheta = std::log(0.4);$/;"	m	class:__anon26::error_minfunc_model3	file:
maxLogTheta	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^    static const double maxLogTheta;$/;"	m	struct:error_minfunc_model3	file:
maxLogTheta	./src/c++/lib/applications/EstimateVariantErrorRates/IndelModelProduction.cpp	/^const double error_minfunc_model3::maxLogTheta = std::log(0.4);$/;"	m	class:error_minfunc_model3	file:
maxPL	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    const unsigned maxPL = 999;$/;"	m	struct:gvcf_writer
maxPatternRepeatCount	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    static const unsigned maxPatternRepeatCount = 40;$/;"	m	struct:IndelErrorRateSet
maxQ	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^const int diploid_genotype::maxQ = 999;$/;"	m	class:diploid_genotype	file:
maxQ	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    static const int maxQ;$/;"	m	struct:diploid_genotype
maxRepeatingPatternSize	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^    static const unsigned maxRepeatingPatternSize = 4;$/;"	m	struct:IndelErrorRateSet
maxWordLength	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    unsigned maxWordLength = 76;$/;"	m	struct:IterativeAssemblerOptions
maxWordLength	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    unsigned maxWordLength = 76;$/;"	m	struct:SmallAssemblerOptions
max_	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    unsigned max_;$/;"	m	struct:depth_stream_stat
max_	./src/c++/lib/blt_util/stream_stat.hh	/^    double max_;$/;"	m	struct:stream_stat
max_allele_size	./src/c++/lib/blt_common/ref_context.cpp	/^    max_allele_size() const$/;"	f	struct:ihpol_data
max_base_filt	./src/c++/lib/applications/starling/gvcf_options.hh	/^    double max_base_filt = .4; \/\/DPFratio$/;"	m	struct:gvcf_options
max_candidate_alignment_toggle	./src/c++/lib/starling_common/starling_align_limit.cpp	/^max_candidate_alignment_toggle(const unsigned n_indel,$/;"	f	file:
max_candidate_indel_density	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double max_candidate_indel_density = 0.15; \/\/ max number of candidate indels per read base, if exceeded search is curtailed to toggle depth=1$/;"	m	struct:starling_base_options
max_candidate_indel_depth	./src/c++/lib/starling_common/starling_base_shared.hh	/^    int max_candidate_indel_depth = -1;$/;"	m	struct:starling_base_options
max_candidate_indel_depth_factor	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double max_candidate_indel_depth_factor = 3.;$/;"	m	struct:starling_base_options
max_delete_length	./src/c++/lib/blt_util/RecordTracker.hh	/^    unsigned max_delete_length;$/;"	m	struct:IndelGenotype
max_depth	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned max_depth = 0;$/;"	m	struct:blt_read_counts
max_depth_factor	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    double max_depth_factor = 3.;$/;"	m	struct:SequenceErrorCountsOptions
max_depth_factor	./src/c++/lib/applications/starling/gvcf_options.hh	/^    double max_depth_factor = 3.;$/;"	m	struct:gvcf_options
max_depth_factor	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double max_depth_factor = 3.;$/;"	m	struct:somatic_filter_options
max_gt	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    max_gt() const$/;"	f	struct:LocusSampleInfo
max_gt	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    max_gt()$/;"	f	struct:LocusSampleInfo
max_gt	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    unsigned max_gt;$/;"	m	struct:result_set
max_gt	./src/c++/lib/blt_common/nonref_test_call.hh	/^    unsigned  max_gt;$/;"	m	struct:nonref_test_call
max_gt	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^        unsigned max_gt;$/;"	m	struct:diploid_genotype::result_set
max_gt	./src/c++/lib/blt_common/position_snp_call_pprob_monogt.hh	/^    unsigned max_gt;$/;"	m	struct:monoploid_genotype
max_gt	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.hh	/^    unsigned max_gt;$/;"	m	struct:nploid_genotype
max_gt_qphred	./src/c++/lib/blt_common/nonref_test_call.hh	/^    int max_gt_qphred;$/;"	m	struct:nonref_test_call
max_gt_qphred	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^        int max_gt_qphred;$/;"	m	struct:diploid_genotype::result_set
max_input_depth	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned max_input_depth = 0;$/;"	m	struct:blt_options
max_pos	./src/c++/lib/blt_util/stage_manager.hh	/^    max_pos() const$/;"	f	struct:stage_manager
max_read_indel_toggle	./src/c++/lib/starling_common/starling_base_shared.hh	/^    int max_read_indel_toggle = 5; \/\/ if a read samples more than max indel changes, we skip realignment$/;"	m	struct:starling_base_options
max_realignment_candidates	./src/c++/lib/starling_common/starling_base_shared.hh	/^    unsigned max_realignment_candidates = 5000;$/;"	m	struct:starling_base_options
max_ref_rep	./src/c++/lib/applications/starling/gvcf_options.hh	/^    int max_ref_rep = -1;$/;"	m	struct:gvcf_options
max_snv_hpol	./src/c++/lib/applications/starling/gvcf_options.hh	/^    int max_snv_hpol = -1;$/;"	m	struct:gvcf_options
max_snv_sb	./src/c++/lib/applications/starling/gvcf_options.hh	/^    double max_snv_sb = 10;$/;"	m	struct:gvcf_options
max_toggle_depth	./src/c++/lib/starling_common/starling_read_align.cpp	/^    bool max_toggle_depth = false;$/;"	m	struct:mca_warnings	file:
max_vexp_iterations	./src/c++/lib/blt_common/blt_shared.hh	/^    int max_vexp_iterations = 0;$/;"	m	struct:blt_options
max_win_mismatch	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned max_win_mismatch = 0;$/;"	m	struct:blt_options
max_win_mismatch_flank_size	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned max_win_mismatch_flank_size = 0;$/;"	m	struct:blt_options
mca_warnings	./src/c++/lib/starling_common/starling_read_align.cpp	/^struct mca_warnings$/;"	s	file:
mean	./src/c++/lib/blt_util/MeanTracker.hh	/^    mean() const$/;"	f	struct:MeanTracker
mean	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    double mean() const$/;"	f	struct:depth_stream_stat
mean	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    double mean() const$/;"	f	struct:depth_stream_stat_range
mean	./src/c++/lib/blt_util/stream_stat.hh	/^    double mean() const$/;"	f	struct:stream_stat
meanDistanceFromReadEdge	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    double meanDistanceFromReadEdge = 0;$/;"	m	struct:GermlineSiteSampleInfo
median	./src/c++/lib/blt_util/math_util.hh	/^median($/;"	f
medianChecker	./src/c++/lib/blt_util/test/math_util_test.cpp	/^medianChecker($/;"	f	file:
merge	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    merge(const GermlineFilterKeeper& filterKeeper)$/;"	f	struct:GermlineFilterKeeper
merge	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^    merge(const StrandBiasCounts& rhs)$/;"	f	struct:StrandBiasCounts
merge	./src/c++/lib/appstats/RunStats.hh	/^    merge(const RunStats& rhs)$/;"	f	struct:RunStats
merge	./src/c++/lib/appstats/RunStats.hh	/^    merge(const RunStatsData& rhs)$/;"	f	struct:RunStatsData
merge	./src/c++/lib/blt_common/MapqTracker.hh	/^    merge($/;"	f	struct:MapqTracker
merge	./src/c++/lib/blt_util/fastRanksum.hh	/^        merge($/;"	f	struct:fastRanksum::ranksumObs
merge	./src/c++/lib/blt_util/fastRanksum.hh	/^    merge($/;"	f	struct:fastRanksum
merge	./src/c++/lib/blt_util/time_util.hh	/^    merge($/;"	f	struct:CpuTimes
merge	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^merge($/;"	f	class:BaseErrorCounts
merge	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^merge($/;"	f	class:BaseErrorData
merge	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^merge(const BaseErrorContextObservationData& in)$/;"	f	class:BaseErrorContextObservationData
merge	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^merge($/;"	f	class:IndelErrorCounts
merge	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^merge($/;"	f	class:IndelErrorData
merge	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^merge(const IndelBackgroundObservationData& in)$/;"	f	class:IndelBackgroundObservationData
merge	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^merge(const IndelErrorContextObservationData& in)$/;"	f	class:IndelErrorContextObservationData
merge	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    merge(const IndelDepthSupportTotal& in)$/;"	f	struct:IndelDepthSupportTotal
merge	./src/c++/lib/errorAnalysis/SequenceErrorCounts.cpp	/^merge($/;"	f	class:SequenceErrorCounts
mergeIndelObservations	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^mergeIndelObservations($/;"	f	file:
mergeMapKeys	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModel1.cpp	/^mergeMapKeys($/;"	f	file:
mergeMapKeys	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^mergeMapKeys($/;"	f	file:
mergeMapKeys	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^mergeMapKeys($/;"	f	file:
merge_range	./src/c++/lib/blt_util/known_pos_range2.hh	/^    merge_range(const known_pos_range2& kpr)$/;"	f	struct:known_pos_range2
merge_range	./src/c++/lib/blt_util/known_pos_range2.hh	/^merge_range($/;"	f
merge_range	./src/c++/lib/blt_util/pos_range.hh	/^    merge_range(const known_pos_range& kpr)$/;"	f	struct:known_pos_range
message	./src/c++/lib/blt_util/blt_exception.hh	/^    std::string message;$/;"	m	struct:blt_exception
message_	./src/c++/lib/common/Exceptions.hh	/^    const std::string message_;$/;"	m	class:illumina::common::ExceptionData
min	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    double min() const$/;"	f	struct:depth_stream_stat
min	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    double min() const$/;"	f	struct:depth_stream_stat_range
min	./src/c++/lib/blt_util/stream_stat.hh	/^    double min() const$/;"	f	struct:stream_stat
minConservativeCoverage	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    unsigned minConservativeCoverage = 2;$/;"	m	struct:IterativeAssemblerOptions
minConservativeCoverage	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    unsigned minConservativeCoverage = 2;$/;"	m	struct:SmallAssemblerOptions
minContigLength	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    unsigned minContigLength = 15;$/;"	m	struct:IterativeAssemblerOptions
minContigLength	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    unsigned minContigLength = 15;$/;"	m	struct:SmallAssemblerOptions
minCoverage	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    unsigned minCoverage = 1;$/;"	m	struct:IterativeAssemblerOptions
minCoverage	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    unsigned minCoverage = 1;$/;"	m	struct:SmallAssemblerOptions
minDistanceFromReadEdge	./src/c++/lib/starling_common/starling_base_shared.hh	/^    unsigned minDistanceFromReadEdge = 0;$/;"	m	struct:starling_base_options
minPassedCallDepth	./src/c++/lib/applications/starling/gvcf_options.hh	/^    unsigned minPassedCallDepth = 3u;$/;"	m	struct:gvcf_options
minPassedCallDepth	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    unsigned minPassedCallDepth = 2u;$/;"	m	struct:somatic_filter_options
minQval	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    int minQval = 5;$/;"	m	struct:IterativeAssemblerOptions
minQval	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    uint8_t minQval = 5;$/;"	m	struct:SmallAssemblerOptions
minSeedReads	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    unsigned minSeedReads = 3;$/;"	m	struct:SmallAssemblerOptions
minSupportReads	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    unsigned minSupportReads = 2;$/;"	m	struct:IterativeAssemblerOptions
minUnusedReads	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    unsigned minUnusedReads = 3;$/;"	m	struct:IterativeAssemblerOptions
minWordLength	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    unsigned minWordLength = 41;$/;"	m	struct:IterativeAssemblerOptions
minWordLength	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    unsigned minWordLength = 41;$/;"	m	struct:SmallAssemblerOptions
min_	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    unsigned min_;$/;"	m	struct:depth_stream_stat
min_	./src/c++/lib/blt_util/stream_stat.hh	/^    double min_;$/;"	m	struct:stream_stat
min_candidate_indel_open_length	./src/c++/lib/starling_common/starling_base_shared.hh	/^    unsigned min_candidate_indel_open_length = 20;$/;"	m	struct:starling_base_options
min_count_binom_gte_cache	./src/c++/lib/starling_common/min_count_binom_gte_cache.cpp	/^min_count_binom_gte_cache($/;"	f	class:min_count_binom_gte_cache
min_count_binom_gte_cache	./src/c++/lib/starling_common/min_count_binom_gte_cache.hh	/^struct min_count_binom_gte_cache$/;"	s
min_count_binomial_gte_exact	./src/c++/lib/blt_util/binomial_test.cpp	/^min_count_binomial_gte_exact($/;"	f
min_gqx	./src/c++/lib/applications/starling/gvcf_options.hh	/^    double min_gqx = 30.;$/;"	m	struct:gvcf_options
min_het_vf	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double min_het_vf = 0.01;$/;"	m	struct:starling_base_options
min_homref_gqx	./src/c++/lib/applications/starling/gvcf_options.hh	/^    double min_homref_gqx = 30;$/;"	m	struct:gvcf_options
min_loghood	./src/c++/lib/blt_common/position_snp_call_lrt.hh	/^    double min_loghood;      \/\/ lhood from the three-parameter minimization used to find all ML frequencies$/;"	m	struct:lrt_snp_call
min_mapping_quality	./src/c++/lib/blt_common/blt_shared.hh	/^    int min_mapping_quality = 20;$/;"	m	struct:blt_options
min_pos	./src/c++/lib/blt_util/stage_manager.hh	/^    min_pos() const$/;"	f	struct:stage_manager
min_qscore	./src/c++/lib/blt_common/blt_shared.hh	/^    int min_qscore = 17;$/;"	m	struct:blt_options
min_read_bp_flank	./src/c++/lib/starling_common/starling_base_shared.hh	/^    int min_read_bp_flank;$/;"	m	struct:starling_sample_options
min_test_loghood	./src/c++/lib/blt_common/position_snp_call_lrt.hh	/^    double min_test_loghood; \/\/ lhood from the single-parameter test used to determine significance$/;"	m	struct:lrt_snp_call
min_vexp	./src/c++/lib/blt_common/blt_shared.hh	/^    double min_vexp = 0;$/;"	m	struct:blt_options
minimizerParamsToModelParams	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    minimizerParamsToModelParams($/;"	f	struct:__anon20::error_minfunc_model4
mismatch	./src/c++/lib/alignment/AlignmentScores.hh	/^    const ScoreType mismatch; \/\/\/< mismatch score (should be negative)$/;"	m	struct:AlignmentScores
mismatch_count	./src/c++/lib/starling_common/read_mismatch_info.hh	/^    int mismatch_count;$/;"	m	struct:read_base_mismatch_info
mismatch_count_ns	./src/c++/lib/starling_common/read_mismatch_info.hh	/^    int mismatch_count_ns;$/;"	m	struct:read_base_mismatch_info
mismatch_filter_map	./src/c++/lib/starling_common/read_mismatch_info.hh	/^    bool mismatch_filter_map;$/;"	m	struct:read_base_mismatch_info
mode	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    sim_mode_t mode = SIM_RANDOM;$/;"	m	struct:starling_site_sim_options
mode	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    sim_mode_t mode;$/;"	m	struct:strelka_site_sim_options
model	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^    IndelModelBinomialMixture model;$/;"	m	class:IndelErrorModelJson
modelIndex	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^    int modelIndex = 1;$/;"	m	struct:EPECOptions
modelParseError	./src/c++/lib/calibration/VariantScoringModelServer.cpp	/^modelParseError($/;"	f	file:
modelType	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.hh	/^    MODEL_TYPE::index_t modelType = MODEL_TYPE::NONE;$/;"	m	struct:EPECOptions
modifySiteForConsistencyWithUpstreamIndels	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^modifySiteForConsistencyWithUpstreamIndels($/;"	f	class:gvcf_writer
modifySiteOverlappingNonconflictingVariantIndel	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^modifySiteOverlappingNonconflictingVariantIndel($/;"	f	class:VariantOverlapResolver
modifySiteOverlappingVariantIndel	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^modifySiteOverlappingVariantIndel($/;"	f	class:VariantOverlapResolver
monoploid_genotype	./src/c++/lib/blt_common/position_snp_call_pprob_monogt.hh	/^    monoploid_genotype() : is_snp(false), ref_gt(0), max_gt(0), max2_gt(0)$/;"	f	struct:monoploid_genotype
monoploid_genotype	./src/c++/lib/blt_common/position_snp_call_pprob_monogt.hh	/^struct monoploid_genotype : private boost::noncopyable$/;"	s
motifs	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^    std::vector<IndelMotifBinomialMixture> motifs;$/;"	m	class:IndelModelBinomialMixture
mq_ranksum	./src/c++/lib/blt_common/snp_pos_info.hh	/^    fastRanksum mq_ranksum;$/;"	m	struct:snp_pos_info
n2frac	./src/c++/lib/applications/strelka/SiteNoise.hh	/^    n2frac() const$/;"	f	struct:SiteNoise
nContigs	./src/c++/lib/htsapi/bam_streamer.hh	/^    int curTid, nContigs;$/;"	m	struct:bam_streamer
n_	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    unsigned n_;$/;"	m	struct:depth_stream_stat
n_calls	./src/c++/lib/starling_common/PileupCleaner.hh	/^    n_calls() const$/;"	f	struct:CleanedPileup
n_cigar	./src/c++/lib/htsapi/bam_record.hh	/^    unsigned n_cigar() const$/;"	f	struct:bam_record
n_cigar	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint8_t n_cigar;$/;"	m	struct:__anon8
n_confident_alt_reads	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_confident_alt_reads = 0;$/;"	m	struct:AlleleSampleReportInfo
n_confident_alt_reads_fwd	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_confident_alt_reads_fwd = 0;$/;"	m	struct:AlleleSampleReportInfo
n_confident_alt_reads_rev	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_confident_alt_reads_rev = 0;$/;"	m	struct:AlleleSampleReportInfo
n_confident_indel_reads	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_confident_indel_reads = 0;$/;"	m	struct:AlleleSampleReportInfo
n_confident_indel_reads_fwd	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_confident_indel_reads_fwd = 0;$/;"	m	struct:AlleleSampleReportInfo
n_confident_indel_reads_rev	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_confident_indel_reads_rev = 0;$/;"	m	struct:AlleleSampleReportInfo
n_confident_ref_reads	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_confident_ref_reads = 0;$/;"	m	struct:AlleleSampleReportInfo
n_confident_ref_reads_fwd	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_confident_ref_reads_fwd = 0;$/;"	m	struct:AlleleSampleReportInfo
n_confident_ref_reads_rev	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_confident_ref_reads_rev = 0;$/;"	m	struct:AlleleSampleReportInfo
n_other_reads	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_other_reads = 0;$/;"	m	struct:AlleleSampleReportInfo
n_other_reads_fwd	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_other_reads_fwd = 0;$/;"	m	struct:AlleleSampleReportInfo
n_other_reads_rev	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned n_other_reads_rev = 0;$/;"	m	struct:AlleleSampleReportInfo
n_seg	./src/c++/lib/blt_util/align_path_util.hh	/^    unsigned n_seg;$/;"	m	struct:ALIGNPATH::swap_info
n_submapped	./src/c++/lib/blt_common/snp_pos_info.hh	/^    unsigned n_submapped;$/;"	m	struct:snp_pos_info
n_unused_calls	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unsigned n_unused_calls = 0;$/;"	m	struct:GermlineSiteSampleInfo
n_unused_calls	./src/c++/lib/starling_common/PileupCleaner.hh	/^    n_unused_calls() const$/;"	f	struct:CleanedPileup
n_used_calls	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unsigned n_used_calls = 0;$/;"	m	struct:GermlineSiteSampleInfo
n_used_calls	./src/c++/lib/starling_common/PileupCleaner.hh	/^    n_used_calls() const$/;"	f	struct:CleanedPileup
n_word	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    n_word() const$/;"	f	struct:istream_line_splitter
name	./src/c++/lib/applications/DumpSequenceErrorCounts/DumpSequenceErrorCounts.hh	/^    name() const$/;"	f	struct:DumpSequenceErrorCounts
name	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EstimateParametersFromErrorCounts.hh	/^    name() const$/;"	f	struct:EstimateParametersFromErrorCounts
name	./src/c++/lib/applications/EstimateVariantErrorRates/EstimateVariantErrorRates.hh	/^    name() const$/;"	f	struct:EstimateVariantErrorRates
name	./src/c++/lib/applications/GetChromDepth/GetChromDepth.hh	/^    name() const$/;"	f	struct:GetChromDepth
name	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCounts.hh	/^    name() const$/;"	f	struct:GetSequenceErrorCounts
name	./src/c++/lib/applications/MergeRunStats/MergeRunStats.hh	/^    name() const$/;"	f	struct:MergeRunStats
name	./src/c++/lib/applications/MergeSequenceErrorCounts/MergeSequenceErrorCounts.hh	/^    name() const$/;"	f	struct:MergeSequenceErrorCounts
name	./src/c++/lib/applications/countFastaBases/countFastaBases.hh	/^    name() const$/;"	f	struct:countFastaBases
name	./src/c++/lib/applications/starling/starling.hh	/^    name() const$/;"	f	struct:starling
name	./src/c++/lib/applications/starling/starlingSiteSimulator.hh	/^    name() const$/;"	f	struct:starlingSiteSimulator
name	./src/c++/lib/applications/strelka/strelka.hh	/^    name() const$/;"	f	struct:strelka
name	./src/c++/lib/applications/strelka/strelkaSiteSimulator.hh	/^    name() const$/;"	f	struct:strelkaSiteSimulator
name	./src/c++/lib/applications/strelkaNoiseExtractor/strelkaNoiseExtractor.hh	/^    name() const$/;"	f	struct:StrelkaNoiseExtractor
name	./src/c++/lib/calibration/IndelErrorModelMetadata.hh	/^    std::string name;$/;"	m	struct:IndelErrorModelMetadata
name	./src/c++/lib/htsapi/bam_dumper.hh	/^    const char* name() const$/;"	f	struct:bam_dumper
name	./src/c++/lib/htsapi/bam_streamer.hh	/^    const char* name() const$/;"	f	struct:bam_streamer
name	./src/c++/lib/htsapi/hts_streamer.hh	/^    name() const$/;"	f	struct:hts_streamer
nan	./src/c++/lib/blt_util/stream_stat.hh	/^    double nan()$/;"	f	struct:stream_stat
ncov	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    unsigned ncov;$/;"	m	struct:strelka_site_sim_options
ndata_t	./src/c++/lib/applications/strelka/NoiseBuffer.hh	/^    typedef RangeMap<pos_t,SiteNoise,ClearT<SiteNoise>> ndata_t;$/;"	t	struct:NoiseBuffer
next	./src/c++/lib/blt_util/align_path.hh	/^    next()$/;"	f	struct:ALIGNPATH::exon_offsets
next	./src/c++/lib/htsapi/bam_streamer.cpp	/^next()$/;"	f	class:bam_streamer
next	./src/c++/lib/htsapi/bed_streamer.cpp	/^next()$/;"	f	class:bed_streamer
next	./src/c++/lib/htsapi/vcf_streamer.cpp	/^next()$/;"	f	class:vcf_streamer
next	./src/c++/lib/starling_common/HtsMergeStreamer.cpp	/^next()$/;"	f	class:HtsMergeStreamer
next	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    align_id_t next()$/;"	f	struct:read_id_counter
next	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    bool next()$/;"	f	struct:read_segment_iter
nextPos	./src/c++/lib/blt_util/CircularCounter.hh	/^    nextPos() const$/;"	f	struct:CircularCounter
nextVariantType	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^nextVariantType($/;"	f	file:
next_word	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^next_word(const char* c,$/;"	f
nfrac	./src/c++/lib/applications/strelka/SiteNoise.hh	/^    nfrac() const$/;"	f	struct:SiteNoise
nisri	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    std::array<AlleleSampleReportInfo,2> nisri;$/;"	m	struct:SomaticIndelVcfInfo
noIndel	./src/c++/lib/starling_common/IndelKey.hh	/^    noIndel()$/;"	f	struct:IndelKey
nocompress_region_bedfile	./src/c++/lib/applications/starling/gvcf_options.hh	/^    std::string nocompress_region_bedfile;$/;"	m	struct:gvcf_options
noexcept	./src/c++/lib/blt_util/compat_util.hh	35;"	d
noexcept	./src/c++/lib/blt_util/compat_util.hh	36;"	d
noise	./src/c++/lib/applications/strelka/SiteNoise.hh	/^    uint16_t noise = 0;$/;"	m	struct:SiteNoise
noise2	./src/c++/lib/applications/strelka/SiteNoise.hh	/^    uint16_t noise2 = 0;$/;"	m	struct:SiteNoise
noiseLocus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModel1.cpp	/^    double noiseLocus = 0;$/;"	m	struct:__anon23::SignalGroupTotal	file:
noiseLocus	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModel1.cpp	/^    uint64_t noiseLocus = 0;$/;"	m	struct:__anon25::ContextTotal	file:
noiseSkipped	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    uint64_t noiseSkipped = 0;$/;"	m	struct:BaseErrorData
noise_read_ids	./src/c++/lib/starling_common/IndelData.hh	/^    evidence_t noise_read_ids;$/;"	m	struct:IndelSampleData
noise_vcf	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::vector<std::string> noise_vcf;$/;"	m	struct:strelka_options
noisyLocusRate	./src/c++/lib/calibration/IndelErrorModel.cpp	/^double AdaptiveIndelErrorModel::noisyLocusRate(const unsigned repeatCount) const$/;"	f	class:AdaptiveIndelErrorModel
noisyLocusRate	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^    double noisyLocusRate = 0;$/;"	m	class:IndelMotifBinomialMixture
noisyLocusRate	./src/c++/lib/calibration/IndelErrorRateSet.hh	/^        double noisyLocusRate = 0;$/;"	m	struct:IndelErrorRateSet::IndelErrorRates
nonCandidateIndels	./src/c++/lib/appstats/RunStats.hh	/^    unsigned long nonCandidateIndels = 0;$/;"	m	struct:RunStatsData
nonConfidentCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    unsigned nonConfidentCount = 0;$/;"	m	struct:SupportingReadCountGroup
nonEmptySiteCountFilename	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    std::string nonEmptySiteCountFilename;$/;"	m	struct:SequenceErrorCountsOptions
nonRef	./src/c++/lib/blt_util/ranksum.hh	/^    unsigned nonRef;$/;"	m	struct:ranksumObs
nonReferenceAlleleReadPositionInfo	./src/c++/lib/blt_common/snp_pos_info.hh	/^    std::vector<ReadPositionInfo> nonReferenceAlleleReadPositionInfo;$/;"	m	struct:snp_pos_info
none	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    none() const$/;"	f	struct:GermlineFilterKeeper
nonref_allele_freq_loghood_sparse_func	./src/c++/lib/blt_common/position_nonref_2allele_test.cpp	/^    nonref_allele_freq_loghood_sparse_func(const snp_pos_info& pi,$/;"	f	struct:nonref_allele_freq_loghood_sparse_func
nonref_allele_freq_loghood_sparse_func	./src/c++/lib/blt_common/position_nonref_2allele_test.cpp	/^struct nonref_allele_freq_loghood_sparse_func   \/\/: public sample_func_iface {$/;"	s	file:
nonref_freq_loghood_sparse_func	./src/c++/lib/blt_common/position_nonref_test.cpp	/^    nonref_freq_loghood_sparse_func(const snp_pos_info& pi,$/;"	f	struct:nonref_freq_loghood_sparse_func
nonref_freq_loghood_sparse_func	./src/c++/lib/blt_common/position_nonref_test.cpp	/^struct nonref_freq_loghood_sparse_func   \/\/: public sample_func_iface {$/;"	s	file:
nonref_id	./src/c++/lib/blt_common/nonref_test_call.hh	/^    unsigned nonref_id;$/;"	m	struct:nonref_test_call
nonref_test_call	./src/c++/lib/blt_common/nonref_test_call.hh	/^    nonref_test_call()$/;"	f	struct:nonref_test_call
nonref_test_call	./src/c++/lib/blt_common/nonref_test_call.hh	/^struct nonref_test_call : private boost::noncopyable$/;"	s
nonsite_lnprior	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double nonsite_lnprior;$/;"	m	struct:starling_base_deriv_options
nonsomatic_qphred	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    int nonsomatic_qphred = 0;$/;"	m	struct:snv_result_set
nonzero	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    unsigned nonzero() const$/;"	f	struct:depth_stream_stat
nonzero	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    unsigned nonzero() const$/;"	f	struct:depth_stream_stat_range
normRotate	./src/c++/lib/blt_util/RangeMap.hh	/^    normRotate()$/;"	f	struct:RangeMap
norm_gt	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^norm_gt(blt_float_t* const x)$/;"	f	file:
normal_alt_id	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    unsigned normal_alt_id;$/;"	m	struct:snv_result_set
normal_indel_intersect	./src/c++/lib/starling_common/starling_base_shared.hh	/^    unsigned normal_indel_intersect = 0;$/;"	m	struct:starling_read_counts
normal_indel_used	./src/c++/lib/starling_common/starling_base_shared.hh	/^    unsigned normal_indel_used = 0;$/;"	m	struct:starling_read_counts
normal_purity	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    double normal_purity;$/;"	m	struct:strelka_site_sim_options
normal_sample_min_read_bp_flank	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    int normal_sample_min_read_bp_flank = 1;$/;"	m	struct:strelka_options
normalizeAlignment	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^normalizeAlignment($/;"	f
normalizeBamRecordAlignment	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^normalizeBamRecordAlignment($/;"	f
normalizeEdgeIndels	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^normalizeEdgeIndels($/;"	f	file:
normalizeInputAlignmentIndels	./src/c++/lib/starling_common/starling_read_align.cpp	/^normalizeInputAlignmentIndels($/;"	f	file:
normalizeLogDistro	./src/c++/lib/blt_util/prob_util.hh	/^normalizeLogDistro($/;"	f
notifier	./src/c++/lib/blt_util/observer.hh	/^    notifier() {}$/;"	f	struct:notifier
notifier	./src/c++/lib/blt_util/observer.hh	/^    notifier(const self_t& rhs) :$/;"	f	struct:notifier
notifier	./src/c++/lib/blt_util/observer.hh	/^struct notifier$/;"	s
notifier_test	./src/c++/lib/blt_util/test/observer_test.cpp	/^struct notifier_test : public notifier<int>$/;"	s	file:
notify_flyweight_observer	./src/c++/lib/blt_util/flyweight_observer.hh	/^    notify_flyweight_observer($/;"	f	struct:flyweight_notifier
notify_observers	./src/c++/lib/blt_util/observer.hh	/^    notify_observers(const T& msg) const$/;"	f	struct:notifier
nots_t	./src/c++/lib/blt_util/observer.hh	/^    typedef typename std::set<const notifier<T>*> nots_t;$/;"	t	struct:observer
nploid_genotype	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.hh	/^    nploid_genotype(const nploid_info& ni)$/;"	f	struct:nploid_genotype
nploid_genotype	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.hh	/^struct nploid_genotype$/;"	s
nploid_gtype_size	./src/c++/lib/blt_util/nploid_genotype_util.cpp	/^nploid_gtype_size(const unsigned ploidy)$/;"	f
nploid_info	./src/c++/lib/blt_util/nploid_genotype_util.cpp	/^nploid_info(const unsigned init_ploidy)$/;"	f	class:nploid_info
nploid_info	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^struct nploid_info : private boost::noncopyable$/;"	s
nploid_write	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.cpp	/^nploid_write(const nploid_info& ninfo,$/;"	f
nr1	./src/c++/lib/blt_common/ref_context.cpp	/^    unsigned nr1,nr2;$/;"	m	struct:ihpol_data	file:
nr2	./src/c++/lib/blt_common/ref_context.cpp	/^    unsigned nr1,nr2;$/;"	m	struct:ihpol_data	file:
nsite	./src/c++/lib/starling_common/IndelData.hh	/^    uint16_t nsite;$/;"	m	struct:ReadPathScores
ntype	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    unsigned ntype;$/;"	m	struct:result_set
nuke_bam_aux_field	./src/c++/lib/htsapi/bam_util.cpp	/^nuke_bam_aux_field(bam1_t& br,$/;"	f
null_loghood	./src/c++/lib/blt_common/position_snp_call_lrt.hh	/^    double null_loghood;$/;"	m	struct:lrt_snp_call
numFinishedTasks	./src/c++/lib/applications/starling/starling_run.cpp	/^    uint32_t *endRegion, *regionNumber, *numFinishedTasks;$/;"	m	struct:workerData	file:
numMaxChunks	./src/c++/lib/htsapi/bam_streamer.hh	/^    int numOutChunks, numMaxChunks, maxChunkSize;$/;"	m	struct:bam_streamer
numOutChunks	./src/c++/lib/htsapi/bam_streamer.hh	/^    int numOutChunks, numMaxChunks, maxChunkSize;$/;"	m	struct:bam_streamer
numReads	./src/c++/lib/starling_common/starling_ref_seq.hh	/^    size_t numReads;$/;"	m	struct:AnalysisRegionInfo
numReadsAlignedToActiveRegion	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    unsigned numReadsAlignedToActiveRegion;$/;"	m	struct:ActiveRegionReadInfo
numTasks	./src/c++/lib/applications/starling/starling_run.cpp	/^    int numTasks, rank;$/;"	m	struct:workerData	file:
numTasks	./src/c++/lib/htsapi/bam_streamer.hh	/^    int numTasks;$/;"	m	struct:bam_streamer
numval	./src/c++/lib/blt_util/PrettyFloat.hh	/^    numval() const$/;"	f	struct:PrettyFloat
oR	./src/c++/lib/htsapi/bam_streamer.hh	/^    otherRec *oR;$/;"	m	struct:bam_streamer
obs_t	./src/c++/lib/starling_common/IndelData.hh	/^    typedef std::map<std::string,unsigned> obs_t;$/;"	t	struct:BreakpointInsertSequenceManager
observationCount	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    unsigned observationCount;$/;"	m	struct:ExportedIndelObservations
observation_bed_osptr	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsStreams.hh	/^    observation_bed_osptr() const$/;"	f	struct:SequenceErrorCountsStreams
observation_t	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    typedef std::map<BaseErrorContextObservationExportObservation,unsigned> observation_t;$/;"	t	struct:BaseErrorContextObservationExportData
observations	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    observation_t observations;$/;"	m	struct:BaseErrorContextObservationExportData
observationsBedFilename	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsOptions.hh	/^    std::string observationsBedFilename;$/;"	m	struct:SequenceErrorCountsOptions
observe_notifier	./src/c++/lib/blt_util/observer.hh	/^    observe_notifier(const notifier<T>& n)$/;"	f	struct:observer
observer	./src/c++/lib/blt_util/observer.hh	/^    observer() {}$/;"	f	struct:observer
observer	./src/c++/lib/blt_util/observer.hh	/^    observer(const self_t&)  {} \/\/ do not copy notifier set$/;"	f	struct:observer
observer	./src/c++/lib/blt_util/observer.hh	/^struct observer$/;"	s
observer_test	./src/c++/lib/blt_util/test/observer_test.cpp	/^    observer_test() :$/;"	f	struct:observer_test
observer_test	./src/c++/lib/blt_util/test/observer_test.cpp	/^struct observer_test : public observer<int>$/;"	s	file:
obss_t	./src/c++/lib/blt_util/observer.hh	/^    typedef typename std::set<observer<T>*> obss_t;$/;"	t	struct:notifier
offEdge	./src/c++/lib/alignment/AlignmentScores.hh	/^    const ScoreType offEdge; \/\/\/< score applied when query goes off the end of an edge (should be negative)$/;"	m	struct:AlignmentScores
offset	./src/c++/lib/blt_util/align_path.hh	/^    offset() const$/;"	f	struct:ALIGNPATH::exon_offsets
offsetBy	./src/c++/lib/blt_util/known_pos_range2.hh	/^    offsetBy($/;"	f	struct:known_pos_range2
open	./src/c++/lib/alignment/AlignmentScores.hh	/^    const ScoreType open; \/\/\/< gap open, gap of length N is scored (open + N * extend) (should be negative)$/;"	m	struct:AlignmentScores
openFile	./src/c++/lib/common/OutStream.cpp	/^openFile($/;"	f	class:OutStream
open_ifstream	./src/c++/lib/blt_util/io_util.cpp	/^open_ifstream($/;"	f
open_ofstream	./src/c++/lib/starling_common/starling_streams_base.cpp	/^open_ofstream(const prog_info& pinfo,$/;"	f	class:starling_streams_base
open_ofstream	./src/c++/lib/starling_common/starling_streams_base.cpp	/^open_ofstream(const prog_info& pinfo,$/;"	f	file:
open_pos_range	./src/c++/lib/starling_common/IndelKey.hh	/^    pos_range open_pos_range() const$/;"	f	struct:IndelKey
operator ()	./src/c++/lib/blt_common/adjust_joint_eprob.cpp	/^    operator()(const icall_t& a, const icall_t& b) const$/;"	f	struct:__anon28::sort_icall_by_eprob
operator ()	./src/c++/lib/blt_util/RangeMap.hh	/^    operator()(T& val) const$/;"	f	struct:ClearT
operator ()	./src/c++/lib/blt_util/RangeMap.hh	/^    operator()(T& val) const$/;"	f	struct:ZeroT
operator ()	./src/c++/lib/blt_util/RecordTracker.hh	/^    operator()($/;"	f	struct:IndelGenotypeSort
operator ()	./src/c++/lib/blt_util/RegionTracker.hh	/^    operator()($/;"	f	struct:PosRangeEndSort
operator ()	./src/c++/lib/htsapi/vcf_record.cpp	/^    void operator()(char& c) const$/;"	f	struct:convert
operator ()	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    operator()(HaplotypeIdAndCountRatio& val) const$/;"	f	struct:ClearHaplotypeIdForBase
operator <	./src/c++/lib/blt_common/hapscore.cpp	/^    operator<(const hinfo& rhs) const$/;"	f	struct:hinfo
operator <	./src/c++/lib/blt_common/hapscore.hh	/^    operator<(const hap_cand& rhs) const$/;"	f	struct:hap_cand
operator <	./src/c++/lib/blt_util/align_path.hh	/^    operator<(const path_segment& rhs) const$/;"	f	struct:ALIGNPATH::path_segment
operator <	./src/c++/lib/blt_util/known_pos_range2.hh	/^    operator<(const known_pos_range2& rhs) const$/;"	f	struct:known_pos_range2
operator <	./src/c++/lib/blt_util/pos_range.hh	/^    operator<(const pos_range& rhs) const$/;"	f	struct:known_pos_range
operator <	./src/c++/lib/blt_util/pos_range.hh	/^    operator<(const pos_range& rhs) const$/;"	f	struct:pos_range
operator <	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    operator<($/;"	f	struct:BaseErrorContext
operator <	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    operator<($/;"	f	struct:BaseErrorContextObservation
operator <	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    operator<($/;"	f	struct:BaseErrorContextObservationExportObservation
operator <	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    operator<($/;"	f	struct:BaseErrorContextObservationExportStrandObservation
operator <	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    operator<($/;"	f	struct:StrandBaseCounts
operator <	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    bool operator<(const IndelErrorContext& rhs) const$/;"	f	struct:IndelErrorContext
operator <	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    operator<($/;"	f	struct:IndelBackgroundObservation
operator <	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    operator<($/;"	f	struct:IndelErrorContextObservation
operator <	./src/c++/lib/starling_common/CandidateAlignment.hh	/^    operator<(const CandidateAlignment& rhs) const$/;"	f	struct:CandidateAlignment
operator <	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        operator<(const HtsRecordSortData& rhs) const$/;"	f	struct:HtsMergeStreamer::HtsRecordSortData
operator <	./src/c++/lib/starling_common/IndelKey.hh	/^    operator<(const IndelKey& rhs) const$/;"	f	struct:IndelKey
operator <	./src/c++/lib/starling_common/alignment.hh	/^    operator<(const alignment& rhs) const$/;"	f	struct:alignment
operator <	./src/c++/lib/starling_common/starling_read_key.hh	/^    operator<(const read_key& rhs) const$/;"	f	struct:read_key
operator <<	./src/c++/lib/alignment/Alignment.cpp	/^operator<<(std::ostream& os, const Alignment& align)$/;"	f
operator <<	./src/c++/lib/alignment/SingleRefAlignerSharedImpl.hh	/^operator<<(std::ostream& os, AlignmentResult<ScoreType>& alignment)$/;"	f
operator <<	./src/c++/lib/applications/starling/gvcfAlleleInfo.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/applications/starling/gvcf_locus_info.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/applications/starling/ploidyUtil.cpp	/^operator<<(std::ostream& os, const SamplePloidyState& sps)$/;"	f
operator <<	./src/c++/lib/applications/strelka/somatic_result_set.cpp	/^operator<<(std::ostream& os, const result_set& rs)$/;"	f
operator <<	./src/c++/lib/assembly/AssembledContig.cpp	/^operator<<(std::ostream& os, const AssembledContig& contig)$/;"	f
operator <<	./src/c++/lib/blt_common/MapqTracker.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/blt_common/hapscore.cpp	/^operator<<(std::ostream& os, const hap_cand& hc)$/;"	f
operator <<	./src/c++/lib/blt_common/hapscore.cpp	/^operator<<(std::ostream& os, const hinfo& hi)$/;"	f
operator <<	./src/c++/lib/blt_common/position_snp_call_lrt.cpp	/^std::ostream& operator<<(std::ostream& os,$/;"	f
operator <<	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^std::ostream& operator<<(std::ostream& os,const diploid_genotype& dgt)$/;"	f
operator <<	./src/c++/lib/blt_common/position_snp_call_pprob_monogt.cpp	/^std::ostream& operator<<(std::ostream& os,$/;"	f
operator <<	./src/c++/lib/blt_common/snp_pos_info.cpp	/^operator<<(std::ostream& os,$/;"	f
operator <<	./src/c++/lib/blt_util/RecordTracker.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/blt_util/align_path.cpp	/^operator<<(std::ostream& os, const path_t& apath)$/;"	f	namespace:ALIGNPATH
operator <<	./src/c++/lib/blt_util/depth_stream_stat.cpp	/^operator<<(std::ostream& os,const depth_stream_stat& ss)$/;"	f
operator <<	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^operator<<(std::ostream& os,const depth_stream_stat_range& ss)$/;"	f
operator <<	./src/c++/lib/blt_util/known_pos_range2.cpp	/^std::ostream& operator<<(std::ostream& os, const known_pos_range2& pr)$/;"	f
operator <<	./src/c++/lib/blt_util/pos_range.cpp	/^std::ostream& operator<<(std::ostream& os, const pos_range& pr)$/;"	f
operator <<	./src/c++/lib/blt_util/ranksum.cpp	/^operator<< (ostream& out, const ranksum& r)$/;"	f
operator <<	./src/c++/lib/blt_util/stream_stat.cpp	/^operator<<(std::ostream& os,const stream_stat& ss)$/;"	f
operator <<	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/errorAnalysis/BaseErrorCounts.cpp	/^operator<<(std::ostream& os, const StrandBaseCounts& sbc)$/;"	f
operator <<	./src/c++/lib/errorAnalysis/IndelErrorCounts.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/htsapi/bam_header_info.cpp	/^operator<<(std::ostream& os, const bam_header_info& bhi)$/;"	f
operator <<	./src/c++/lib/htsapi/bam_record.cpp	/^operator<<(std::ostream& os, const bam_record& br)$/;"	f
operator <<	./src/c++/lib/htsapi/bam_seq.cpp	/^operator<<(std::ostream& os,$/;"	f
operator <<	./src/c++/lib/htsapi/bed_record.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/htsapi/vcf_record.cpp	/^std::ostream& operator<<(std::ostream& os, const vcf_record& vcfr)$/;"	f
operator <<	./src/c++/lib/htsapi/vcf_util.cpp	/^operator<<(std::ostream& os, const VcfGenotype& vcfGt)$/;"	f
operator <<	./src/c++/lib/starling_common/AlleleReportInfo.cpp	/^std::ostream& operator<<(std::ostream& os, const AlleleReportInfo& obj)$/;"	f
operator <<	./src/c++/lib/starling_common/AlleleReportInfo.cpp	/^std::ostream& operator<<(std::ostream& os, const AlleleSampleReportInfo& obj)$/;"	f
operator <<	./src/c++/lib/starling_common/CandidateAlignment.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/starling_common/IndelData.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/starling_common/IndelKey.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/starling_common/LocusSupportingReadStats.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.cpp	/^operator<<($/;"	f
operator <<	./src/c++/lib/starling_common/alignment.cpp	/^operator<<(std::ostream& os,$/;"	f
operator <<	./src/c++/lib/starling_common/indel.cpp	/^operator<<(std::ostream& os,$/;"	f
operator <<	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^operator<<(std::ostream& os, const AlignmentInfo& ai)$/;"	f	file:
operator <<	./src/c++/lib/starling_common/starling_read.cpp	/^operator<<(std::ostream& os,$/;"	f
operator <<	./src/c++/lib/starling_common/starling_read_align.cpp	/^operator<<(std::ostream& os, const starling_align_indel_info& ii)$/;"	f	file:
operator <<	./src/c++/lib/starling_common/starling_read_key.cpp	/^operator<<(std::ostream& os,$/;"	f
operator <<	./src/c++/lib/starling_common/starling_read_segment.cpp	/^operator<<(std::ostream& os,$/;"	f
operator =	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^        gtype_info& operator=(const gtype_info& rhs)$/;"	f	struct:nploid_info::gtype_info
operator =	./src/c++/lib/blt_util/observer.hh	/^    operator=(const self_t& rhs)$/;"	f	struct:notifier
operator =	./src/c++/lib/htsapi/bam_record.hh	/^    operator=(const bam_record& br)$/;"	f	struct:bam_record
operator ==	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    operator==(const GermlineFilterKeeper& rhs) const$/;"	f	struct:GermlineFilterKeeper
operator ==	./src/c++/lib/blt_util/RecordTracker.hh	/^    operator==(const IndelGenotype& rhs) const$/;"	f	struct:IndelGenotype
operator ==	./src/c++/lib/blt_util/align_path.hh	/^    operator==(const path_segment& rhs) const$/;"	f	struct:ALIGNPATH::path_segment
operator ==	./src/c++/lib/blt_util/known_pos_range2.hh	/^    operator==(const known_pos_range2& rhs) const$/;"	f	struct:known_pos_range2
operator ==	./src/c++/lib/blt_util/pos_range.hh	/^    operator==(const pos_range& rhs) const$/;"	f	struct:known_pos_range
operator ==	./src/c++/lib/blt_util/pos_range.hh	/^    operator==(const pos_range& rhs) const$/;"	f	struct:pos_range
operator ==	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    operator==($/;"	f	struct:BaseErrorContextObservationExportStrandObservation
operator ==	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    operator==($/;"	f	struct:StrandBaseCounts
operator ==	./src/c++/lib/htsapi/bam_header_info.hh	/^        operator==(const chrom_info& rhs) const$/;"	f	struct:bam_header_info::chrom_info
operator ==	./src/c++/lib/htsapi/bam_header_info.hh	/^    operator==(const bam_header_info& rhs) const$/;"	f	struct:bam_header_info
operator ==	./src/c++/lib/htsapi/vcf_util.hh	/^    operator==(const VcfGenotype& rhs) const$/;"	f	struct:VcfGenotype
operator ==	./src/c++/lib/starling_common/IndelKey.hh	/^    operator==(const IndelKey& rhs) const$/;"	f	struct:IndelKey
operator ==	./src/c++/lib/starling_common/alignment.hh	/^    operator==(const alignment& rhs) const$/;"	f	struct:alignment
operator ==	./src/c++/lib/starling_common/starling_read_key.hh	/^    operator==(const read_key& rhs) const$/;"	f	struct:read_key
opt_normalize_ln_distro	./src/c++/lib/blt_util/prob_util.hh	/^opt_normalize_ln_distro($/;"	f
oracle_file	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    std::string oracle_file;$/;"	m	struct:starling_site_sim_options
oracle_file	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    std::string oracle_file;$/;"	m	struct:strelka_site_sim_options
order	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        unsigned order;$/;"	m	struct:HtsMergeStreamer::HtsRecordSortData
origin_skip	./src/c++/lib/starling_common/starling_read_align.cpp	/^    bool origin_skip = false;$/;"	m	struct:mca_warnings	file:
otherRec	./src/c++/lib/htsapi/bam_streamer.hh	/^}otherRec;$/;"	t	typeref:struct:__anon8
outputBuffer	./src/c++/lib/applications/starling/VariantPhaser.cpp	/^outputBuffer()$/;"	f	class:VariantPhaser
outputFilename	./src/c++/lib/applications/EstimateVariantErrorRates/EPECOptions.hh	/^    std::string outputFilename;$/;"	m	struct:EPECOptions
outputFilename	./src/c++/lib/applications/GetChromDepth/ChromDepthOptions.hh	/^    std::string outputFilename;$/;"	m	struct:ChromDepthOptions
outputFilename	./src/c++/lib/applications/MergeRunStats/MRSOptions.hh	/^    std::string outputFilename;$/;"	m	struct:MRSOptions
outputFilename	./src/c++/lib/applications/MergeSequenceErrorCounts/MSECOptions.hh	/^    std::string outputFilename;$/;"	m	struct:MSECOptions
outputPrefix	./src/c++/lib/applications/starling/gvcf_options.hh	/^    std::string outputPrefix;$/;"	m	struct:gvcf_options
overlap_map_t	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^typedef std::map<IndelKey,indel_set_t> overlap_map_t;$/;"	t	file:
overlap_map_tick	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^overlap_map_tick($/;"	f	file:
override	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsInfo.hh	/^    void usage(const char* xmessage = 0) const override;$/;"	m	struct:GetSequenceErrorCountsInfo
override	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.hh	/^    void reset() override;$/;"	m	struct:SequenceErrorCountsPosProcessor
override	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^    void process(std::unique_ptr<GermlineIndelLocusInfo> indelLocusPtr) override;$/;"	m	struct:VariantOverlapResolver
override	./src/c++/lib/applications/starling/VariantOverlapResolver.hh	/^    void process(std::unique_ptr<GermlineSiteLocusInfo> siteLocusPtr) override;$/;"	m	struct:VariantOverlapResolver
override	./src/c++/lib/applications/starling/VariantPhaser.hh	/^    void flush_impl() override;$/;"	m	struct:VariantPhaser
override	./src/c++/lib/applications/starling/VariantPhaser.hh	/^    void process(std::unique_ptr<GermlineIndelLocusInfo> locusPtr) override;$/;"	m	struct:VariantPhaser
override	./src/c++/lib/applications/starling/VariantPhaser.hh	/^    void process(std::unique_ptr<GermlineSiteLocusInfo> locusPtr) override;$/;"	m	struct:VariantPhaser
override	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    void flush_impl() override;$/;"	m	struct:gvcf_writer
override	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    void process(std::unique_ptr<GermlineIndelLocusInfo>) override;$/;"	m	struct:gvcf_writer
override	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    void process(std::unique_ptr<GermlineSiteLocusInfo>) override;$/;"	m	struct:gvcf_writer
override	./src/c++/lib/applications/starling/starling_info.hh	/^    void usage(const char* xmessage = 0) const override;$/;"	m	struct:starling_info
override	./src/c++/lib/applications/starling/starling_pos_processor.hh	/^    void reset() override;$/;"	m	struct:starling_pos_processor
override	./src/c++/lib/applications/starling/variant_prefilter_stage.hh	/^    void process(std::unique_ptr<GermlineIndelLocusInfo> locusPtr) override;$/;"	m	struct:variant_prefilter_stage
override	./src/c++/lib/applications/starling/variant_prefilter_stage.hh	/^    void process(std::unique_ptr<GermlineSiteLocusInfo> locusPtr) override;$/;"	m	struct:variant_prefilter_stage
override	./src/c++/lib/applications/strelka/strelka_info.hh	/^    void doc() const override;$/;"	m	struct:strelka_info
override	./src/c++/lib/applications/strelka/strelka_info.hh	/^    void usage(const char* xmessage = 0) const override;$/;"	m	struct:strelka_info
override	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^        const bool isPosPrecedingReportableRange) override;$/;"	m	struct:strelka_pos_processor
override	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^        const pos_t pos) override;$/;"	m	struct:strelka_pos_processor
override	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^    void reset() override;$/;"	m	struct:strelka_pos_processor
override	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_info.hh	/^    void usage(const char* xmessage = nullptr) const override;$/;"	m	struct:snoise_info
override	./src/c++/lib/calibration/RandomForestModel.hh	/^    double getProb(const featureInput_t& features) const override;$/;"	m	struct:RandomForestModel
override	./src/c++/lib/starling_common/prog_info_base.hh	/^    const char* version() const override;$/;"	m	struct:prog_info_base
override	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^                const pos_t pos) override;$/;"	m	struct:starling_pos_processor_base
paramsAcceptable	./src/c++/lib/calibration/IndelErrorModel.hh	/^    bool paramsAcceptable = true;$/;"	m	class:AdaptiveIndelErrorModelLogParams
paramsToArgs	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    paramsToArgs($/;"	f	struct:__anon19::error_minfunc
parseChromDepthOptions	./src/c++/lib/applications/GetChromDepth/ChromDepthOptions.cpp	/^parseChromDepthOptions($/;"	f
parseDSECOptions	./src/c++/lib/applications/DumpSequenceErrorCounts/DSECOptions.cpp	/^parseDSECOptions($/;"	f
parseEPECOptions	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.cpp	/^parseEPECOptions($/;"	f
parseEPECOptions	./src/c++/lib/applications/EstimateVariantErrorRates/EPECOptions.cpp	/^parseEPECOptions($/;"	f
parseMRSOptions	./src/c++/lib/applications/MergeRunStats/MRSOptions.cpp	/^parseMRSOptions($/;"	f
parseMSECOptions	./src/c++/lib/applications/MergeSequenceErrorCounts/MSECOptions.cpp	/^parseMSECOptions($/;"	f
parseOptions	./src/c++/lib/applications/GetChromDepth/ChromDepthOptions.cpp	/^parseOptions($/;"	f	file:
parseOptions	./src/c++/lib/options/AlignmentFileOptionsParser.cpp	/^parseOptions($/;"	f
parseOptions	./src/c++/lib/options/TumorNormalAlignmentFileOptionsParser.cpp	/^parseOptions($/;"	f
parsePloidyFromBed	./src/c++/lib/starling_common/ploidy_util.cpp	/^parsePloidyFromBed(const char* line)$/;"	f
parsePloidyFromBedStrict	./src/c++/lib/starling_common/ploidy_util.cpp	/^parsePloidyFromBedStrict(const char* line)$/;"	f
parsePloidyFromVcf	./src/c++/lib/starling_common/ploidy_util.cpp	/^parsePloidyFromVcf($/;"	f
parseTier2Options	./src/c++/lib/starling_common/Tier2OptionsParser.cpp	/^parseTier2Options($/;"	f
parseTreeNode	./src/c++/lib/calibration/RandomForestModel.cpp	/^parseTreeNode($/;"	f	class:RandomForestModel
parse_bam_region	./src/c++/lib/htsapi/bam_header_util.cpp	/^parse_bam_region($/;"	f
parse_bam_region_from_hdr	./src/c++/lib/htsapi/bam_header_util.cpp	/^parse_bam_region_from_hdr($/;"	f
parse_chrom_depth	./src/c++/lib/blt_util/chrom_depth_map.cpp	/^parse_chrom_depth(const std::string& chrom_depth_file,$/;"	f
parse_double	./src/c++/lib/blt_util/parse_util.cpp	/^parse_double($/;"	f	namespace:illumina::blt_util
parse_double_core	./src/c++/lib/blt_util/parse_util.cpp	/^parse_double_core($/;"	f	namespace:illumina::blt_util
parse_double_rvalue	./src/c++/lib/blt_util/parse_util.cpp	/^parse_double_rvalue($/;"	f	namespace:illumina::blt_util
parse_double_str	./src/c++/lib/blt_util/parse_util.cpp	/^parse_double_str($/;"	f	namespace:illumina::blt_util
parse_exception	./src/c++/lib/blt_util/parse_util.cpp	/^parse_exception(const char* type_label,$/;"	f	file:
parse_gt	./src/c++/lib/htsapi/vcf_util.cpp	/^parse_gt(const char* gt,$/;"	f
parse_int	./src/c++/lib/blt_util/parse_util.cpp	/^parse_int($/;"	f	namespace:illumina::blt_util
parse_int_core	./src/c++/lib/blt_util/parse_util.cpp	/^parse_int_core($/;"	f	namespace:illumina::blt_util
parse_int_rvalue	./src/c++/lib/blt_util/parse_util.cpp	/^parse_int_rvalue($/;"	f	namespace:illumina::blt_util
parse_int_str	./src/c++/lib/blt_util/parse_util.cpp	/^parse_int_str($/;"	f	namespace:illumina::blt_util
parse_line	./src/c++/lib/blt_util/istream_line_splitter.cpp	/^parse_line()$/;"	f	class:istream_line_splitter
parse_long	./src/c++/lib/blt_util/parse_util.cpp	/^parse_long($/;"	f	namespace:illumina::blt_util
parse_long_core	./src/c++/lib/blt_util/parse_util.cpp	/^parse_long_core($/;"	f	namespace:illumina::blt_util
parse_long_rvalue	./src/c++/lib/blt_util/parse_util.cpp	/^parse_long_rvalue($/;"	f	namespace:illumina::blt_util
parse_long_str	./src/c++/lib/blt_util/parse_util.cpp	/^parse_long_str($/;"	f	namespace:illumina::blt_util
parse_type	./src/c++/lib/blt_util/parse_util.hh	/^parse_type(const char*&)$/;"	f	namespace:illumina::blt_util
parse_type	./src/c++/lib/blt_util/parse_util.hh	/^parse_type<double>(const char*& s)$/;"	f	namespace:illumina::blt_util
parse_type	./src/c++/lib/blt_util/parse_util.hh	/^parse_type<int>(const char*& s)$/;"	f	namespace:illumina::blt_util
parse_type	./src/c++/lib/blt_util/parse_util.hh	/^parse_type<long>(const char*& s)$/;"	f	namespace:illumina::blt_util
parse_type	./src/c++/lib/blt_util/parse_util.hh	/^parse_type<unsigned>(const char*& s)$/;"	f	namespace:illumina::blt_util
parse_unsigned	./src/c++/lib/blt_util/parse_util.cpp	/^parse_unsigned($/;"	f	namespace:illumina::blt_util
parse_unsigned_core	./src/c++/lib/blt_util/parse_util.cpp	/^parse_unsigned_core($/;"	f	namespace:illumina::blt_util
parse_unsigned_rvalue	./src/c++/lib/blt_util/parse_util.cpp	/^parse_unsigned_rvalue($/;"	f	namespace:illumina::blt_util
parse_unsigned_str	./src/c++/lib/blt_util/parse_util.cpp	/^parse_unsigned_str($/;"	f	namespace:illumina::blt_util
path	./src/c++/lib/starling_common/alignment.hh	/^    ALIGNPATH::path_t path;$/;"	m	struct:alignment
path_compare	./src/c++/lib/starling_common/test/starling_read_align_test.cpp	/^path_compare(const std::string& expect,$/;"	f	file:
path_segment	./src/c++/lib/blt_util/align_path.hh	/^    path_segment(const align_t t = NONE,$/;"	f	struct:ALIGNPATH::path_segment
path_segment	./src/c++/lib/blt_util/align_path.hh	/^struct path_segment$/;"	s	namespace:ALIGNPATH
path_t	./src/c++/lib/blt_util/align_path.hh	/^typedef std::vector<path_segment> path_t;$/;"	t	namespace:ALIGNPATH
patternSize	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^    unsigned patternSize = 1;$/;"	m	struct:ReferenceSTRContext	file:
pdata_t	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    typedef RangeMap<pos_t,snp_pos_info,ClearT<snp_pos_info>> pdata_t;$/;"	t	struct:pos_basecall_buffer
pdcaller	./src/c++/lib/blt_common/blt_shared.hh	/^    pdcaller() const$/;"	f	struct:blt_deriv_options
phaseSetId	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    pos_t phaseSetId = -1;$/;"	m	struct:LocusSampleInfo
phredLoghood	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    std::vector<unsigned> phredLoghood;$/;"	m	struct:diploid_genotype
phred_to_error_prob	./src/c++/lib/blt_util/qscore.hh	/^phred_to_error_prob(const double val)$/;"	f
phred_to_mapped_error_prob	./src/c++/lib/blt_util/qscore.hh	/^phred_to_mapped_error_prob(const double basecall_val,$/;"	f
pi	./src/c++/lib/blt_common/snp_pos_info.hh	/^    const snp_pos_info& pi;$/;"	m	struct:extended_pos_info
pileup_pos_reads	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^pileup_pos_reads(const pos_t pos)$/;"	f	class:starling_pos_processor_base
pileup_read_segment	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^pileup_read_segment($/;"	f	class:starling_pos_processor_base
pinfo	./src/c++/lib/blt_common/blt_arg_parse_util.hh	/^    const prog_info& pinfo;$/;"	m	struct:arg_data
pis	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    std::array<snp_pos_info,BASE_ID::SIZE> pis;$/;"	m	struct:EmptyPosSet
piter	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    typedef starling_read_buffer::segment_group_t::const_iterator piter;$/;"	t	struct:read_segment_iter
ploidy	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    int ploidy;$/;"	m	struct:diploid_genotype
ploidy	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.hh	/^    unsigned ploidy;$/;"	m	struct:nploid_genotype
ploidy	./src/c++/lib/blt_util/nploid_genotype_util.hh	/^    ploidy() const$/;"	f	struct:nploid_info
ploidyRegions	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        RegionPayloadTracker<unsigned> ploidyRegions;$/;"	m	struct:starling_pos_processor_base::sample_info
ploidy_region_vcf	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::string ploidy_region_vcf;$/;"	m	struct:starling_base_options
poly	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^        blt_float_t poly[DIGT::SIZE];$/;"	m	struct:pprob_digt_caller::prior_set
poly	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    result_set poly;$/;"	m	struct:diploid_genotype
pos	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    pos_t pos = 0;$/;"	m	struct:LocusInfo
pos	./src/c++/lib/blt_util/RecordTracker.hh	/^    pos_t pos;$/;"	m	struct:IndelGenotype
pos	./src/c++/lib/htsapi/bam_record.hh	/^    int pos() const$/;"	f	struct:bam_record
pos	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint32_t pos;$/;"	m	struct:__anon7
pos	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint32_t pos;$/;"	m	struct:__anon8
pos	./src/c++/lib/htsapi/vcf_record.hh	/^    int pos = 0;$/;"	m	struct:vcf_record
pos	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        pos_t pos;$/;"	m	struct:HtsMergeStreamer::HtsRecordSortData
pos	./src/c++/lib/starling_common/IndelKey.hh	/^    pos_t pos;$/;"	m	struct:IndelKey
pos	./src/c++/lib/starling_common/alignment.hh	/^    pos_t pos = 0;$/;"	m	struct:alignment
pos	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^    pos_t pos; \/\/\/< Reference position$/;"	m	struct:__anon10::ref_map_type	file:
pos_basecall_buffer	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^    pos_basecall_buffer($/;"	f	struct:pos_basecall_buffer
pos_basecall_buffer	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^struct pos_basecall_buffer$/;"	s
pos_group_t	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    typedef std::map<pos_t,segment_group_t> pos_group_t;$/;"	t	struct:starling_read_buffer
pos_processor_base	./src/c++/lib/blt_util/pos_processor_base.hh	/^    pos_processor_base()$/;"	f	struct:pos_processor_base
pos_processor_base	./src/c++/lib/blt_util/pos_processor_base.hh	/^struct pos_processor_base$/;"	s
pos_range	./src/c++/lib/blt_util/pos_range.hh	/^    pos_range() : is_begin_pos(false), is_end_pos(false), begin_pos(0), end_pos(0) {}$/;"	f	struct:pos_range
pos_range	./src/c++/lib/blt_util/pos_range.hh	/^    pos_range(const pos_t bp,const pos_t ep)$/;"	f	struct:pos_range
pos_range	./src/c++/lib/blt_util/pos_range.hh	/^struct pos_range$/;"	s
pos_stage_id	./src/c++/lib/blt_util/stage_manager.hh	/^    typedef std::pair<unsigned,int> pos_stage_id;$/;"	t	struct:stage_data
pos_t	./src/c++/lib/blt_util/blt_types.hh	/^typedef int32_t pos_t;$/;"	t
pos_win_avgs	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        pos_win_avgs()$/;"	f	struct:starling_pos_processor_base::pos_win_avgs
pos_win_avgs	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    struct pos_win_avgs$/;"	s	struct:starling_pos_processor_base
positionIterator	./src/c++/lib/starling_common/IndelBuffer.hh	/^    positionIterator(const pos_t pos) const$/;"	f	struct:IndelBuffer
positionIterator	./src/c++/lib/starling_common/IndelBuffer.hh	/^    positionIterator(const pos_t pos)$/;"	f	struct:IndelBuffer
position_allele_distro_loghood_minfunc	./src/c++/lib/blt_common/position_loghood_minfunc.hh	/^    position_allele_distro_loghood_minfunc(const snp_pos_info& pi,$/;"	f	struct:position_allele_distro_loghood_minfunc
position_allele_distro_loghood_minfunc	./src/c++/lib/blt_common/position_loghood_minfunc.hh	/^struct position_allele_distro_loghood_minfunc : public codemin::minfunc_interface<double>$/;"	s
position_nonref_2allele_test	./src/c++/lib/blt_common/position_nonref_2allele_test.cpp	/^position_nonref_2allele_test($/;"	f
position_nonref_freq_loghood_minfunc	./src/c++/lib/blt_common/position_loghood_minfunc.hh	/^    position_nonref_freq_loghood_minfunc(const snp_pos_info& pi) : _pi(pi) {}$/;"	f	struct:position_nonref_freq_loghood_minfunc
position_nonref_freq_loghood_minfunc	./src/c++/lib/blt_common/position_loghood_minfunc.hh	/^struct position_nonref_freq_loghood_minfunc : public codemin::minfunc_1d_interface<double>$/;"	s
position_nonref_test	./src/c++/lib/blt_common/position_nonref_test.cpp	/^position_nonref_test(const snp_pos_info& pi,$/;"	f
position_snp_call_lrt	./src/c++/lib/blt_common/position_snp_call_lrt.cpp	/^position_snp_call_lrt(const double alpha,$/;"	f
position_snp_call_pprob_digt	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^position_snp_call_pprob_digt($/;"	f	class:pprob_digt_caller
position_snp_call_pprob_monogt	./src/c++/lib/blt_common/position_snp_call_pprob_monogt.cpp	/^position_snp_call_pprob_monogt(const double theta,$/;"	f
position_snp_call_pprob_nploid	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.cpp	/^position_snp_call_pprob_nploid(const double snp_prob,$/;"	f
position_somatic_snv_call	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.cpp	/^position_somatic_snv_call($/;"	f	class:somatic_snv_caller_strand_grid
position_strand_coverage_anomaly	./src/c++/lib/blt_common/position_strand_coverage_anomaly.cpp	/^position_strand_coverage_anomaly(const double alpha,$/;"	f
position_strand_distro_anomaly	./src/c++/lib/blt_common/position_strand_distro_anomaly.cpp	/^position_strand_distro_anomaly(const double alpha,$/;"	f
position_strand_distro_anomaly_lrt	./src/c++/lib/blt_common/position_strand_distro_anomaly_lrt.cpp	/^position_strand_distro_anomaly_lrt(const double alpha,$/;"	f
position_strand_distro_anomaly_lrt_expert	./src/c++/lib/blt_common/position_strand_distro_anomaly_lrt.cpp	/^position_strand_distro_anomaly_lrt_expert(const snp_pos_info& pi,$/;"	f
position_strand_distro_anomaly_pval	./src/c++/lib/blt_common/position_strand_distro_anomaly.cpp	/^position_strand_distro_anomaly_pval(const snp_pos_info& pi,$/;"	f
post_align_clear_pos	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    post_align_clear_pos(const pos_t \/*pos*\/) {}$/;"	f	struct:starling_pos_processor_base
post_catch	./src/c++/lib/common/Program.cpp	/^post_catch($/;"	f	class:illumina::Program
pprob	./src/c++/lib/blt_common/position_snp_call_pprob_monogt.hh	/^    double pprob[MONOGT::SIZE];$/;"	m	struct:monoploid_genotype
pprob	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.hh	/^    std::vector<double> pprob;$/;"	m	struct:nploid_genotype
pprob_digt_caller	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^pprob_digt_caller($/;"	f	class:pprob_digt_caller
pprob_digt_caller	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^struct pprob_digt_caller : private boost::noncopyable$/;"	s
pre_insert	./src/c++/lib/blt_util/window_util.hh	/^    pre_insert()$/;"	f	struct:window_average
primary_filter	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned primary_filter = 0;$/;"	m	struct:blt_read_counts
printExtendedContext	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModel1.cpp	/^printExtendedContext($/;"	f	file:
printSampleAD	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^printSampleAD($/;"	f	file:
printSeq	./src/c++/lib/blt_util/seq_printer.cpp	/^printSeq($/;"	f
printSeq	./src/c++/lib/blt_util/seq_printer.hh	/^printSeq($/;"	f
print_known_counts	./src/c++/lib/blt_common/snp_pos_info.cpp	/^print_known_counts(std::ostream& os,$/;"	f	class:snp_pos_info
print_known_qscore	./src/c++/lib/blt_common/snp_pos_info.cpp	/^print_known_qscore(std::ostream& os,$/;"	f	class:snp_pos_info
print_readSet	./src/c++/lib/assembly/SmallAssembler.cpp	/^print_readSet($/;"	f	file:
print_stringSet	./src/c++/lib/assembly/IterativeAssembler.cpp	/^void print_stringSet(const std::set<std::string>& strSet)$/;"	f	file:
print_unsignSet	./src/c++/lib/assembly/IterativeAssembler.cpp	/^void print_unsignSet(const std::set<unsigned>& unsignSet)$/;"	f	file:
priorDeleteLength	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^    pos_t priorDeleteLength = 0;$/;"	m	struct:AlignmentInfo	file:
priorInsertLength	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^    pos_t priorInsertLength = 0;$/;"	m	struct:AlignmentInfo	file:
priorMatchLength	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^    pos_t priorMatchLength = 0;$/;"	m	struct:AlignmentInfo	file:
priorNAlleleDiploid	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    double priorNAlleleDiploid[AG_GENOTYPE::SIZE];$/;"	m	struct:ContextGenotypePriors
priorNAlleleDiploidPolymorphic	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    double priorNAlleleDiploidPolymorphic[AG_GENOTYPE::SIZE];$/;"	m	struct:ContextGenotypePriors
priorNAlleleHaploid	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    double priorNAlleleHaploid[AG_GENOTYPE::SIZE];$/;"	m	struct:ContextGenotypePriors
priorNAlleleHaploidPolymorphic	./src/c++/lib/starling_common/AlleleGroupGenotype.hh	/^    double priorNAlleleHaploidPolymorphic[AG_GENOTYPE::SIZE];$/;"	m	struct:ContextGenotypePriors
prior_group	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    typedef std::array<prior_set,N_BASE+1> prior_group;$/;"	t	struct:pprob_digt_caller
prior_set	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^        prior_set()$/;"	f	struct:pprob_digt_caller::prior_set
prior_set	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    struct prior_set$/;"	s	struct:pprob_digt_caller
probPow	./src/c++/lib/calibration/VariantScoringModelMetadata.hh	/^    double probPow = 1.;$/;"	m	struct:VariantScoringModelMetadata
probScale	./src/c++/lib/calibration/VariantScoringModelMetadata.hh	/^    double probScale = 1.;$/;"	m	struct:VariantScoringModelMetadata
prob_comp	./src/c++/lib/blt_util/prob_util.hh	/^prob_comp(It begin,$/;"	f
procFinished	./src/c++/lib/applications/starling/starling_run.cpp	/^    int *procFinished;$/;"	m	struct:workerData	file:
process	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^process(std::unique_ptr<GermlineIndelLocusInfo> indelLocusPtr)$/;"	f	class:VariantOverlapResolver
process	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^process(std::unique_ptr<GermlineSiteLocusInfo> siteLocusPtr)$/;"	f	class:VariantOverlapResolver
process	./src/c++/lib/applications/starling/VariantPhaser.cpp	/^process(std::unique_ptr<GermlineIndelLocusInfo> locusPtr)$/;"	f	class:VariantPhaser
process	./src/c++/lib/applications/starling/VariantPhaser.cpp	/^process(std::unique_ptr<GermlineSiteLocusInfo> locusPtr)$/;"	f	class:VariantPhaser
process	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^process(std::unique_ptr<GermlineIndelLocusInfo> locusPtr)$/;"	f	class:gvcf_writer
process	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^process(std::unique_ptr<GermlineSiteLocusInfo> locusPtr)$/;"	f	class:gvcf_writer
process	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^    virtual void process(std::unique_ptr<GermlineIndelLocusInfo> ii)$/;"	f	class:variant_pipe_stage_base
process	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^    virtual void process(std::unique_ptr<GermlineSiteLocusInfo> si)$/;"	f	class:variant_pipe_stage_base
process	./src/c++/lib/applications/starling/variant_prefilter_stage.cpp	/^process(std::unique_ptr<GermlineIndelLocusInfo> locusPtr)$/;"	f	class:variant_prefilter_stage
process	./src/c++/lib/applications/starling/variant_prefilter_stage.cpp	/^process(std::unique_ptr<GermlineSiteLocusInfo> locusPtr)$/;"	f	class:variant_prefilter_stage
processActiveRegion	./src/c++/lib/starling_common/ActiveRegionDetector.cpp	/^ActiveRegionDetector::processActiveRegion()$/;"	f	class:ActiveRegionDetector
processHaplotypes	./src/c++/lib/starling_common/ActiveRegion.cpp	/^void ActiveRegion::processHaplotypes()$/;"	f	class:ActiveRegion
processHaplotypesWithAssembly	./src/c++/lib/starling_common/ActiveRegion.cpp	/^bool ActiveRegion::processHaplotypesWithAssembly()$/;"	f	class:ActiveRegion
processHaplotypesWithCounting	./src/c++/lib/starling_common/ActiveRegion.cpp	/^bool ActiveRegion::processHaplotypesWithCounting()$/;"	f	class:ActiveRegion
processInputReadAlignment	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^processInputReadAlignment($/;"	f
processLocus	./src/c++/lib/applications/starling/VariantPhaser.cpp	/^void VariantPhaser::processLocus(std::unique_ptr<T> locusPtr)$/;"	f	class:VariantPhaser
processOverlappingVariants	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^processOverlappingVariants()$/;"	f	class:VariantOverlapResolver
processOverlappingVariantsImplementation	./src/c++/lib/applications/starling/VariantOverlapResolver.cpp	/^processOverlappingVariantsImplementation()$/;"	f	class:VariantOverlapResolver
processSelectedHaplotypes	./src/c++/lib/starling_common/ActiveRegion.cpp	/^void ActiveRegion::processSelectedHaplotypes($/;"	f	class:ActiveRegion
processTrueIndelVariantRecord	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsRun.cpp	/^processTrueIndelVariantRecord($/;"	f	file:
process_candidate_indel	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^process_candidate_indel($/;"	f
process_edge_delete	./src/c++/lib/starling_common/starling_pos_processor_indel_util.cpp	/^process_edge_delete($/;"	f	file:
process_edge_insert	./src/c++/lib/starling_common/starling_pos_processor_indel_util.cpp	/^process_edge_insert($/;"	f	file:
process_pos	./src/c++/lib/blt_util/stage_manager.cpp	/^process_pos(const pos_t pos)$/;"	f	class:stage_manager
process_pos	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^    process_pos(const int stage_no,$/;"	f	struct:test_pos_processor
process_pos	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^process_pos(const int stage_no,$/;"	f	class:starling_pos_processor_base
process_pos_error_counts	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^process_pos_error_counts($/;"	f	class:SequenceErrorCountsPosProcessor
process_pos_indel	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^process_pos_indel($/;"	f	class:starling_pos_processor
process_pos_indel_continuous	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^process_pos_indel_continuous(const pos_t pos)$/;"	f	class:starling_pos_processor
process_pos_indel_digt	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^process_pos_indel_digt(const pos_t pos)$/;"	f	class:starling_pos_processor
process_pos_indel_somatic	./src/c++/lib/applications/strelka/strelka_pos_processor.cpp	/^process_pos_indel_somatic(const pos_t pos)$/;"	f	class:strelka_pos_processor
process_pos_sample_stats	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^process_pos_sample_stats($/;"	f	class:starling_pos_processor_base
process_pos_snp	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^process_pos_snp(const pos_t pos)$/;"	f	class:starling_pos_processor
process_pos_snp_continuous	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^process_pos_snp_continuous(const pos_t pos)$/;"	f	class:starling_pos_processor
process_pos_snp_digt	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^process_pos_snp_digt($/;"	f	class:starling_pos_processor
process_pos_snp_snoise	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_pos_processor.cpp	/^process_pos_snp_snoise($/;"	f	class:snoise_pos_processor
process_pos_snp_somatic	./src/c++/lib/applications/strelka/strelka_pos_processor.cpp	/^process_pos_snp_somatic(const pos_t pos)$/;"	f	class:strelka_pos_processor
process_pos_stats	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^process_pos_stats($/;"	f	class:starling_pos_processor_base
process_pos_variants	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^process_pos_variants($/;"	f	class:starling_pos_processor_base
process_pos_variants_impl	./src/c++/lib/applications/strelka/strelka_pos_processor.cpp	/^process_pos_variants_impl($/;"	f	class:strelka_pos_processor
process_simple_indel	./src/c++/lib/starling_common/starling_pos_processor_indel_util.cpp	/^process_simple_indel($/;"	f	file:
process_swap	./src/c++/lib/starling_common/starling_pos_processor_indel_util.cpp	/^process_swap($/;"	f	file:
prog_info	./src/c++/lib/blt_util/prog_info.hh	/^    prog_info() {}$/;"	f	struct:prog_info
prog_info	./src/c++/lib/blt_util/prog_info.hh	/^struct prog_info$/;"	s
prog_info_base	./src/c++/lib/starling_common/prog_info_base.hh	/^struct prog_info_base : public prog_info$/;"	s
push	./src/c++/lib/blt_util/CircularCounter.hh	/^    push(const bool val)$/;"	f	struct:CircularCounter
push	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^    push(const char r, const char f, const char i)$/;"	f	struct:align_printer
put_record	./src/c++/lib/htsapi/bam_dumper.cpp	/^put_record(const bam1_t* brec)$/;"	f	class:bam_dumper
q2lncompe	./src/c++/lib/blt_util/qscore_cache.hh	/^    std::array<double,MAX_QSCORE+1> q2lncompe;$/;"	m	struct:qphred_cache
q2lne	./src/c++/lib/blt_util/qscore_cache.hh	/^    std::array<double,MAX_QSCORE+1> q2lne;$/;"	m	struct:qphred_cache
q2p	./src/c++/lib/blt_util/qscore_cache.hh	/^    std::array<double,MAX_QSCORE+1> q2p;$/;"	m	struct:qphred_cache
qc	./src/c++/lib/blt_util/qscore_cache.hh	/^    qc()$/;"	f	struct:qphred_cache
qname	./src/c++/lib/htsapi/bam_record.hh	/^    qname() const$/;"	f	struct:bam_record
qname	./src/c++/lib/starling_common/starling_read_key.hh	/^    qname() const$/;"	f	struct:read_key
qphred	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    int qphred = 0;$/;"	m	struct:result_set
qphred_cache	./src/c++/lib/blt_util/qscore_cache.cpp	/^qphred_cache()$/;"	f	class:qphred_cache
qphred_cache	./src/c++/lib/blt_util/qscore_cache.hh	/^struct qphred_cache$/;"	s
qphred_to_error_prob	./src/c++/lib/blt_util/qscore.hh	/^qphred_to_error_prob(const int qscore)$/;"	f
qphred_to_ln_comp_error_prob	./src/c++/lib/blt_util/qscore.hh	/^qphred_to_ln_comp_error_prob(const int qscore)$/;"	f
qphred_to_ln_error_prob	./src/c++/lib/blt_util/qscore.hh	/^qphred_to_ln_error_prob(const int qscore)$/;"	f
qphred_to_mapped_qphred	./src/c++/lib/blt_util/qscore.hh	/^qphred_to_mapped_qphred(const int basecall_val,$/;"	f
qscore	./src/c++/lib/blt_common/snp_pos_info.hh	/^uint16_t qscore:$/;"	m	struct:base_call
qscore_bits	./src/c++/lib/blt_common/snp_pos_info.hh	/^    enum { qscore_bits = 6 };$/;"	e	enum:base_call::__anon30
qscore_check	./src/c++/lib/blt_util/qscore_cache.hh	/^    qscore_check(const int qscore,$/;"	f	struct:qphred_cache
qscore_check_int	./src/c++/lib/blt_util/qscore_cache.hh	/^    qscore_check_int(const int qscore)$/;"	f	struct:qphred_cache
qscore_max	./src/c++/lib/blt_common/snp_pos_info.cpp	/^const unsigned base_call::qscore_max = ((1 << base_call::qscore_bits) - 1);$/;"	m	class:base_call	file:
qscore_max	./src/c++/lib/blt_common/snp_pos_info.hh	/^    static const unsigned qscore_max;$/;"	m	struct:base_call
qual	./src/c++/lib/blt_common/hapscore.hh	/^    qual(const unsigned i) const$/;"	f	struct:hap_cand
qual	./src/c++/lib/htsapi/bam_record.hh	/^    const uint8_t* qual() const$/;"	f	struct:bam_record
qual	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint8_t qual;$/;"	m	struct:__anon7
qual	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint8_t qual;$/;"	m	struct:__anon8
qual	./src/c++/lib/starling_common/starling_read_segment.cpp	/^qual() const$/;"	f	class:read_segment
qualLevels	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    std::vector<uint16_t> qualLevels;$/;"	m	struct:BaseErrorContextObservationExportData
qual_count_t	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    typedef std::map<uint16_t,unsigned> qual_count_t;$/;"	t	struct:StrandBaseCounts
quals	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint8_t quals[120];$/;"	m	struct:__anon7
quals	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint8_t quals[120];$/;"	m	struct:__anon8
queryBegin	./src/c++/lib/alignment/AlignerUtil.hh	/^    unsigned queryBegin = 0;$/;"	m	struct:BackTrace
queueItem	./src/c++/lib/starling_common/HtsMergeStreamer.cpp	/^queueItem($/;"	f	class:HtsMergeStreamer
queueNextItem	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    queueNextItem()$/;"	f	struct:HtsMergeStreamer
queue_site_record	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^queue_site_record($/;"	f	class:gvcf_writer
queue_t	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    typedef std::priority_queue<HtsRecordSortData> queue_t;$/;"	t	struct:HtsMergeStreamer
qval_distro	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^    qval_distro($/;"	f	struct:qval_distro
qval_distro	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^    qval_distro(const char* distro_file)$/;"	f	struct:qval_distro
qval_distro	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^struct qval_distro$/;"	s	file:
qval_distro	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^    qval_distro($/;"	f	struct:qval_distro
qval_distro	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^    qval_distro(const char* distro_file)$/;"	f	struct:qval_distro
qval_distro	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^struct qval_distro$/;"	s	file:
qval_file	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    std::string qval_file;$/;"	m	struct:starling_site_sim_options
qval_file	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    std::string qval_file;$/;"	m	struct:strelka_site_sim_options
r1	./src/c++/lib/blt_common/ref_context.cpp	/^    char r1,r2;$/;"	m	struct:ihpol_data	file:
r2	./src/c++/lib/blt_common/ref_context.cpp	/^    char r1,r2;$/;"	m	struct:ihpol_data	file:
random	./src/c++/lib/blt_util/compat_unistd.h	16;"	d
random_cdf_variate	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^random_cdf_variate(const double cdf[],$/;"	f	file:
random_cdf_variate	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^random_cdf_variate(const double cdf[],$/;"	f	file:
range	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    range() const$/;"	f	struct:GermlineIndelLocusInfo
rangeIterator	./src/c++/lib/starling_common/IndelBuffer.cpp	/^rangeIterator($/;"	f	class:IndelBuffer
rank	./src/c++/lib/applications/starling/starling_run.cpp	/^    int numTasks, rank;$/;"	m	struct:workerData	file:
rank	./src/c++/lib/htsapi/bam_streamer.hh	/^    int rank;$/;"	m	struct:bam_streamer
rankOrthogonalAllelesInSample	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^rankOrthogonalAllelesInSample($/;"	f
ranksum	./src/c++/lib/blt_util/ranksum.hh	/^class ranksum$/;"	c
ranksumObs	./src/c++/lib/blt_util/fastRanksum.hh	/^        ranksumObs() :$/;"	f	struct:fastRanksum::ranksumObs
ranksumObs	./src/c++/lib/blt_util/fastRanksum.hh	/^    struct ranksumObs$/;"	s	struct:fastRanksum
ranksumObs	./src/c++/lib/blt_util/ranksum.hh	/^    ranksumObs() :$/;"	f	struct:ranksumObs
ranksumObs	./src/c++/lib/blt_util/ranksum.hh	/^struct ranksumObs$/;"	s
rawPileup	./src/c++/lib/starling_common/PileupCleaner.hh	/^    rawPileup() const$/;"	f	struct:CleanedPileup
rawPos	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    double rawPos = 0;$/;"	m	struct:GermlineSiteSampleInfo
raw_cigar	./src/c++/lib/htsapi/bam_record.hh	/^    const uint32_t* raw_cigar() const$/;"	f	struct:bam_record
rc_segment_bam_seq	./src/c++/lib/htsapi/bam_seq.hh	/^    rc_segment_bam_seq(const reference_contig_segment& r)$/;"	f	struct:rc_segment_bam_seq
rc_segment_bam_seq	./src/c++/lib/htsapi/bam_seq.hh	/^struct rc_segment_bam_seq : public bam_seq_base$/;"	s
rdist	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^static rdist_t rdist;$/;"	v	file:
rdist	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^static rdist_t rdist;$/;"	v	file:
rdist_t	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^typedef boost::uniform_real<> rdist_t;$/;"	t	file:
rdist_t	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^typedef boost::uniform_real<> rdist_t;$/;"	t	file:
read	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^    char read;$/;"	m	struct:align_position	file:
readBuffer	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        starling_read_buffer readBuffer;$/;"	m	struct:starling_pos_processor_base::sample_info
readChromDepthFromAlignment	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^readChromDepthFromAlignment($/;"	f
readConfidentSupportThreshold	./src/c++/lib/starling_common/starling_base_shared.hh	/^    PrettyFloat<double> readConfidentSupportThreshold = PrettyFloat<double>("0.51");$/;"	m	struct:starling_base_options
readPos	./src/c++/lib/blt_common/snp_pos_info.hh	/^        uint16_t readPos;$/;"	m	struct:snp_pos_info::ReadPositionInfo
readPos	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^    pos_t readPos = 0;$/;"	m	struct:AlignmentInfo	file:
readPosLength	./src/c++/lib/blt_common/snp_pos_info.hh	/^        uint16_t readPosLength;$/;"	m	struct:snp_pos_info::ReadPositionInfo
readSegmentsForHaplotypeGeneration	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    std::vector<std::pair<align_id_t, std::string>> readSegmentsForHaplotypeGeneration;$/;"	m	struct:ActiveRegionReadInfo
read_base_mismatch_info	./src/c++/lib/starling_common/read_mismatch_info.hh	/^struct read_base_mismatch_info$/;"	s
read_data_t	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    typedef std::map<align_id_t,starling_read*> read_data_t;$/;"	t	struct:starling_read_buffer
read_id_counter	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    read_id_counter() : _head_read_id(0) {}$/;"	f	struct:read_id_counter
read_id_counter	./src/c++/lib/starling_common/starling_read_buffer.hh	/^struct read_id_counter$/;"	s
read_key	./src/c++/lib/starling_common/starling_read_key.hh	/^    read_key(const bam_record& br) : _br_ptr(&br) {}$/;"	f	struct:read_key
read_key	./src/c++/lib/starling_common/starling_read_key.hh	/^struct read_key$/;"	s
read_length	./src/c++/lib/starling_common/IndelData.hh	/^    uint16_t read_length;$/;"	m	struct:ReadPathScores
read_mismatch_info	./src/c++/lib/starling_common/read_mismatch_info.hh	/^typedef std::vector<read_base_mismatch_info> read_mismatch_info;$/;"	t
read_no	./src/c++/lib/htsapi/bam_record.hh	/^    int read_no() const$/;"	f	struct:bam_record
read_no	./src/c++/lib/starling_common/starling_read_key.hh	/^    read_no() const$/;"	f	struct:read_key
read_path_lnp	./src/c++/lib/starling_common/IndelData.hh	/^    score_t read_path_lnp;$/;"	m	struct:IndelSampleData
read_pos	./src/c++/lib/blt_common/snp_pos_info.hh	/^    uint16_t read_pos; \/\/ zero-indexed cycle number$/;"	m	struct:base_call
read_pos	./src/c++/lib/starling_common/IndelData.hh	/^    int16_t read_pos;$/;"	m	struct:ReadPathScores
read_pos_ranksum	./src/c++/lib/blt_common/snp_pos_info.hh	/^    fastRanksum read_pos_ranksum;$/;"	m	struct:snp_pos_info
read_record	./src/c++/lib/blt_util/read_record.hh	/^struct read_record : private boost::noncopyable$/;"	s
read_segment	./src/c++/lib/starling_common/starling_read_segment.hh	/^    read_segment($/;"	f	struct:read_segment
read_segment	./src/c++/lib/starling_common/starling_read_segment.hh	/^struct read_segment$/;"	s
read_segment_iter	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    read_segment_iter(starling_read_buffer& buff,$/;"	f	struct:read_segment_iter
read_segment_iter	./src/c++/lib/starling_common/starling_read_buffer.hh	/^struct read_segment_iter$/;"	s
read_size	./src/c++/lib/blt_common/snp_pos_info.hh	/^    uint16_t read_size;$/;"	m	struct:base_call
read_size	./src/c++/lib/htsapi/bam_record.hh	/^    unsigned read_size() const$/;"	f	struct:bam_record
read_size	./src/c++/lib/starling_common/starling_read_segment.hh	/^    unsigned read_size() const$/;"	f	struct:read_segment
read_streamer	./src/c++/lib/blt_util/read_streamer.hh	/^struct read_streamer : private boost::noncopyable$/;"	s
readpos_ranksum	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    fastRanksum readpos_ranksum;$/;"	m	struct:AlleleSampleReportInfo
realignAndScoreRead	./src/c++/lib/starling_common/starling_read_align.cpp	/^realignAndScoreRead($/;"	f
realign_bam_ptr	./src/c++/lib/starling_common/starling_streams_base.hh	/^    realign_bam_ptr(const unsigned sampleIndex) const$/;"	f	struct:starling_streams_base
realignedReadFilenamePrefix	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::string realignedReadFilenamePrefix;$/;"	m	struct:starling_base_options
realignment	./src/c++/lib/starling_common/starling_read_segment.hh	/^    alignment realignment;$/;"	m	struct:read_segment
realpath	./src/c++/lib/blt_util/compat_util_win32_realpath.c	/^realpath( const char * name, char * resolved )$/;"	f
rebuffer_pos_reads	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^rebuffer_pos_reads(const pos_t pos)$/;"	f	class:starling_pos_processor_base
rebuffer_read_segment	./src/c++/lib/starling_common/starling_read_buffer.cpp	/^rebuffer_read_segment(const align_id_t read_id,$/;"	f	class:starling_read_buffer
recieve_notification	./src/c++/lib/blt_util/test/observer_test.cpp	/^    recieve_notification(const notifier<int>&,$/;"	f	struct:observer_test	file:
record_no	./src/c++/lib/htsapi/bam_streamer.hh	/^    unsigned record_no() const$/;"	f	struct:bam_streamer
record_no	./src/c++/lib/htsapi/hts_streamer.hh	/^    record_no() const$/;"	f	struct:hts_streamer
ref	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModel1.cpp	/^    double ref = 0;$/;"	m	struct:__anon23::SignalGroupTotal	file:
ref	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^    double ref = 0;$/;"	m	struct:__anon20::SignalGroupTotal	file:
ref	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^    double ref = 0;$/;"	m	struct:__anon18::SignalGroupTotal	file:
ref	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^    double ref = 0;$/;"	m	struct:__anon26::SignalGroupTotal	file:
ref	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    double ref = 0;$/;"	m	struct:__anon22::SignalGroupTotal	file:
ref	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    double ref = 0;$/;"	m	struct:__anon21::SignalGroupTotal	file:
ref	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    double ref = 0;$/;"	m	struct:__anon19::SignalGroupTotal	file:
ref	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    double ref = 0;$/;"	m	struct:__anon24::SignalGroupTotal	file:
ref	./src/c++/lib/blt_util/ranksum.hh	/^    unsigned ref;$/;"	m	struct:ranksumObs
ref	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    std::array<StrandBaseCounts::qual_count_t,2> ref;$/;"	m	struct:BaseErrorContextInputObservation
ref	./src/c++/lib/htsapi/vcf_record.hh	/^    std::string ref;$/;"	m	struct:vcf_record
ref	./src/c++/lib/starling_common/IndelData.hh	/^    score_t ref;$/;"	m	struct:ReadPathScores
ref	./src/c++/lib/starling_common/pos_basecall_buffer.hh	/^        const reference_contig_segment& ref;$/;"	m	struct:pos_basecall_buffer::PosData
ref	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^    char ref;$/;"	m	struct:align_position	file:
refBaseIndex	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    uint8_t refBaseIndex = BASE_ID::ANY;$/;"	m	struct:GermlineSiteLocusInfo
refBegin	./src/c++/lib/alignment/AlignerUtil.hh	/^    unsigned refBegin = 0;$/;"	m	struct:BackTrace
refCount	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    std::vector<uint64_t> refCount;$/;"	m	struct:BaseErrorContextObservationExportData
refCount	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    unsigned refCount = 0;$/;"	m	struct:BaseErrorContextObservationExportStrandObservation
refCount	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    unsigned refCount = 0;$/;"	m	struct:StrandBaseCounts
refCount	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    unsigned refCount;$/;"	m	struct:IndelErrorContextObservation
refObservations	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    double refObservations;$/;"	m	struct:ExportedIndelObservations
refPos	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^    pos_t refPos = 0;$/;"	m	struct:AlignmentInfo	file:
refQual_t	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    typedef std::map<uint16_t, uint64_t> refQual_t;$/;"	t	struct:BaseErrorContextObservationData
refQuals	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    refQual_t refQuals;$/;"	m	struct:BaseErrorContextObservationData
refRegionRange	./src/c++/lib/starling_common/starling_ref_seq.hh	/^    known_pos_range2 refRegionRange;$/;"	m	struct:AnalysisRegionInfo
refRepeatCount	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned refRepeatCount = 0;$/;"	m	struct:AlleleReportInfo
refToIndelErrorProb	./src/c++/lib/starling_common/IndelData.hh	/^    LogValuePair refToIndelErrorProb;$/;"	m	struct:IndelErrorRates
ref_gt	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    unsigned ref_gt = 0;$/;"	m	struct:somatic_snv_genotype_grid
ref_gt	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    unsigned ref_gt;$/;"	m	struct:diploid_genotype
ref_gt	./src/c++/lib/blt_common/position_snp_call_pprob_monogt.hh	/^    unsigned ref_gt;$/;"	m	struct:monoploid_genotype
ref_gt	./src/c++/lib/blt_common/position_snp_call_pprob_nploid.hh	/^    unsigned ref_gt;$/;"	m	struct:nploid_genotype
ref_gtype_init	./src/c++/lib/blt_util/nploid_genotype_util.cpp	/^ref_gtype_init(const unsigned init_ploidy,$/;"	f	class:nploid_info
ref_map_type	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^    ref_map_type(const map_t t = NONE,$/;"	f	struct:__anon10::ref_map_type
ref_map_type	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^struct ref_map_type$/;"	s	namespace:__anon10	file:
ref_pprob	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^        double ref_pprob;$/;"	m	struct:diploid_genotype::result_set
referenceFilename	./src/c++/lib/applications/GetChromDepth/ChromDepthOptions.hh	/^    std::string referenceFilename;$/;"	m	struct:ChromDepthOptions
referenceFilename	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::string referenceFilename;$/;"	m	struct:starling_base_options
reference_contig_segment	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    reference_contig_segment()$/;"	f	struct:reference_contig_segment
reference_contig_segment	./src/c++/lib/blt_util/reference_contig_segment.hh	/^struct reference_contig_segment$/;"	s
regionChrom	./src/c++/lib/starling_common/starling_ref_seq.hh	/^    std::string regionChrom;$/;"	m	struct:AnalysisRegionInfo
regionNumber	./src/c++/lib/applications/starling/starling_run.cpp	/^    uint32_t *endRegion, *regionNumber, *numFinishedTasks;$/;"	m	struct:workerData	file:
regionRange	./src/c++/lib/starling_common/starling_ref_seq.hh	/^    known_pos_range2 regionRange;$/;"	m	struct:AnalysisRegionInfo
region_t	./src/c++/lib/blt_util/RegionTracker.hh	/^    typedef std::set<known_pos_range2,PosRangeEndSort>  region_t;$/;"	t	struct:RegionTracker
region_t	./src/c++/lib/blt_util/RegionTracker.hh	/^    typedef typename std::map<known_pos_range2,T,PosRangeEndSort> region_t;$/;"	t	struct:RegionPayloadTracker
regions	./src/c++/lib/htsapi/bam_streamer.hh	/^    regions_t regions;$/;"	m	struct:bam_streamer
regions	./src/c++/lib/starling_common/starling_base_shared.hh	/^    regions_t regions;$/;"	m	struct:starling_base_options
regions_t	./src/c++/lib/starling_common/starling_base_shared.hh	/^typedef std::vector<std::string> regions_t;$/;"	t
registerAlignments	./src/c++/lib/starling_common/starling_pos_processor_util.cpp	/^registerAlignments($/;"	f
registerBam	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    registerBam($/;"	f	struct:HtsMergeStreamer
registerBed	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    registerBed($/;"	f	struct:HtsMergeStreamer
registerHtsType	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    registerHtsType($/;"	f	struct:HtsMergeStreamer
registerSample	./src/c++/lib/starling_common/IndelBuffer.cpp	/^registerSample($/;"	f	class:IndelBuffer
registerVcf	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^    registerVcf($/;"	f	struct:HtsMergeStreamer
registerVcfList	./src/c++/lib/starling_common/HtsMergeStreamerUtil.cpp	/^registerVcfList($/;"	f
register_notifier	./src/c++/lib/blt_util/observer.hh	/^    register_notifier(const notifier<T>* n) const$/;"	f	struct:observer
register_observer	./src/c++/lib/blt_util/observer.hh	/^    register_observer(observer<T>* n) const$/;"	f	struct:notifier
rejectReads	./src/c++/lib/assembly/AssembledContig.hh	/^    std::set<unsigned> rejectReads;$/;"	m	struct:AssembledContig
removeCommonPrefixFromCigar	./src/c++/lib/applications/starling/gvcfAlleleInfo.cpp	/^removeCommonPrefixFromCigar(unsigned& matchSegmentLength, unsigned& numPrefixToRemove, bool isFirstSegment = false)$/;"	f	file:
removeToPos	./src/c++/lib/blt_util/RegionTracker.cpp	/^removeToPos($/;"	f	class:RegionTracker
removeToPos	./src/c++/lib/blt_util/RegionTrackerImpl.hh	/^removeToPos($/;"	f	class:RegionPayloadTracker
remove_edge_deletions	./src/c++/lib/starling_common/alignment_util.cpp	/^remove_edge_deletions($/;"	f
repeatCount	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^    unsigned repeatCount = 0;$/;"	m	class:IndelMotifBinomialMixture
repeatCount	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    unsigned repeatCount = 1;$/;"	m	struct:BaseErrorContext
repeatCount	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    unsigned repeatCount = 1;$/;"	m	struct:IndelErrorContext
repeatPatternSize	./src/c++/lib/calibration/IndelErrorModel.hh	/^    repeatPatternSize() const$/;"	f	class:AdaptiveIndelErrorModel
repeatPatternSize	./src/c++/lib/calibration/IndelErrorModelJson.hh	/^    unsigned repeatPatternSize = 0;$/;"	m	class:IndelMotifBinomialMixture
repeatPatternSize	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    unsigned repeatPatternSize = 1;$/;"	m	struct:IndelErrorContext
repeatUnit	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    std::string repeatUnit;$/;"	m	struct:AlleleReportInfo
repeatUnitLength	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned repeatUnitLength = 0;$/;"	m	struct:AlleleReportInfo
repeatedFeatureLabelError	./src/c++/lib/calibration/featuresetUtil.cpp	/^repeatedFeatureLabelError($/;"	f	file:
report	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^    report()$/;"	f	struct:scan_result
report	./src/c++/lib/appstats/RunStats.cpp	/^report(const char* filename) const$/;"	f	class:RunStats
report	./src/c++/lib/appstats/RunStats.cpp	/^report(std::ostream& os) const$/;"	f	class:RunStatsData
report	./src/c++/lib/blt_common/blt_shared.cpp	/^report(std::ostream& os) const$/;"	f	class:blt_read_counts
report	./src/c++/lib/blt_util/time_util.cpp	/^report($/;"	f	class:CpuTimes
report	./src/c++/lib/starling_common/starling_base_shared.cpp	/^report(std::ostream& os) const$/;"	f	class:starling_read_counts
reportExtendedContext	./src/c++/lib/applications/DumpSequenceErrorCounts/DumpSequenceErrorCounts.cpp	/^reportExtendedContext($/;"	f	file:
reportExtendedContext	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModel1.cpp	/^reportExtendedContext($/;"	f	namespace:__anon23
reportExtendedContext	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^reportExtendedContext($/;"	f	namespace:__anon20
reportExtendedContext	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^reportExtendedContext($/;"	f	namespace:__anon18
reportExtendedContext	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^reportExtendedContext($/;"	f	namespace:__anon26
reportExtendedContext	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^reportExtendedContext($/;"	f	namespace:__anon22
reportExtendedContext	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^reportExtendedContext($/;"	f	namespace:__anon21
reportExtendedContext	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModel1.cpp	/^reportExtendedContext($/;"	f	file:
reportExtendedContext	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^reportExtendedContext($/;"	f	file:
reportExtendedContext	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^reportExtendedContext($/;"	f	file:
reportFilename	./src/c++/lib/applications/MergeRunStats/MRSOptions.hh	/^    std::string reportFilename;$/;"	m	struct:MRSOptions
reportHr	./src/c++/lib/blt_util/time_util.hh	/^    reportHr($/;"	f	struct:CpuTimes
reportIndelErrorRateSet	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBetaBinomialError.cpp	/^reportIndelErrorRateSet($/;"	f	namespace:__anon20
reportIndelErrorRateSet	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureError.cpp	/^reportIndelErrorRateSet($/;"	f	namespace:__anon18
reportIndelErrorRateSet	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndBinomialMixtureErrorNoOverlap.cpp	/^reportIndelErrorRateSet($/;"	f	namespace:__anon26
reportIndelErrorRateSet	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^reportIndelErrorRateSet($/;"	f	namespace:__anon22
reportIndelErrorRateSet	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^reportIndelErrorRateSet($/;"	f	namespace:__anon21
reportQualErrorRateSet	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^reportQualErrorRateSet($/;"	f	file:
reportQualErrorRateSet	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^reportQualErrorRateSet($/;"	f	file:
reportSec	./src/c++/lib/blt_util/time_util.hh	/^    reportSec($/;"	f	struct:CpuTimes
report_indel_evidence_set	./src/c++/lib/starling_common/IndelData.cpp	/^report_indel_evidence_set($/;"	f	file:
report_pos_range	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^report_pos_range(const pos_range& pr,$/;"	f	file:
report_state	./src/c++/lib/htsapi/bam_streamer.cpp	/^report_state(std::ostream& os) const$/;"	f	class:bam_streamer
report_state	./src/c++/lib/htsapi/bed_streamer.cpp	/^report_state(std::ostream& os) const$/;"	f	class:bed_streamer
report_state	./src/c++/lib/htsapi/vcf_streamer.cpp	/^report_state(std::ostream& os) const$/;"	f	class:vcf_streamer
report_stream_stat	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^report_stream_stat(const depth_stream_stat_range& ss,$/;"	f	class:starling_pos_processor_base
reset	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^reset()$/;"	f	class:SequenceErrorCountsPosProcessor
reset	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^    reset(const char* s,$/;"	f	struct:scan_result
reset	./src/c++/lib/applications/starling/gvcf_aggregator.cpp	/^void gvcf_aggregator::reset()$/;"	f	class:gvcf_aggregator
reset	./src/c++/lib/applications/starling/gvcf_block_site_record.hh	/^    reset()$/;"	f	struct:gvcf_block_site_record
reset	./src/c++/lib/applications/starling/ploidyUtil.hh	/^    reset()$/;"	f	struct:SamplePloidyState
reset	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^reset()$/;"	f	class:starling_pos_processor
reset	./src/c++/lib/applications/strelka/strelka_pos_processor.cpp	/^reset()$/;"	f	class:strelka_pos_processor
reset	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^        reset()$/;"	f	struct:diploid_genotype::result_set
reset	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    void reset()$/;"	f	struct:diploid_genotype
reset	./src/c++/lib/blt_util/stage_manager.cpp	/^reset()$/;"	f	class:stage_manager
reset	./src/c++/lib/blt_util/stream_stat.hh	/^    void reset()$/;"	f	struct:stream_stat
reset	./src/c++/lib/blt_util/window_util.hh	/^    reset()$/;"	f	struct:window_average
reset	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^reset()$/;"	f	class:starling_pos_processor_base
reset	./src/c++/lib/starling_common/starling_pos_processor_win_avg_set.hh	/^    reset()$/;"	f	struct:win_avg_set
resetActiveRegionDetector	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^resetActiveRegionDetector()$/;"	f	class:starling_pos_processor_base
resetChrom	./src/c++/lib/applications/starling/ScoringModelManager.cpp	/^resetChrom(const std::string& chrom)$/;"	f	class:ScoringModelManager
resetCounter	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    void resetCounter(const pos_t pos)$/;"	f	class:ActiveRegionReadBuffer
resetMinKey	./src/c++/lib/blt_util/RangeMap.hh	/^    resetMinKey()$/;"	f	struct:RangeMap
resetRegion	./src/c++/lib/applications/GetSequenceErrorCounts/SequenceErrorCountsPosProcessor.cpp	/^resetRegion($/;"	f	class:SequenceErrorCountsPosProcessor
resetRegion	./src/c++/lib/applications/starling/gvcf_aggregator.hh	/^    resetRegion($/;"	f	class:gvcf_aggregator
resetRegion	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    resetRegion($/;"	f	struct:gvcf_writer
resetRegion	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^resetRegion($/;"	f	class:starling_pos_processor
resetRegion	./src/c++/lib/applications/strelka/strelka_pos_processor.cpp	/^resetRegion($/;"	f	class:strelka_pos_processor
resetRegion	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_pos_processor.hh	/^    resetRegion($/;"	f	struct:snoise_pos_processor
resetRegion	./src/c++/lib/htsapi/bam_streamer.cpp	/^resetRegion($/;"	f	class:bam_streamer
resetRegion	./src/c++/lib/htsapi/bam_streamer.cpp	/^resetRegion(const char* region)$/;"	f	class:bam_streamer
resetRegion	./src/c++/lib/htsapi/hts_streamer.cpp	/^resetRegion($/;"	f	class:hts_streamer
resetRegion	./src/c++/lib/starling_common/HtsMergeStreamer.cpp	/^resetRegion(const std::string& region)$/;"	f	class:HtsMergeStreamer
resetRegion	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        resetRegion()$/;"	f	struct:starling_pos_processor_base::pos_win_avgs
resetRegion	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        resetRegion()$/;"	f	struct:starling_pos_processor_base::sample_info
resetRegionBase	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^resetRegionBase($/;"	f	class:starling_pos_processor_base
resize	./src/c++/lib/blt_util/basic_matrix.hh	/^    resize($/;"	f	struct:basic_matrix
result_set	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^struct result_set$/;"	s
result_set	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^typedef diploid_genotype::result_set result_set;$/;"	t	file:
result_set	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^        result_set()$/;"	f	struct:diploid_genotype::result_set
result_set	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    struct result_set$/;"	s	struct:diploid_genotype
resume	./src/c++/lib/blt_util/time_util.hh	/^    resume()$/;"	f	struct:TimeTracker
ret_val	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    typedef std::pair<starling_read*,seg_id_t> ret_val;$/;"	t	struct:read_segment_iter
revAlt	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^    unsigned revAlt = 0;$/;"	m	struct:StrandBiasCounts	file:
revCounts	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    SupportingReadCountGroup revCounts;$/;"	m	struct:LocusSupportingReadStats
revOther	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^    unsigned revOther = 0;$/;"	m	struct:StrandBiasCounts	file:
rev_apath_to_export_md	./src/c++/lib/blt_util/align_path_match_descriptor.cpp	/^rev_apath_to_export_md(path_t& apath,$/;"	f	namespace:ALIGNPATH
reverseComp	./src/c++/lib/blt_util/seq_util.hh	/^reverseComp(Iter b,Iter e)$/;"	f
reverseCompCopy	./src/c++/lib/blt_util/seq_util.hh	/^reverseCompCopy(ConstIter cb,ConstIter ce,Iter b)$/;"	f
reverseCompCopyCStr	./src/c++/lib/blt_util/seq_util.hh	/^reverseCompCopyCStr(const char* str)$/;"	f
reverseCompCopyStr	./src/c++/lib/blt_util/seq_util.hh	/^reverseCompCopyStr(const std::string& seq)$/;"	f
reverseCompStr	./src/c++/lib/blt_util/seq_util.hh	/^reverseCompStr(std::string& seq)$/;"	f
revise_stage_data	./src/c++/lib/blt_util/stage_manager.cpp	/^revise_stage_data(const stage_data& sdata)$/;"	f	class:stage_manager
right	./src/c++/lib/calibration/RandomForestModel.hh	/^        R right;$/;"	m	struct:RandomForestModel::TreeNode
rightEdgeIndelCollapse	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^rightEdgeIndelCollapse($/;"	f	file:
right_pos	./src/c++/lib/starling_common/IndelKey.hh	/^    pos_t right_pos() const$/;"	f	struct:IndelKey
rmi	./src/c++/lib/starling_common/starling_read_util.cpp	/^    read_mismatch_info& rmi;$/;"	m	struct:__anon12::ddata	file:
rotateLeft	./src/c++/lib/blt_util/RangeMap.hh	/^    rotateLeft($/;"	f	struct:RangeMap
rotateRight	./src/c++/lib/blt_util/RangeMap.hh	/^    rotateRight($/;"	f	struct:RangeMap
rs	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    indel_result_set rs;$/;"	m	struct:somatic_indel_call
rs	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    snv_result_set rs = snv_result_set();$/;"	m	struct:somatic_snv_genotype_grid
run	./src/c++/lib/common/Program.cpp	/^run(int argc, char* argv[]) const$/;"	f	class:illumina::Program
runDSEC	./src/c++/lib/applications/DumpSequenceErrorCounts/DumpSequenceErrorCounts.cpp	/^runDSEC($/;"	f	file:
runEPEC	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EstimateParametersFromErrorCounts.cpp	/^runEPEC($/;"	f	file:
runEPEC	./src/c++/lib/applications/EstimateVariantErrorRates/EstimateVariantErrorRates.cpp	/^runEPEC($/;"	f	file:
runInternal	./src/c++/lib/applications/DumpSequenceErrorCounts/DumpSequenceErrorCounts.cpp	/^runInternal(int argc, char* argv[]) const$/;"	f	class:DumpSequenceErrorCounts
runInternal	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EstimateParametersFromErrorCounts.cpp	/^runInternal(int argc, char* argv[]) const$/;"	f	class:EstimateParametersFromErrorCounts
runInternal	./src/c++/lib/applications/EstimateVariantErrorRates/EstimateVariantErrorRates.cpp	/^runInternal(int argc, char* argv[]) const$/;"	f	class:EstimateVariantErrorRates
runInternal	./src/c++/lib/applications/GetChromDepth/GetChromDepth.cpp	/^runInternal(int argc, char* argv[]) const$/;"	f	class:GetChromDepth
runInternal	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCounts.cpp	/^runInternal(int argc, char* argv[]) const$/;"	f	class:GetSequenceErrorCounts
runInternal	./src/c++/lib/applications/MergeRunStats/MergeRunStats.cpp	/^runInternal(int argc, char* argv[]) const$/;"	f	class:MergeRunStats
runInternal	./src/c++/lib/applications/MergeSequenceErrorCounts/MergeSequenceErrorCounts.cpp	/^runInternal(int argc, char* argv[]) const$/;"	f	class:MergeSequenceErrorCounts
runInternal	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^runInternal(int argc, char* argv[]) const$/;"	f	class:countFastaBases
runInternal	./src/c++/lib/applications/starling/starling.cpp	/^runInternal(int argc, char* argv[]) const$/;"	f	class:starling
runInternal	./src/c++/lib/applications/starling/starlingSiteSimulator.cpp	/^runInternal(int argc,char* argv[]) const$/;"	f	class:starlingSiteSimulator
runInternal	./src/c++/lib/applications/strelka/strelka.cpp	/^runInternal(int argc,char* argv[]) const$/;"	f	class:strelka
runInternal	./src/c++/lib/applications/strelka/strelkaSiteSimulator.cpp	/^runInternal(int argc,char* argv[]) const$/;"	f	class:strelkaSiteSimulator
runInternal	./src/c++/lib/applications/strelkaNoiseExtractor/strelkaNoiseExtractor.cpp	/^runInternal(int argc, char* argv[]) const$/;"	f	class:StrelkaNoiseExtractor
runIterativeAssembler	./src/c++/lib/assembly/IterativeAssembler.cpp	/^runIterativeAssembler($/;"	f
runMRS	./src/c++/lib/applications/MergeRunStats/MergeRunStats.cpp	/^runMRS(const MRSOptions& opt)$/;"	f	file:
runMSEC	./src/c++/lib/applications/MergeSequenceErrorCounts/MergeSequenceErrorCounts.cpp	/^runMSEC(const MSECOptions& opt)$/;"	f	file:
runSmallAssembler	./src/c++/lib/assembly/SmallAssembler.cpp	/^runSmallAssembler($/;"	f
runStats	./src/c++/lib/appstats/RunStatsManager.hh	/^    RunStats runStats;$/;"	m	struct:RunStatsManager
runStatsData	./src/c++/lib/appstats/RunStats.hh	/^    RunStatsData runStatsData;$/;"	m	struct:RunStats
run_post_call_step	./src/c++/lib/applications/strelka/strelka_pos_processor.cpp	/^run_post_call_step($/;"	f	class:strelka_pos_processor
run_post_call_step	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    run_post_call_step($/;"	f	struct:starling_pos_processor_base
safeFrac	./src/c++/lib/applications/strelka/somatic_indel_scoring_features.cpp	/^safeFrac(const int num, const int denom)$/;"	f	file:
safeFrac	./src/c++/lib/blt_util/math_util.hh	/^safeFrac($/;"	f
safeLocusDump	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^safeLocusDump($/;"	f
sal	./src/c++/lib/starling_common/starling_base_shared.hh	/^    starling_align_limit sal;$/;"	m	struct:starling_base_deriv_options
sample	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    sample(const unsigned sampleIndex = 0) const$/;"	f	struct:starling_pos_processor_base
sample	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    sample(const unsigned sampleIndex = 0)$/;"	f	struct:starling_pos_processor_base
sampleIndex	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    unsigned sampleIndex;$/;"	m	struct:AlignInfo
sampleOptions	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        starling_sample_options sampleOptions;$/;"	m	struct:starling_pos_processor_base::sample_info
sample_id_t	./src/c++/lib/starling_common/starling_types.hh	/^typedef int32_t sample_id_t;$/;"	t
sample_info	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        sample_info($/;"	f	struct:starling_pos_processor_base::sample_info
sample_info	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^    struct sample_info$/;"	s	struct:starling_pos_processor_base
sample_size	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    unsigned sample_size() const$/;"	f	struct:depth_stream_stat
sample_size	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    unsigned sample_size() const$/;"	f	struct:depth_stream_stat_range
sample_uniform_range	./src/c++/lib/blt_common/sample_range_impl.hh	/^sample_uniform_range(const blt_float_t min_x,$/;"	f
save	./src/c++/lib/appstats/RunStats.cpp	/^save(const char* filename) const$/;"	f	class:RunStats
save	./src/c++/lib/appstats/RunStats.cpp	/^save(std::ostream& os) const$/;"	f	class:RunStats
save	./src/c++/lib/errorAnalysis/SequenceErrorCounts.cpp	/^save($/;"	f	class:SequenceErrorCounts
scaleIndelErrorRate	./src/c++/lib/starling_common/IndelData.cpp	/^scaleIndelErrorRate($/;"	f	file:
scan_result	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^    scan_result(const char* f)$/;"	f	struct:scan_result
scan_result	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^struct scan_result$/;"	s	file:
scan_string	./src/c++/lib/blt_util/scan_string.hh	/^scan_string()$/;"	f
scan_string	./src/c++/lib/blt_util/scan_string.hh	/^scan_string<int>()$/;"	f
scan_string	./src/c++/lib/blt_util/scan_string.hh	/^scan_string<long>()$/;"	f
score	./src/c++/lib/alignment/SingleRefAlignerShared.hh	/^    ScoreType score;$/;"	m	struct:AlignmentResult
scoreCandidateAlignment	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^scoreCandidateAlignment($/;"	f
scoreCandidateAlignments	./src/c++/lib/starling_common/starling_read_align.cpp	/^scoreCandidateAlignments($/;"	f	file:
scoreCandidateAlignmentsAndIndels	./src/c++/lib/starling_common/starling_read_align.cpp	/^scoreCandidateAlignmentsAndIndels($/;"	f	file:
scoreFilterThreshold	./src/c++/lib/calibration/VariantScoringModelServer.hh	/^    double scoreFilterThreshold() const$/;"	f	struct:VariantScoringModelServer
scoreInsertSegment	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^scoreInsertSegment(const starling_base_options& \/*opt*\/,$/;"	f	file:
scoreMatchSegment	./src/c++/lib/starling_common/starling_read_align_score.cpp	/^scoreMatchSegment(const starling_base_options& opt,$/;"	f	file:
scoreVariant	./src/c++/lib/calibration/VariantScoringModelServer.hh	/^    scoreVariant($/;"	f	struct:VariantScoringModelServer
score_indels	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^score_indels($/;"	f
score_t	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^typedef short int score_t;$/;"	t	file:
score_t	./src/c++/lib/starling_common/IndelData.hh	/^    typedef float score_t;$/;"	t	struct:ReadPathScores
score_t	./src/c++/lib/starling_common/IndelData.hh	/^    typedef std::map<align_id_t,ReadPathScores> score_t;$/;"	t	struct:IndelSampleData
sd	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    double sd() const$/;"	f	struct:depth_stream_stat
sd	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    double sd() const$/;"	f	struct:depth_stream_stat_range
sd	./src/c++/lib/blt_util/stream_stat.hh	/^    double sd() const$/;"	f	struct:stream_stat
se_map_qual	./src/c++/lib/htsapi/bam_record.hh	/^    unsigned se_map_qual() const$/;"	f	struct:bam_record
searchForSTR	./src/c++/lib/blt_common/ref_context.cpp	/^void searchForSTR($/;"	f
searchRepeats	./src/c++/lib/assembly/IterativeAssembler.cpp	/^searchRepeats($/;"	f	file:
secondary	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned secondary = 0;$/;"	m	struct:blt_read_counts
seed	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    uint32_t seed = 1;$/;"	m	struct:starling_site_sim_options
seed	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    uint32_t seed;$/;"	m	struct:strelka_site_sim_options
seedReadCount	./src/c++/lib/assembly/AssembledContig.hh	/^    unsigned seedReadCount = 0; \/\/\/< no of reads containing the seeding kmer$/;"	m	struct:AssembledContig
seg_id_t	./src/c++/lib/starling_common/starling_read_segment.hh	/^typedef uint8_t seg_id_t;$/;"	t
segmentStatsFilename	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::string segmentStatsFilename;$/;"	m	struct:starling_base_options
segmentTime	./src/c++/lib/common/SegmentTimeTracker.hh	/^    TimeTracker segmentTime;$/;"	m	struct:SegmentTimeTracker
segment_group_t	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    typedef std::set<segment_t> segment_group_t;$/;"	t	struct:starling_read_buffer
segment_t	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    typedef std::pair<align_id_t,seg_id_t> segment_t;$/;"	t	struct:starling_read_buffer
segment_type_to_cigar_code	./src/c++/lib/blt_util/align_path.hh	/^segment_type_to_cigar_code(const align_t id)$/;"	f	namespace:ALIGNPATH
selectContigs	./src/c++/lib/assembly/IterativeAssembler.cpp	/^selectContigs($/;"	f	file:
selectTopOrthogonalAllelesInAllSamples	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^selectTopOrthogonalAllelesInAllSamples($/;"	f
selectTopOrthogonalAllelesInSample	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroupUtil.cpp	/^selectTopOrthogonalAllelesInSample($/;"	f
self_t	./src/c++/lib/blt_util/observer.hh	/^    typedef notifier self_t;$/;"	t	struct:notifier
self_t	./src/c++/lib/blt_util/observer.hh	/^    typedef observer self_t;$/;"	t	struct:observer
self_unregister	./src/c++/lib/blt_util/observer.hh	/^    self_unregister() const$/;"	f	struct:notifier
sep	./src/c++/lib/htsapi/vcf_util.cpp	/^    sep(const char* gt,$/;"	f	struct:gt_parse_helper	file:
seq	./src/c++/lib/assembly/AssembledContig.hh	/^    std::string seq; \/\/\/< contigsequence$/;"	m	struct:AssembledContig
seq	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    const std::string& seq() const$/;"	f	struct:reference_contig_segment
seq	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    std::string& seq()$/;"	f	struct:reference_contig_segment
seq	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint8_t seq[60];$/;"	m	struct:__anon7
seq	./src/c++/lib/htsapi/bam_streamer.hh	/^	uint8_t seq[60];$/;"	m	struct:__anon8
seq_size	./src/c++/lib/htsapi/bam_util.cpp	/^int seq_size(const int a)$/;"	f	file:
serialize	./src/c++/lib/appstats/RunStats.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:RunStatsData
serialize	./src/c++/lib/blt_util/known_pos_range2.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:known_pos_range2
serialize	./src/c++/lib/blt_util/time_util.hh	/^    void serialize(Archive& ar, const unsigned \/*version*\/)$/;"	f	struct:CpuTimes
serialize	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:BaseErrorContext
serialize	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:BaseErrorContextObservation
serialize	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:BaseErrorCounts
serialize	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:BaseErrorData
serialize	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:IndelBackgroundObservation
serialize	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:IndelBackgroundObservationData
serialize	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:IndelDepthSupportTotal
serialize	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:IndelErrorContext
serialize	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:IndelErrorContextObservation
serialize	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:IndelErrorContextObservationData
serialize	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:IndelErrorCounts
serialize	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:IndelErrorData
serialize	./src/c++/lib/htsapi/bam_header_info.hh	/^        void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:bam_header_info::chrom_info
serialize	./src/c++/lib/htsapi/bam_header_info.hh	/^    void serialize(Archive& ar, const unsigned \/* version *\/)$/;"	f	struct:bam_header_info
serializeIndelErrorModel	./src/c++/lib/calibration/IndelErrorModelJson.cpp	/^serializeIndelErrorModel($/;"	f	class:IndelErrorModelJson
set	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    set(const GERMLINE_VARIANT_VCF_FILTERS::index_t i)$/;"	f	struct:GermlineFilterKeeper
set	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    set(const SOMATIC_VARIANT_VCF_FILTERS::index_t i)$/;"	f	struct:strelka_filter_keeper
set	./src/c++/lib/calibration/featuresetUtil.hh	/^    set($/;"	f	struct:VariantScoringFeatureKeeper
set	./src/c++/lib/htsapi/bed_record.cpp	/^set(const char* s)$/;"	f	class:bed_record
set	./src/c++/lib/htsapi/vcf_record.cpp	/^set(const char* s)$/;"	f	class:vcf_record
setActiveRegionId	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    setActiveRegionId(ActiveRegionId activeRegionId)$/;"	f	struct:LocusSampleInfo
setAlignInfo	./src/c++/lib/starling_common/ActiveRegionReadBuffer.hh	/^    void setAlignInfo(const align_id_t alignId, const unsigned sampleIndex, const INDEL_ALIGN_TYPE::index_t indelAlignType, const bool isForwardStrand)$/;"	f	class:ActiveRegionReadBuffer
setAllele0HaplotypeId	./src/c++/lib/htsapi/vcf_util.hh	/^    setAllele0HaplotypeId(uint8_t haplotypeId)$/;"	f	struct:VcfGenotype
setAllele1HaplotypeId	./src/c++/lib/htsapi/vcf_util.hh	/^    setAllele1HaplotypeId(uint8_t complexAlleleId)$/;"	f	struct:VcfGenotype
setAltCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    setAltCount($/;"	f	struct:LocusSupportingReadStats
setAltCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    setAltCount($/;"	f	struct:SupportingReadCountGroup
setCommonPrefix	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    setCommonPrefix(const unsigned commonPrefixLength)$/;"	f	struct:GermlineIndelLocusInfo
setContinuousSiteSampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    setContinuousSiteSampleInfo($/;"	f	struct:GermlineContinuousSiteLocusInfo
setDelete	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^void ActiveRegionReadBuffer::setDelete(const align_id_t id, const pos_t pos)$/;"	f	class:ActiveRegionReadBuffer
setEndPos	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^void ActiveRegionReadBuffer::setEndPos(const pos_t endPos)$/;"	f	class:ActiveRegionReadBuffer
setGenotypeFromAlleleIndices	./src/c++/lib/htsapi/vcf_util.hh	/^    setGenotypeFromAlleleIndices($/;"	f	struct:VcfGenotype
setGenotypeFromAlleleIndices	./src/c++/lib/htsapi/vcf_util.hh	/^    setGenotypeFromAlleleIndices()$/;"	f	struct:VcfGenotype
setGqx	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    setGqx()$/;"	f	struct:LocusSampleInfo
setIndelAlleleCigar	./src/c++/lib/applications/starling/gvcfAlleleInfo.cpp	/^setIndelAlleleCigar($/;"	f
setIndelSampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    setIndelSampleInfo($/;"	f	struct:GermlineIndelLocusInfo
setIndels	./src/c++/lib/starling_common/CandidateAlignment.hh	/^    setIndels($/;"	f	struct:CandidateAlignment
setInsert	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^void ActiveRegionReadBuffer::setInsert(const align_id_t id, const pos_t pos, const std::string& insertSeq)$/;"	f	class:ActiveRegionReadBuffer
setMatch	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^void ActiveRegionReadBuffer::setMatch(const align_id_t id, const pos_t pos)$/;"	f	class:ActiveRegionReadBuffer
setMaxCandidateDepth	./src/c++/lib/starling_common/IndelBuffer.cpp	/^setMaxCandidateDepth($/;"	f	class:IndelBuffer
setMismatch	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^void ActiveRegionReadBuffer::setMismatch(const align_id_t id, const pos_t pos, const char baseChar)$/;"	f	class:ActiveRegionReadBuffer
setNewRegion	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    setNewRegion()$/;"	f	struct:ChromDepthTracker
setNewRegion	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    setNewRegion()$/;"	f	struct:DepthTracker
setNewRegion	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    setNewRegion()$/;"	f	struct:MeanDepthTracker
setPhased	./src/c++/lib/htsapi/vcf_util.hh	/^    setPhased($/;"	f	struct:VcfGenotype
setPloidy	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    setPloidy(const int ploidy)$/;"	f	struct:GenotypeLikelihoods
setPloidy	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    setPloidy(const int ploidy)$/;"	f	struct:LocusSampleInfo
setPloidy	./src/c++/lib/applications/starling/ploidyUtil.hh	/^    setPloidy(const int ploidy)$/;"	f	struct:SamplePloidyState
setPloidyConflict	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    setPloidyConflict()$/;"	f	struct:LocusSampleInfo
setPosToActiveRegionIdMap	./src/c++/lib/starling_common/ActiveRegionDetector.cpp	/^ActiveRegionDetector::setPosToActiveRegionIdMap(pos_range activeRegionRange)$/;"	f	class:ActiveRegionDetector
setRefSegment	./src/c++/lib/starling_common/starling_ref_seq.cpp	/^setRefSegment($/;"	f
setSampleName	./src/c++/lib/errorAnalysis/SequenceErrorCounts.hh	/^    setSampleName(const std::string& sampleName)$/;"	f	struct:SequenceErrorCounts
setSiteSampleInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    setSiteSampleInfo($/;"	f	struct:GermlineSiteLocusInfo
setSoftClipSegment	./src/c++/lib/starling_common/ActiveRegionReadBuffer.cpp	/^void ActiveRegionReadBuffer::setSoftClipSegment(const align_id_t id, const pos_t pos, const std::string& segmentSeq)$/;"	f	class:ActiveRegionReadBuffer
setSoftClipped	./src/c++/lib/starling_common/ActiveRegion.hh	/^    void setSoftClipped(const align_id_t alignId)$/;"	f	class:ActiveRegion
setVcfGenotypeFromGenotypeIndex	./src/c++/lib/htsapi/vcf_util.hh	/^setVcfGenotypeFromGenotypeIndex($/;"	f
set_arg	./src/c++/lib/blt_common/blt_arg_parse_util.hh	/^set_arg(unsigned& argi,$/;"	f
set_begin_pos	./src/c++/lib/blt_util/known_pos_range2.hh	/^    set_begin_pos(const pos_t pos)$/;"	f	struct:known_pos_range2
set_begin_pos	./src/c++/lib/blt_util/pos_range.hh	/^    set_begin_pos(const pos_t pos)$/;"	f	struct:pos_range
set_end_pos	./src/c++/lib/blt_util/known_pos_range2.hh	/^    set_end_pos(const pos_t pos)$/;"	f	struct:known_pos_range2
set_end_pos	./src/c++/lib/blt_util/pos_range.hh	/^    set_end_pos(const pos_t pos)$/;"	f	struct:pos_range
set_filename_arg	./src/c++/lib/blt_common/blt_arg_parse_util.cpp	/^set_filename_arg(unsigned& argi,$/;"	f
set_head_pos	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^set_head_pos(const pos_t pos)$/;"	f	class:starling_pos_processor_base
set_noise_from_vcf	./src/c++/lib/applications/strelka/SiteNoise.cpp	/^set_noise_from_vcf($/;"	f
set_nploid_arg	./src/c++/lib/blt_common/blt_arg_parse_util.cpp	/^set_nploid_arg(unsigned& argi,$/;"	f
set_offset	./src/c++/lib/blt_util/reference_contig_segment.hh	/^    set_offset(const pos_t offset)$/;"	f	struct:reference_contig_segment
set_qname	./src/c++/lib/htsapi/bam_record.hh	/^    set_qname(const char* name)$/;"	f	struct:bam_record
set_range	./src/c++/lib/blt_util/known_pos_range2.hh	/^    set_range(const pos_t begin,$/;"	f	struct:known_pos_range2
set_range	./src/c++/lib/blt_util/pos_range.hh	/^    set_range(const pos_t begin,$/;"	f	struct:pos_range
set_readqual	./src/c++/lib/htsapi/bam_record.hh	/^    set_readqual(const char* read,$/;"	f	struct:bam_record
set_ref_base	./src/c++/lib/blt_common/snp_pos_info.hh	/^    set_ref_base(char base)$/;"	f	struct:snp_pos_info
set_repeat_info	./src/c++/lib/starling_common/AlleleReportInfoUtil.cpp	/^set_repeat_info($/;"	f	file:
set_target_id	./src/c++/lib/htsapi/bam_record.hh	/^    set_target_id(int32_t tid)$/;"	f	struct:bam_record
set_val	./src/c++/lib/blt_common/blt_arg_parse_util.hh	/^set_val(const prog_info& pinfo,$/;"	f
set_win_arg	./src/c++/lib/blt_common/blt_arg_parse_util.cpp	/^set_win_arg(unsigned& argi,$/;"	f
set_xrange_arg	./src/c++/lib/blt_common/blt_arg_parse_util.cpp	/^set_xrange_arg(unsigned& argi,$/;"	f
set_xrange_val	./src/c++/lib/blt_common/blt_arg_parse_util.cpp	/^set_xrange_val(const prog_info& pinfo,$/;"	f	file:
set_xrange_win_arg	./src/c++/lib/blt_common/blt_arg_parse_util.cpp	/^set_xrange_win_arg(unsigned& argi,$/;"	f
sfilter	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    somatic_filter_deriv_options sfilter;$/;"	m	struct:strelka_deriv_options
sfilter	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    somatic_filter_options sfilter;$/;"	m	struct:strelka_options
shared_indel_error_factor	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double shared_indel_error_factor = 1.65;$/;"	m	struct:strelka_options
shared_site_error_rate	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double shared_site_error_rate = 0.000005;$/;"	m	struct:strelka_options
shared_site_error_strand_bias_fraction	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double shared_site_error_strand_bias_fraction = 0.5;$/;"	m	struct:strelka_options
short_report	./src/c++/lib/starling_common/starling_read_segment.cpp	/^short_report(std::ostream& os,$/;"	f
shortestUnencountered	./src/c++/lib/blt_common/ref_context.cpp	/^shortestUnencountered($/;"	f
sicaller_grid	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    sicaller_grid() const$/;"	f	struct:strelka_deriv_options
signalCounts	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    boost::array<unsigned,INDEL_SIGNAL_TYPE::SIZE> signalCounts;$/;"	m	struct:IndelErrorContextObservation
sim_mode_t	./src/c++/lib/applications/starling/starling_sim_test.hh	/^enum sim_mode_t$/;"	g
sim_mode_t	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^enum sim_mode_t$/;"	g
sim_sample_pi	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^sim_sample_pi($/;"	f	file:
sim_sample_pi	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^sim_sample_pi(vgen_t& cov_gen,$/;"	f	file:
sindel	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    somatic_indel_call sindel;$/;"	m	struct:SomaticIndelVcfInfo
sindelQuality_LowerBound	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    int sindelQuality_LowerBound = 30;$/;"	m	struct:somatic_filter_options
sindel_from_ntype_tier	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    tier_t sindel_from_ntype_tier;$/;"	m	struct:somatic_indel_call
sindel_tier	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    tier_t sindel_tier;$/;"	m	struct:somatic_indel_call
single_ihpol_test	./src/c++/lib/blt_common/test/ref_context_test.cpp	/^single_ihpol_test(const pos_t pos,$/;"	f	file:
single_log_sum_test	./src/c++/lib/blt_util/test/math_util_test.cpp	/^single_log_sum_test(const double x1,$/;"	f	file:
single_snp_hpol_test	./src/c++/lib/blt_common/test/ref_context_test.cpp	/^single_snp_hpol_test(const pos_t pos,$/;"	f	file:
single_test_basename	./src/c++/lib/blt_util/test/compat_util_test.cpp	/^single_test_basename(const char* input,$/;"	f	file:
single_test_round	./src/c++/lib/blt_util/test/compat_util_test.cpp	/^single_test_round(const double input,$/;"	f	file:
site_lnprior	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double site_lnprior;$/;"	m	struct:starling_base_deriv_options
size	./src/c++/lib/blt_common/blt_arg_parse_util.hh	/^    size()$/;"	f	struct:arg_data
size	./src/c++/lib/blt_common/ref_context.cpp	/^    unsigned size;$/;"	m	struct:ihpol_data	file:
size	./src/c++/lib/blt_util/CircularCounter.hh	/^    size() const$/;"	f	struct:CircularCounter
size	./src/c++/lib/blt_util/RecordTracker.hh	/^    size() const$/;"	f	struct:RecordTracker
size	./src/c++/lib/blt_util/RegionTracker.hh	/^    size() const$/;"	f	struct:RegionPayloadTracker
size	./src/c++/lib/blt_util/RegionTracker.hh	/^    size() const$/;"	f	struct:RegionTracker
size	./src/c++/lib/blt_util/basic_matrix.hh	/^    size()$/;"	f	struct:basic_matrix
size	./src/c++/lib/blt_util/id_map.hh	/^    size() const$/;"	f	struct:id_map
size	./src/c++/lib/blt_util/id_map.hh	/^    size() const$/;"	f	struct:id_set
size	./src/c++/lib/blt_util/known_pos_range2.hh	/^    size() const$/;"	f	struct:known_pos_range2
size	./src/c++/lib/blt_util/pos_range.hh	/^    size() const$/;"	f	struct:pos_range
size	./src/c++/lib/blt_util/stream_stat.hh	/^    int size() const$/;"	f	struct:stream_stat
size	./src/c++/lib/blt_util/window_util.hh	/^    size() const$/;"	f	struct:window_average
size	./src/c++/lib/starling_common/OrthogonalVariantAlleleCandidateGroup.hh	/^    size() const$/;"	f	struct:OrthogonalVariantAlleleCandidateGroup
size	./src/c++/lib/starling_common/SampleSetSummary.hh	/^    size() const$/;"	f	struct:SampleSetSummary
size	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    size() const$/;"	f	struct:starling_read_buffer
skip_to_pos	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^skip_to_pos($/;"	f	class:gvcf_writer
skipped	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    double skipped = 0;$/;"	m	struct:__anon19::SignalGroupTotal	file:
skipped	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    double skipped = 0;$/;"	m	struct:__anon24::SignalGroupTotal	file:
smoothed_lnp_range	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double smoothed_lnp_range = std::log(10.);$/;"	m	struct:starling_base_options
sn	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    SiteNoise sn;$/;"	m	struct:somatic_snv_genotype_grid
snoise_info	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_info.hh	/^    snoise_info() {}$/;"	f	struct:snoise_info
snoise_info	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_info.hh	/^struct snoise_info : public prog_info_base$/;"	s
snoise_options	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_shared.hh	/^struct snoise_options : public starling_base_options$/;"	s
snoise_osptr	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_streams.hh	/^    snoise_osptr() const$/;"	f	struct:snoise_streams
snoise_pos_processor	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_pos_processor.cpp	/^snoise_pos_processor($/;"	f	class:snoise_pos_processor
snoise_pos_processor	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_pos_processor.hh	/^struct snoise_pos_processor : public starling_pos_processor_base$/;"	s
snoise_run	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_run.cpp	/^snoise_run($/;"	f
snoise_streams	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_streams.cpp	/^snoise_streams($/;"	f	class:snoise_streams
snoise_streams	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_streams.hh	/^struct snoise_streams : public starling_streams_base$/;"	s
snp_pos_info	./src/c++/lib/blt_common/snp_pos_info.hh	/^    snp_pos_info()$/;"	f	struct:snp_pos_info
snp_pos_info	./src/c++/lib/blt_common/snp_pos_info.hh	/^struct snp_pos_info$/;"	s
snp_prob	./src/c++/lib/blt_common/position_snp_call_lrt.hh	/^    double snp_prob;$/;"	m	struct:lrt_snp_call
snp_qphred	./src/c++/lib/blt_common/nonref_test_call.hh	/^    int snp_qphred;$/;"	m	struct:nonref_test_call
snp_qphred	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^        int snp_qphred;$/;"	m	struct:diploid_genotype::result_set
snprintf	./src/c++/lib/blt_util/compat_util.hh	30;"	d
snvDevelopmentFeatureSet	./src/c++/lib/applications/starling/gvcf_options.hh	/^    const FeatureSet& snvDevelopmentFeatureSet;$/;"	m	struct:gvcf_deriv_options
snvEVSThreshold	./src/c++/lib/applications/starling/ScoringModelManager.hh	/^    snvEVSThreshold() const$/;"	f	struct:ScoringModelManager
snvFeatureSet	./src/c++/lib/applications/starling/gvcf_options.hh	/^    const FeatureSet& snvFeatureSet;$/;"	m	struct:gvcf_deriv_options
snvMinEVS	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double snvMinEVS = 20.0;$/;"	m	struct:somatic_filter_options
snvModel1	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModel1.cpp	/^snvModel1($/;"	f
snvModelVariantAndBinomialMixtureError	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^snvModelVariantAndBinomialMixtureError($/;"	f
snvModelVariantAndIndyError	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^snvModelVariantAndIndyError($/;"	f
snv_from_ntype_tier	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    tier_t snv_from_ntype_tier = 0;$/;"	m	struct:somatic_snv_genotype_grid
snv_max_filtered_basecall_frac	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double snv_max_filtered_basecall_frac = 0.4;$/;"	m	struct:somatic_filter_options
snv_max_spanning_deletion_frac	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double snv_max_spanning_deletion_frac = 0.75;$/;"	m	struct:somatic_filter_options
snv_min_qss_ref	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    int snv_min_qss_ref = 15;$/;"	m	struct:somatic_filter_options
snv_result_set	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^struct snv_result_set : result_set$/;"	s
snv_scoring_model_filename	./src/c++/lib/applications/starling/starling_shared.hh	/^    std::string snv_scoring_model_filename;$/;"	m	struct:starling_options
snv_tier	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    tier_t snv_tier = 0;$/;"	m	struct:somatic_snv_genotype_grid
softMaxInverseRangeTransform	./src/c++/lib/blt_util/prob_util.hh	/^softMaxInverseRangeTransform($/;"	f
softMaxInverseTransform	./src/c++/lib/blt_util/prob_util.hh	/^softMaxInverseTransform($/;"	f
softMaxRangeTransform	./src/c++/lib/blt_util/prob_util.hh	/^softMaxRangeTransform($/;"	f
softMaxTransform	./src/c++/lib/blt_util/prob_util.hh	/^softMaxTransform($/;"	f
soft_clip_alignment	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^soft_clip_alignment($/;"	f	file:
somaticIndelScoringModel	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::unique_ptr<VariantScoringModelServer> somaticIndelScoringModel;$/;"	m	struct:strelka_deriv_options
somaticSnvScoringModel	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::unique_ptr<VariantScoringModelServer> somaticSnvScoringModel;$/;"	m	struct:strelka_deriv_options
somatic_callable_filename	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::string somatic_callable_filename;$/;"	m	struct:strelka_options
somatic_callable_osptr	./src/c++/lib/applications/strelka/strelka_streams.hh	/^    somatic_callable_osptr() const$/;"	f	struct:strelka_streams
somatic_filter_deriv_options	./src/c++/lib/applications/strelka/strelka_shared.hh	/^struct somatic_filter_deriv_options$/;"	s
somatic_filter_options	./src/c++/lib/applications/strelka/strelka_shared.hh	/^struct somatic_filter_options$/;"	s
somatic_indel_call	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^struct somatic_indel_call$/;"	s
somatic_indel_caller_grid	./src/c++/lib/applications/strelka/somatic_indel_grid.cpp	/^somatic_indel_caller_grid(const strelka_options& opt)$/;"	f	class:somatic_indel_caller_grid
somatic_indel_caller_grid	./src/c++/lib/applications/strelka/somatic_indel_grid.hh	/^struct somatic_indel_caller_grid : private boost::noncopyable$/;"	s
somatic_indel_filename	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::string somatic_indel_filename;$/;"	m	struct:strelka_options
somatic_indel_osptr	./src/c++/lib/applications/strelka/strelka_streams.hh	/^    somatic_indel_osptr() const$/;"	f	struct:strelka_streams
somatic_indel_rate	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double somatic_indel_rate = 0.000001;$/;"	m	struct:strelka_options
somatic_indel_scoring_model_filename	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::string somatic_indel_scoring_model_filename;$/;"	m	struct:strelka_options
somatic_snv_caller_strand_grid	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.cpp	/^somatic_snv_caller_strand_grid(const strelka_options& opt)$/;"	f	class:somatic_snv_caller_strand_grid
somatic_snv_caller_strand_grid	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid.hh	/^struct somatic_snv_caller_strand_grid$/;"	s
somatic_snv_filename	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::string somatic_snv_filename;$/;"	m	struct:strelka_options
somatic_snv_genotype_grid	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^struct somatic_snv_genotype_grid$/;"	s
somatic_snv_osptr	./src/c++/lib/applications/strelka/strelka_streams.hh	/^    somatic_snv_osptr() const$/;"	f	struct:strelka_streams
somatic_snv_rate	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double somatic_snv_rate = 0.000001;$/;"	m	struct:strelka_options
somatic_snv_scoring_model_filename	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::string somatic_snv_scoring_model_filename;$/;"	m	struct:strelka_options
sortIndices	./src/c++/lib/blt_util/sort_util.hh	/^sortIndices(const std::vector<T>& v)$/;"	f
sort_icall_by_eprob	./src/c++/lib/blt_common/adjust_joint_eprob.cpp	/^    sort_icall_by_eprob(const snp_pos_info& pi) : _pi(pi) {}$/;"	f	struct:__anon28::sort_icall_by_eprob
sort_icall_by_eprob	./src/c++/lib/blt_common/adjust_joint_eprob.cpp	/^struct sort_icall_by_eprob$/;"	s	namespace:__anon28	file:
sort_remove_only_indels_last	./src/c++/lib/starling_common/starling_read_align.cpp	/^sort_remove_only_indels_last(const starling_align_indel_status& indel_status_map,$/;"	f	file:
spanningDeletionReadCount	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unsigned spanningDeletionReadCount = 0;$/;"	m	struct:GermlineSiteSampleInfo
spanningDeletionReadCount	./src/c++/lib/blt_common/snp_pos_info.hh	/^    unsigned spanningDeletionReadCount;$/;"	m	struct:snp_pos_info
spanningIndelPloidyModification	./src/c++/lib/blt_common/snp_pos_info.hh	/^    int spanningIndelPloidyModification = 0;$/;"	m	struct:snp_pos_info
sparse_function	./src/c++/lib/blt_common/sparse_function_1d.hh	/^struct sparse_function$/;"	s
split_aebaib	./src/c++/lib/htsapi/bam_streamer.cpp	/^split_aebaib()$/;"	f	class:bam_streamer
split_aebaib2	./src/c++/lib/htsapi/bam_streamer.cpp	/^split_aebaib2()$/;"	f	class:bam_streamer
split_aebaib3	./src/c++/lib/htsapi/bam_streamer.cpp	/^split_aebaib3()$/;"	f	class:bam_streamer
split_fasta	./src/c++/lib/htsapi/bam_streamer.cpp	/^split_fasta()$/;"	f	class:bam_streamer
split_match	./src/c++/lib/blt_util/string_util.cpp	/^split_match(const std::string& str,$/;"	f
split_string	./src/c++/lib/blt_util/string_util.cpp	/^split_string($/;"	f
spos_t	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^    typedef std::map<int,pos_t> spos_t;$/;"	t	struct:test_pos_processor	file:
srandom	./src/c++/lib/blt_util/compat_unistd.h	15;"	d
ss_filt_win	./src/c++/lib/starling_common/starling_pos_processor_win_avg_set.hh	/^    window_average ss_filt_win;$/;"	m	struct:win_avg_set
ss_spandel_win	./src/c++/lib/starling_common/starling_pos_processor_win_avg_set.hh	/^    window_average ss_spandel_win;$/;"	m	struct:win_avg_set
ss_submap_win	./src/c++/lib/starling_common/starling_pos_processor_win_avg_set.hh	/^    window_average ss_submap_win;$/;"	m	struct:win_avg_set
ss_used_win	./src/c++/lib/starling_common/starling_pos_processor_win_avg_set.hh	/^    window_average ss_used_win;$/;"	m	struct:win_avg_set
sscaller_strand_grid	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    sscaller_strand_grid() const$/;"	f	struct:strelka_deriv_options
ssize_t	./src/c++/lib/blt_util/compat_unistd.h	37;"	d
ssnv_contam_tolerance	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    double ssnv_contam_tolerance = 0.15;$/;"	m	struct:strelka_options
ssnv_prior	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    double ssnv_prior;$/;"	m	struct:strelka_site_sim_options
stage_data	./src/c++/lib/blt_util/stage_manager.hh	/^struct stage_data$/;"	s
stage_data_shift_test	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^stage_data_shift_test(const stage_data& sd,$/;"	f	file:
stage_manager	./src/c++/lib/blt_util/stage_manager.cpp	/^stage_manager(const stage_data& sdata,$/;"	f	class:stage_manager
stage_manager	./src/c++/lib/blt_util/stage_manager.hh	/^struct stage_manager$/;"	s
stage_pos	./src/c++/lib/blt_util/stage_manager.hh	/^    stage_pos() const$/;"	f	struct:stage_data
stage_pos	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^    spos_t stage_pos;$/;"	m	struct:test_pos_processor	file:
stage_pos_t	./src/c++/lib/blt_util/stage_manager.hh	/^    typedef std::vector<pos_stage_id> stage_pos_t;$/;"	t	struct:stage_data
standardize_ref_seq	./src/c++/lib/blt_util/seq_util.cpp	/^standardize_ref_seq(const char* ref_seq_file,$/;"	f
starling	./src/c++/lib/applications/starling/starling.hh	/^struct starling : public illumina::Program$/;"	s
starlingSiteSimulator	./src/c++/lib/applications/starling/starlingSiteSimulator.hh	/^struct starlingSiteSimulator : public illumina::Program$/;"	s
starling_align_indel_info	./src/c++/lib/starling_common/starling_read_align.cpp	/^struct starling_align_indel_info$/;"	s	file:
starling_align_indel_status	./src/c++/lib/starling_common/starling_read_align.cpp	/^typedef std::map<IndelKey,starling_align_indel_info> starling_align_indel_status;$/;"	t	file:
starling_align_limit	./src/c++/lib/starling_common/starling_align_limit.cpp	/^starling_align_limit(const unsigned mac)$/;"	f	class:starling_align_limit
starling_align_limit	./src/c++/lib/starling_common/starling_align_limit.hh	/^struct starling_align_limit$/;"	s
starling_base_deriv_options	./src/c++/lib/starling_common/starling_base_shared.cpp	/^starling_base_deriv_options(const starling_base_options& opt)$/;"	f	class:starling_base_deriv_options
starling_base_deriv_options	./src/c++/lib/starling_common/starling_base_shared.hh	/^struct starling_base_deriv_options : public blt_deriv_options, private boost::noncopyable$/;"	s
starling_base_options	./src/c++/lib/starling_common/starling_base_shared.hh	/^    starling_base_options()$/;"	f	struct:starling_base_options
starling_base_options	./src/c++/lib/starling_common/starling_base_shared.hh	/^struct starling_base_options : public blt_options$/;"	s
starling_continuous_variant_caller	./src/c++/lib/applications/starling/starling_continuous_variant_caller.hh	/^struct starling_continuous_variant_caller$/;"	s
starling_deriv_options	./src/c++/lib/applications/starling/starling_shared.hh	/^    starling_deriv_options(const starling_options& opt)$/;"	f	struct:starling_deriv_options
starling_deriv_options	./src/c++/lib/applications/starling/starling_shared.hh	/^struct starling_deriv_options : public starling_base_deriv_options$/;"	s
starling_info	./src/c++/lib/applications/starling/starling_info.hh	/^    starling_info() {}$/;"	f	struct:starling_info
starling_info	./src/c++/lib/applications/starling/starling_info.hh	/^struct starling_info : public prog_info_base$/;"	s
starling_options	./src/c++/lib/applications/starling/starling_shared.hh	/^    starling_options()$/;"	f	struct:starling_options
starling_options	./src/c++/lib/applications/starling/starling_shared.hh	/^struct starling_options : public starling_base_options$/;"	s
starling_pile_caller	./src/c++/lib/applications/starling/starling_pile_test_run.cpp	/^starling_pile_caller(starling_options& opt,$/;"	f	class:starling_pile_caller
starling_pile_caller	./src/c++/lib/applications/starling/starling_pile_test_run.hh	/^struct starling_pile_caller$/;"	s
starling_pos_processor	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^starling_pos_processor($/;"	f	class:starling_pos_processor
starling_pos_processor	./src/c++/lib/applications/starling/starling_pos_processor.hh	/^struct starling_pos_processor : public starling_pos_processor_base$/;"	s
starling_pos_processor_base	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^starling_pos_processor_base($/;"	f	class:starling_pos_processor_base
starling_pos_processor_base	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^struct starling_pos_processor_base : public pos_processor_base, private boost::noncopyable$/;"	s
starling_read	./src/c++/lib/starling_common/starling_read.cpp	/^starling_read($/;"	f	class:starling_read
starling_read	./src/c++/lib/starling_common/starling_read.hh	/^struct starling_read : private boost::noncopyable$/;"	s
starling_read_buffer	./src/c++/lib/starling_common/starling_read_buffer.hh	/^    starling_read_buffer(read_id_counter* ricp = nullptr)$/;"	f	struct:starling_read_buffer
starling_read_buffer	./src/c++/lib/starling_common/starling_read_buffer.hh	/^struct starling_read_buffer : private boost::noncopyable$/;"	s
starling_read_counts	./src/c++/lib/starling_common/starling_base_shared.hh	/^struct starling_read_counts : public blt_read_counts$/;"	s
starling_read_filter_shared	./src/c++/lib/starling_common/starling_read_filter_shared.hh	/^starling_read_filter_shared($/;"	f
starling_run	./src/c++/lib/applications/starling/starling_run.cpp	/^starling_run($/;"	f
starling_sample_options	./src/c++/lib/starling_common/starling_base_shared.hh	/^    starling_sample_options($/;"	f	struct:starling_sample_options
starling_sample_options	./src/c++/lib/starling_common/starling_base_shared.hh	/^struct starling_sample_options$/;"	s
starling_site_sim	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^starling_site_sim($/;"	f
starling_site_sim_options	./src/c++/lib/applications/starling/starling_sim_test.hh	/^struct starling_site_sim_options$/;"	s
starling_streams	./src/c++/lib/applications/starling/starling_streams.cpp	/^starling_streams($/;"	f	class:starling_streams
starling_streams	./src/c++/lib/applications/starling/starling_streams.hh	/^struct starling_streams : public starling_streams_base$/;"	s
starling_streams_base	./src/c++/lib/starling_common/starling_streams_base.cpp	/^starling_streams_base($/;"	f	class:starling_streams_base
starling_streams_base	./src/c++/lib/starling_common/starling_streams_base.hh	/^struct starling_streams_base$/;"	s
start	./src/c++/lib/common/SegmentTimeTracker.hh	/^    start()$/;"	f	struct:SegmentTimeTracker
start	./src/c++/lib/htsapi/vcf_util.cpp	/^    start(const char* gt,$/;"	f	struct:gt_parse_helper
startFile	./src/c++/lib/htsapi/bam_streamer.hh	/^    int startFile, endFile;$/;"	m	struct:bam_streamer
startPriorIndelSegment	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^    unsigned startPriorIndelSegment = 0;$/;"	m	struct:AlignmentInfo	file:
startPriorMatchSegment	./src/c++/lib/starling_common/normalizeAlignment.cpp	/^    unsigned startPriorMatchSegment = 0;$/;"	m	struct:AlignmentInfo	file:
state	./src/c++/lib/alignment/AlignerUtil.hh	/^    AlignState::index_t state = AlignState::MATCH;$/;"	m	struct:BackTrace
statsFilename	./src/c++/lib/applications/MergeRunStats/MRSOptions.hh	/^    std::vector<std::string> statsFilename;$/;"	m	struct:MRSOptions
statsFilenameList	./src/c++/lib/applications/MergeRunStats/MRSOptions.hh	/^    std::string statsFilenameList;$/;"	m	struct:MRSOptions
status	./src/c++/lib/starling_common/IndelData.hh	/^    mutable status_t status;$/;"	m	struct:IndelData
status_t	./src/c++/lib/starling_common/IndelData.hh	/^    struct status_t$/;"	s	struct:IndelData
stderror	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    double stderror() const$/;"	f	struct:depth_stream_stat
stderror	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    double stderror() const$/;"	f	struct:depth_stream_stat_range
stderror	./src/c++/lib/blt_util/stream_stat.hh	/^    double stderror() const$/;"	f	struct:stream_stat
stop	./src/c++/lib/blt_util/time_util.hh	/^    stop()$/;"	f	struct:TimeTracker
stop	./src/c++/lib/common/SegmentTimeTracker.cpp	/^stop()$/;"	f	class:SegmentTimeTracker
stoupper	./src/c++/lib/htsapi/vcf_record.cpp	/^stoupper(std::string& s)$/;"	f	file:
str_pair_uint_map_t	./src/c++/lib/assembly/IterativeAssembler.cpp	/^typedef std::unordered_map<std::string, std::pair<unsigned,unsigned> > str_pair_uint_map_t;$/;"	t	file:
str_set_t	./src/c++/lib/assembly/SmallAssembler.cpp	/^typedef std::unordered_set<std::string> str_set_t;$/;"	t	file:
str_set_uint_map_t	./src/c++/lib/assembly/IterativeAssembler.cpp	/^typedef std::unordered_map<std::string,std::set<unsigned> > str_set_uint_map_t;$/;"	t	file:
str_set_uint_map_t	./src/c++/lib/assembly/SmallAssembler.cpp	/^typedef std::unordered_map<std::string,std::set<unsigned> > str_set_uint_map_t;$/;"	t	file:
str_uint_map_t	./src/c++/lib/assembly/IterativeAssembler.cpp	/^typedef std::unordered_map<std::string,unsigned> str_uint_map_t;$/;"	t	file:
str_uint_map_t	./src/c++/lib/assembly/SmallAssembler.cpp	/^typedef std::unordered_map<std::string,unsigned> str_uint_map_t;$/;"	t	file:
strand0	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    BaseErrorContextObservationExportStrandObservation strand0;$/;"	m	struct:BaseErrorContextObservationExportObservation
strand0	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    StrandBaseCounts strand0;$/;"	m	struct:BaseErrorContextObservation
strand1	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    BaseErrorContextObservationExportStrandObservation strand1;$/;"	m	struct:BaseErrorContextObservationExportObservation
strand1	./src/c++/lib/errorAnalysis/BaseErrorCounts.hh	/^    StrandBaseCounts strand1;$/;"	m	struct:BaseErrorContextObservation
strandBias	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    double strandBias = 0.;$/;"	m	struct:GermlineVariantAlleleInfo
strandBias	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    double strandBias = 0;$/;"	m	struct:GermlineSiteSampleInfo
strandBias	./src/c++/lib/applications/starling/starling_continuous_variant_caller.cpp	/^strandBias($/;"	f	class:starling_continuous_variant_caller
strandBias	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    double strandBias = 0;$/;"	m	struct:snv_result_set
strand_bias	./src/c++/lib/blt_common/position_snp_call_pprob_digt.hh	/^    double strand_bias;$/;"	m	struct:diploid_genotype
strdup	./src/c++/lib/blt_util/compat_util.hh	31;"	d
stream_stat	./src/c++/lib/blt_util/stream_stat.hh	/^    stream_stat() : M_(0),Q_(0),max_(0),min_(0),k_(0) {}$/;"	f	struct:stream_stat
stream_stat	./src/c++/lib/blt_util/stream_stat.hh	/^struct stream_stat$/;"	s
streamerRegion	./src/c++/lib/starling_common/starling_ref_seq.hh	/^    std::string streamerRegion;$/;"	m	struct:AnalysisRegionInfo
streamerRegionRange	./src/c++/lib/starling_common/starling_ref_seq.hh	/^    known_pos_range2 streamerRegionRange;$/;"	m	struct:AnalysisRegionInfo
strelka	./src/c++/lib/applications/strelka/strelka.hh	/^struct strelka : public illumina::Program$/;"	s
strelkaSiteSimulator	./src/c++/lib/applications/strelka/strelkaSiteSimulator.hh	/^struct strelkaSiteSimulator : public illumina::Program$/;"	s
strelka_deriv_options	./src/c++/lib/applications/strelka/strelka_shared.cpp	/^strelka_deriv_options(const strelka_options& opt)$/;"	f	class:strelka_deriv_options
strelka_deriv_options	./src/c++/lib/applications/strelka/strelka_shared.hh	/^struct strelka_deriv_options : public starling_base_deriv_options$/;"	s
strelka_filter_keeper	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    strelka_filter_keeper()$/;"	f	struct:strelka_filter_keeper
strelka_filter_keeper	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^struct strelka_filter_keeper$/;"	s
strelka_info	./src/c++/lib/applications/strelka/strelka_info.hh	/^    strelka_info() {}$/;"	f	struct:strelka_info
strelka_info	./src/c++/lib/applications/strelka/strelka_info.hh	/^struct strelka_info : public prog_info_base$/;"	s
strelka_options	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    strelka_options()$/;"	f	struct:strelka_options
strelka_options	./src/c++/lib/applications/strelka/strelka_shared.hh	/^struct strelka_options : public starling_base_options$/;"	s
strelka_pile_caller	./src/c++/lib/applications/strelka/strelka_pile_test_run.cpp	/^strelka_pile_caller(strelka_options& opt,$/;"	f	class:strelka_pile_caller
strelka_pile_caller	./src/c++/lib/applications/strelka/strelka_pile_test_run.hh	/^struct strelka_pile_caller$/;"	s
strelka_pile_test_run	./src/c++/lib/applications/strelka/strelka_pile_test_run.cpp	/^strelka_pile_test_run($/;"	f
strelka_pos_processor	./src/c++/lib/applications/strelka/strelka_pos_processor.cpp	/^strelka_pos_processor($/;"	f	class:strelka_pos_processor
strelka_pos_processor	./src/c++/lib/applications/strelka/strelka_pos_processor.hh	/^struct strelka_pos_processor : public starling_pos_processor_base$/;"	s
strelka_run	./src/c++/lib/applications/strelka/strelka_run.cpp	/^strelka_run($/;"	f
strelka_shared_modifiers	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    strelka_shared_modifiers($/;"	f	struct:strelka_shared_modifiers
strelka_shared_modifiers	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^struct strelka_shared_modifiers$/;"	s
strelka_shared_modifiers_indel	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    strelka_shared_modifiers_indel()$/;"	f	struct:strelka_shared_modifiers_indel
strelka_shared_modifiers_indel	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^struct strelka_shared_modifiers_indel : public strelka_shared_modifiers$/;"	s
strelka_shared_modifiers_snv	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    strelka_shared_modifiers_snv()$/;"	f	struct:strelka_shared_modifiers_snv
strelka_shared_modifiers_snv	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^struct strelka_shared_modifiers_snv : public strelka_shared_modifiers$/;"	s
strelka_site_sim	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^strelka_site_sim(strelka_options& opt,$/;"	f
strelka_site_sim_options	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    strelka_site_sim_options()$/;"	f	struct:strelka_site_sim_options
strelka_site_sim_options	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^struct strelka_site_sim_options$/;"	s
strelka_streams	./src/c++/lib/applications/strelka/strelka_streams.cpp	/^strelka_streams($/;"	f	class:strelka_streams
strelka_streams	./src/c++/lib/applications/strelka/strelka_streams.hh	/^struct strelka_streams : public starling_streams_base$/;"	s
string_bam_seq	./src/c++/lib/htsapi/bam_seq.hh	/^    string_bam_seq(const char* s,$/;"	f	struct:string_bam_seq
string_bam_seq	./src/c++/lib/htsapi/bam_seq.hh	/^    string_bam_seq(const std::string& s)$/;"	f	struct:string_bam_seq
string_bam_seq	./src/c++/lib/htsapi/bam_seq.hh	/^struct string_bam_seq : public bam_seq_base$/;"	s
stringer	./src/c++/lib/blt_util/stringer.hh	/^    stringer<T>()$/;"	f	struct:stringer
stringer	./src/c++/lib/blt_util/stringer.hh	/^struct stringer : public stringer_base$/;"	s
stringer_base	./src/c++/lib/blt_util/stringer.hh	/^    stringer_base()$/;"	f	struct:stringer_base
stringer_base	./src/c++/lib/blt_util/stringer.hh	/^struct stringer_base$/;"	s
strval	./src/c++/lib/blt_util/PrettyFloat.hh	/^    strval() const$/;"	f	struct:PrettyFloat
submap_read_ids	./src/c++/lib/starling_common/IndelData.hh	/^    evidence_t submap_read_ids;$/;"	m	struct:IndelSampleData
suboverlap_tier1_read_ids	./src/c++/lib/starling_common/IndelData.hh	/^    evidence_t suboverlap_tier1_read_ids;$/;"	m	struct:IndelSampleData
suboverlap_tier2_read_ids	./src/c++/lib/starling_common/IndelData.hh	/^    evidence_t suboverlap_tier2_read_ids;$/;"	m	struct:IndelSampleData
subsample_filter	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned subsample_filter = 0;$/;"	m	struct:blt_read_counts
sudist_t	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^typedef boost::uniform_smallint<> sudist_t;$/;"	t	file:
sudist_t	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^typedef boost::uniform_smallint<> sudist_t;$/;"	t	file:
sumSegmentPos	./src/c++/lib/starling_common/starling_read_align.cpp	/^    unsigned sumSegmentPos = 0;$/;"	m	struct:extra_path_info	file:
sumSquare	./src/c++/lib/blt_common/MapqTracker.hh	/^    double sumSquare = 0;$/;"	m	struct:MapqTracker
sum_gt	./src/c++/lib/blt_common/position_snp_call_pprob_digt.cpp	/^sum_gt(blt_float_t* const x1,$/;"	f	file:
supplement	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned supplement = 0;$/;"	m	struct:blt_read_counts
supportCount	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    double supportCount;$/;"	m	struct:IndelDepthSupportTotal
supportCounts	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    LocusSupportingReadStats supportCounts;$/;"	m	struct:LocusSampleInfo
supportReads	./src/c++/lib/assembly/AssembledContig.hh	/^    std::set<unsigned> supportReads;$/;"	m	struct:AssembledContig
swap_info	./src/c++/lib/blt_util/align_path_util.hh	/^    swap_info(const path_t& path,$/;"	f	struct:ALIGNPATH::swap_info
swap_info	./src/c++/lib/blt_util/align_path_util.hh	/^struct swap_info$/;"	s	namespace:ALIGNPATH
symbol	./src/c++/lib/alignment/Alignment.hh	/^    symbol(const index_t i)$/;"	f	struct:AlignState
symbol	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^symbol($/;"	f	namespace:INDEL_TYPE
system	./src/c++/lib/blt_util/time_util.hh	/^    double system = 0.;$/;"	m	struct:CpuTimes
t	./src/c++/lib/starling_common/CandidateSnvBuffer.hh	/^    HaplotypeId t;$/;"	m	struct:HaplotypeIdAndCountRatio
table_chi_sqr_pval	./src/c++/lib/blt_util/table_test.cpp	/^table_chi_sqr_pval(const int* table,$/;"	f
table_exact_pval	./src/c++/lib/blt_util/table_test.cpp	/^table_exact_pval(const int* table,$/;"	f
target_id	./src/c++/lib/htsapi/bam_record.hh	/^    int target_id() const$/;"	f	struct:bam_record
target_id_to_name	./src/c++/lib/htsapi/bam_streamer.cpp	/^target_id_to_name(const int32_t tid) const$/;"	f	class:bam_streamer
target_name_to_id	./src/c++/lib/htsapi/bam_streamer.cpp	/^target_name_to_id(const char* seq_name) const$/;"	f	class:bam_streamer
tcov	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    unsigned tcov;$/;"	m	struct:strelka_site_sim_options
template_size	./src/c++/lib/htsapi/bam_record.hh	/^    int32_t template_size() const$/;"	f	struct:bam_record
test	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    test(const GERMLINE_VARIANT_VCF_FILTERS::index_t i) const$/;"	f	struct:GermlineFilterKeeper
test	./src/c++/lib/calibration/featuresetUtil.hh	/^    test(const unsigned featureIndex) const$/;"	f	struct:VariantScoringFeatureKeeper
testAlign	./src/c++/lib/alignment/test/GlobalAlignerTest.cpp	/^testAlign($/;"	f	file:
testAlleleToGt	./src/c++/lib/htsapi/test/vcf_util_test.cpp	/^testAlleleToGt($/;"	f	file:
testCanSiteJoinSampleBlock	./src/c++/lib/applications/starling/gvcf_block_site_record.cpp	/^testCanSiteJoinSampleBlock($/;"	f	class:gvcf_block_site_record
testCanSiteJoinSampleBlockShared	./src/c++/lib/applications/starling/gvcf_block_site_record.cpp	/^testCanSiteJoinSampleBlockShared($/;"	f	class:gvcf_block_site_record
testCount	./src/c++/lib/starling_common/test/min_count_binom_gte_cache_test.cpp	/^testCount($/;"	f	file:
testGtToAllele	./src/c++/lib/htsapi/test/vcf_util_test.cpp	/^testGtToAllele($/;"	f	file:
testIsFirstBaseMatching	./src/c++/lib/blt_util/RecordTracker.cpp	/^testIsFirstBaseMatching($/;"	f	file:
testNormalizeAlignment	./src/c++/lib/starling_common/test/normalizeAlignment_test.cpp	/^testNormalizeAlignment($/;"	f	file:
testNormalizeFromBamRecord	./src/c++/lib/starling_common/test/normalizeAlignment_test.cpp	/^testNormalizeFromBamRecord($/;"	f	file:
testPos	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    testPos($/;"	f	struct:SomaticIndelVcfWriter
test_end_pin_indel_placement	./src/c++/lib/starling_common/test/starling_read_align_test.cpp	/^test_end_pin_indel_placement($/;"	f	file:
test_indel_placement	./src/c++/lib/starling_common/test/starling_read_align_test.cpp	/^test_indel_placement($/;"	f	file:
test_key	./src/c++/lib/blt_util/id_map.hh	/^    bool test_key(const K& key) const$/;"	f	struct:id_map
test_key	./src/c++/lib/blt_util/id_map.hh	/^    bool test_key(const K& key) const$/;"	f	struct:id_set
test_limit_case	./src/c++/lib/blt_util/test/align_path_test.cpp	/^test_limit_case($/;"	f	file:
test_pos_processor	./src/c++/lib/blt_util/test/stage_manager_test.cpp	/^struct test_pos_processor : public pos_processor_base$/;"	s	file:
test_read_limit_case	./src/c++/lib/blt_util/test/align_path_test.cpp	/^test_read_limit_case($/;"	f	file:
test_single_adjacent_case	./src/c++/lib/starling_common/test/indel_util_test.cpp	/^test_single_adjacent_case($/;"	f	file:
test_single_cigar_conversion	./src/c++/lib/blt_util/test/align_path_test.cpp	/^test_single_cigar_conversion(const std::string& input)$/;"	f	file:
test_single_intersect_case	./src/c++/lib/starling_common/test/indel_util_test.cpp	/^test_single_intersect_case($/;"	f	file:
test_split_string_bytype	./src/c++/lib/blt_util/test/string_util_test.cpp	/^test_split_string_bytype(T test)$/;"	f
test_string_clean	./src/c++/lib/blt_util/test/align_path_test.cpp	/^test_string_clean(const char* cigar, const char* expect)$/;"	f	file:
thetaFilename	./src/c++/lib/applications/EstimateVariantErrorRates/EPECOptions.hh	/^    std::string thetaFilename;$/;"	m	struct:EPECOptions
thetaFilename	./src/c++/lib/starling_common/starling_base_shared.hh	/^    std::string thetaFilename;$/;"	m	struct:starling_base_options
thread_worker	./src/c++/lib/applications/starling/starling_run.cpp	/^void *thread_worker (void *data)$/;"	f
tier1Depth	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unsigned tier1Depth = 0;$/;"	m	struct:GermlineIndelSampleInfo
tier1Depth	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned tier1Depth = 0;$/;"	m	struct:AlleleSampleReportInfo
tier1_map_read_ids	./src/c++/lib/starling_common/IndelData.hh	/^    evidence_t tier1_map_read_ids;$/;"	m	struct:IndelSampleData
tier2	./src/c++/lib/starling_common/starling_base_shared.hh	/^    Tier2Options tier2;$/;"	m	struct:starling_base_options
tier2_calls	./src/c++/lib/blt_common/snp_pos_info.hh	/^    std::vector<base_call> tier2_calls; \/\/ call not passing stringent quality criteria$/;"	m	struct:snp_pos_info
tier2_indel_nonsite_match_lnp	./src/c++/lib/starling_common/starling_base_shared.hh	/^    double tier2_indel_nonsite_match_lnp;$/;"	m	struct:starling_base_deriv_options
tier2_indel_nonsite_match_prob	./src/c++/lib/starling_common/Tier2Options.hh	/^    double tier2_indel_nonsite_match_prob = 0.25;$/;"	m	struct:Tier2Options
tier2_map_read_ids	./src/c++/lib/starling_common/IndelData.hh	/^    evidence_t tier2_map_read_ids;$/;"	m	struct:IndelSampleData
tier2_min_mapping_quality	./src/c++/lib/starling_common/Tier2Options.hh	/^    int tier2_min_mapping_quality = 0;$/;"	m	struct:Tier2Options
tier2_mismatch_density_filter_count	./src/c++/lib/starling_common/Tier2Options.hh	/^    int tier2_mismatch_density_filter_count = 0;$/;"	m	struct:Tier2Options
tier2_mismatch_filter_map	./src/c++/lib/starling_common/read_mismatch_info.hh	/^    bool tier2_mismatch_filter_map;$/;"	m	struct:read_base_mismatch_info
tier_t	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    typedef bool tier_t;$/;"	t	struct:somatic_indel_call
tier_t	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    typedef bool tier_t;$/;"	t	struct:somatic_snv_genotype_grid
tisri	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    std::array<AlleleSampleReportInfo,2> tisri;$/;"	m	struct:SomaticIndelVcfInfo
toggle_is_first	./src/c++/lib/htsapi/bam_record.hh	/^    void toggle_is_first()$/;"	f	struct:bam_record
toggle_is_fwd_strand	./src/c++/lib/htsapi/bam_record.hh	/^    void toggle_is_fwd_strand()$/;"	f	struct:bam_record
toggle_is_mate_fwd_strand	./src/c++/lib/htsapi/bam_record.hh	/^    void toggle_is_mate_fwd_strand()$/;"	f	struct:bam_record
toggle_is_mate_unmapped	./src/c++/lib/htsapi/bam_record.hh	/^    void toggle_is_mate_unmapped()$/;"	f	struct:bam_record
toggle_is_paired	./src/c++/lib/htsapi/bam_record.hh	/^    void toggle_is_paired()$/;"	f	struct:bam_record
toggle_is_second	./src/c++/lib/htsapi/bam_record.hh	/^    void toggle_is_second()$/;"	f	struct:bam_record
toggle_is_secondary	./src/c++/lib/htsapi/bam_record.hh	/^    void toggle_is_secondary()$/;"	f	struct:bam_record
toggle_is_unmapped	./src/c++/lib/htsapi/bam_record.hh	/^    void toggle_is_unmapped()$/;"	f	struct:bam_record
total	./src/c++/lib/applications/strelka/SiteNoise.hh	/^    uint16_t total = 0;$/;"	m	struct:SiteNoise
total	./src/c++/lib/starling_common/starling_read_util.cpp	/^    total()$/;"	f	struct:__anon12::ddata	file:
totalConfidentAltAlleleCount	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    totalConfidentAltAlleleCount() const$/;"	f	struct:SupportingReadCountGroup
totalConfidentCounts	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    totalConfidentCounts() const$/;"	f	struct:LocusSupportingReadStats
totalConfidentCounts	./src/c++/lib/starling_common/LocusSupportingReadStats.hh	/^    totalConfidentCounts() const$/;"	f	struct:SupportingReadCountGroup
totalCount	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^    unsigned totalCount;$/;"	m	struct:scan_result	file:
totalCount	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    totalCount() const$/;"	f	struct:IndelErrorContextObservation
totalDeletionSize	./src/c++/lib/starling_common/starling_read_align.cpp	/^    unsigned totalDeletionSize = 0;$/;"	m	struct:extra_path_info	file:
totalInsertionSize	./src/c++/lib/starling_common/starling_read_align.cpp	/^    unsigned totalInsertionSize = 0;$/;"	m	struct:extra_path_info	file:
totalSegments	./src/c++/lib/htsapi/bam_streamer.hh	/^    int totalSegments;$/;"	m	struct:bam_streamer
totalSignalCount	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    totalSignalCount() const$/;"	f	struct:IndelErrorContextObservation
total_aeb_rec	./src/c++/lib/htsapi/bam_streamer.hh	/^    int cur_aeb_rec, cur_aib_rec, total_aeb_rec, total_aib_rec;$/;"	m	struct:bam_streamer
total_aib_rec	./src/c++/lib/htsapi/bam_streamer.hh	/^    int cur_aeb_rec, cur_aib_rec, total_aeb_rec, total_aib_rec;$/;"	m	struct:bam_streamer
total_confident_reads	./src/c++/lib/starling_common/AlleleReportInfo.hh	/^    unsigned total_confident_reads() const$/;"	f	struct:AlleleSampleReportInfo
total_qual	./src/c++/lib/blt_common/hapscore.cpp	/^    unsigned total_qual = 0;$/;"	m	struct:hinfo	file:
total_qual	./src/c++/lib/blt_common/hapscore.hh	/^    total_qual() const$/;"	f	struct:hap_cand
total_sites	./src/c++/lib/applications/starling/starling_sim_test.hh	/^    unsigned total_sites = 1000000;$/;"	m	struct:starling_site_sim_options
total_sites	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    unsigned total_sites;$/;"	m	struct:strelka_site_sim_options
trailing_indel_key	./src/c++/lib/starling_common/CandidateAlignment.hh	/^    IndelKey trailing_indel_key;$/;"	m	struct:CandidateAlignment
translateBaseIndexToAlleleIndex	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^translateBaseIndexToAlleleIndex($/;"	f	file:
translateDigtToVcfGenotype	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^translateDigtToVcfGenotype($/;"	f	file:
translate_maplev_to_indel_type	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^translate_maplev_to_indel_type(const MAPLEVEL::index_t i)$/;"	f	file:
tree	./src/c++/lib/calibration/RandomForestModel.hh	/^        TreeNode<int,int> tree;$/;"	m	struct:RandomForestModel::DecisionTreeNode
tumor_alt_id	./src/c++/lib/applications/strelka/somatic_result_set.hh	/^    unsigned tumor_alt_id;$/;"	m	struct:snv_result_set
tumor_purity	./src/c++/lib/applications/strelka/strelka_sim_test.hh	/^    double tumor_purity;$/;"	m	struct:strelka_site_sim_options
tumor_realigned_read_filename	./src/c++/lib/applications/strelka/strelka_shared.hh	/^    std::string tumor_realigned_read_filename;$/;"	m	struct:strelka_options
type	./src/c++/lib/blt_util/align_path.hh	/^    align_t type;$/;"	m	struct:ALIGNPATH::path_segment
type	./src/c++/lib/starling_common/IndelKey.hh	/^    INDEL::index_t type;$/;"	m	struct:IndelKey
type	./src/c++/lib/starling_common/starling_read_align_clipper.cpp	/^    map_t type; \/\/\/< State of the read alignment to the reference at this position$/;"	m	struct:__anon10::ref_map_type	file:
type_error	./src/c++/lib/blt_util/stringer.cpp	/^type_error(const char* tiname)$/;"	f	class:stringer_base
uint16_t	./src/c++/lib/blt_util/compat_unistd.h	/^typedef unsigned __int16  uint16_t;$/;"	t
uint32_t	./src/c++/lib/blt_util/compat_unistd.h	/^typedef unsigned __int32  uint32_t;$/;"	t
uint64_t	./src/c++/lib/blt_util/compat_unistd.h	/^typedef unsigned __int64  uint64_t;$/;"	t
uint8_t	./src/c++/lib/blt_util/compat_unistd.h	/^typedef unsigned __int8   uint8_t;$/;"	t
unalignedPrefixSize	./src/c++/lib/blt_util/align_path.cpp	/^unalignedPrefixSize(const path_t& apath)$/;"	f	namespace:ALIGNPATH
unalignedSuffixSize	./src/c++/lib/blt_util/align_path.cpp	/^unalignedSuffixSize(const path_t& apath)$/;"	f	namespace:ALIGNPATH
unionMerge	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unionMerge(const GermlineFilterKeeper& filterKeeper)$/;"	f	struct:GermlineFilterKeeper
unknown	./src/c++/lib/htsapi/vcf_util.cpp	/^    unknown(const char* gt,$/;"	f	struct:gt_parse_helper	file:
unknown_cigar_error	./src/c++/lib/blt_util/align_path.cpp	/^unknown_cigar_error(const char* const cigar,$/;"	f	file:
unknown_id_error	./src/c++/lib/blt_util/stage_manager.cpp	/^unknown_id_error(const int id) const$/;"	f	class:stage_data
unknown_md_error	./src/c++/lib/blt_util/align_path_match_descriptor.cpp	/^unknown_md_error(const char* const md,$/;"	f	file:
unlink	./src/c++/lib/blt_util/compat_unistd.h	29;"	d
unmapped	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned unmapped = 0;$/;"	m	struct:blt_read_counts
unregister_notifier	./src/c++/lib/blt_util/observer.hh	/^    unregister_notifier(const notifier<T>* n)$/;"	f	struct:observer
unregister_observer	./src/c++/lib/blt_util/observer.hh	/^    unregister_observer(observer<T>* n) const$/;"	f	struct:notifier
unset	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    unset(const GERMLINE_VARIANT_VCF_FILTERS::index_t i)$/;"	f	struct:GermlineFilterKeeper
update	./src/c++/lib/blt_util/PrettyFloat.hh	/^    update(const char* str)$/;"	f	struct:PrettyFloat
update	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    void update (const unsigned d)$/;"	f	struct:depth_stream_stat
update	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    void update (const unsigned d)$/;"	f	struct:depth_stream_stat_range
updateAlleleEVSScore	./src/c++/lib/applications/strelka/somaticAlleleUtil.cpp	/^updateAlleleEVSScore($/;"	f
updateBacktrace	./src/c++/lib/alignment/AlignerUtil.hh	/^updateBacktrace($/;"	f
updateContinuousIndelLocusWithSampleInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^updateContinuousIndelLocusWithSampleInfo($/;"	f	file:
updateContinuousSiteSampleInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^updateContinuousSiteSampleInfo($/;"	f	file:
updateContinuousSnvLocusInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^updateContinuousSnvLocusInfo($/;"	f	file:
updateContinuousSnvLocusWithSampleInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^updateContinuousSnvLocusWithSampleInfo($/;"	f	file:
updateDepthConvergenceTest	./src/c++/lib/applications/GetChromDepth/ReadChromDepthUtil.cpp	/^    updateDepthConvergenceTest()$/;"	f	struct:ChromDepthTracker
updateDiploidIndelLocusWithSampleInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^updateDiploidIndelLocusWithSampleInfo($/;"	f	file:
updateEndPosition	./src/c++/lib/starling_common/ActiveRegionDetector.cpp	/^ActiveRegionDetector::updateEndPosition(const pos_t pos)$/;"	f	class:ActiveRegionDetector
updateGenotypeLogLhoodFromAlleleLogLhood	./src/c++/lib/starling_common/AlleleGroupGenotype.cpp	/^updateGenotypeLogLhoodFromAlleleLogLhood($/;"	f	file:
updateGermlineScoringMetrics	./src/c++/lib/starling_common/pos_basecall_buffer.cpp	/^updateGermlineScoringMetrics($/;"	f	class:pos_basecall_buffer
updateGermlineScoringMetrics	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^updateGermlineScoringMetrics($/;"	f	class:starling_pos_processor_base
updateIndelLocusWithSampleInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^updateIndelLocusWithSampleInfo($/;"	f	file:
updateIndelSampleInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^updateIndelSampleInfo($/;"	f	file:
updateIndelScoringInfo	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^updateIndelScoringInfo($/;"	f	file:
updateLogValue	./src/c++/lib/blt_util/LogValuePair.hh	/^    updateLogValue(const double logValue)$/;"	f	struct:LogValuePair
updatePath	./src/c++/lib/alignment/AlignerUtil.hh	/^    updatePath($/;"	f	struct:AlignerUtil
updateRepeatSpan	./src/c++/lib/starling_common/ReferenceRepeatFinder.cpp	/^void ReferenceRepeatFinder::updateRepeatSpan(pos_t pos)$/;"	f	class:ReferenceRepeatFinder
updateSiteSampleInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^updateSiteSampleInfo($/;"	f	file:
updateSnvLocusWithSampleInfo	./src/c++/lib/applications/starling/starling_pos_processor.cpp	/^updateSnvLocusWithSampleInfo($/;"	f	file:
updateSomaticScoringMetrics	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^updateSomaticScoringMetrics($/;"	f	class:starling_pos_processor_base
updateSupportingReadStats	./src/c++/lib/starling_common/AlleleGroupGenotype.cpp	/^updateSupportingReadStats($/;"	f	file:
updateValue	./src/c++/lib/blt_util/LogValuePair.hh	/^    updateValue(const double value)$/;"	f	struct:LogValuePair
update_full_segment	./src/c++/lib/starling_common/starling_read.cpp	/^update_full_segment()$/;"	f	class:starling_read
update_largest_indel_ref_span	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^update_largest_indel_ref_span(const unsigned is)$/;"	f	class:starling_pos_processor_base
update_largest_read_size	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^update_largest_read_size(const unsigned rs)$/;"	f	class:starling_pos_processor_base
update_largest_total_indel_ref_span_per_read	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^update_largest_total_indel_ref_span_per_read(const unsigned is)$/;"	f	class:starling_pos_processor_base
update_read_pos_ranksum	./src/c++/lib/starling_common/pos_basecall_buffer.cpp	/^update_read_pos_ranksum($/;"	f	class:pos_basecall_buffer
update_stageman	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^update_stageman()$/;"	f	class:starling_pos_processor_base
upstream_oligo_size	./src/c++/lib/starling_common/starling_base_shared.hh	/^    unsigned upstream_oligo_size = 0;$/;"	m	struct:starling_base_options
usage	./src/c++/lib/applications/DumpSequenceErrorCounts/DSECOptions.cpp	/^usage($/;"	f	file:
usage	./src/c++/lib/applications/EstimateParametersFromErrorCounts/EPECOptions.cpp	/^usage($/;"	f	file:
usage	./src/c++/lib/applications/EstimateVariantErrorRates/EPECOptions.cpp	/^usage($/;"	f	file:
usage	./src/c++/lib/applications/GetChromDepth/ChromDepthOptions.cpp	/^usage($/;"	f	file:
usage	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsInfo.cpp	/^usage(const char* xmessage) const$/;"	f	class:GetSequenceErrorCountsInfo
usage	./src/c++/lib/applications/MergeRunStats/MRSOptions.cpp	/^usage($/;"	f	file:
usage	./src/c++/lib/applications/MergeSequenceErrorCounts/MSECOptions.cpp	/^usage($/;"	f	file:
usage	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^usage($/;"	f	file:
usage	./src/c++/lib/applications/starling/starling_info.cpp	/^usage(const char* xmessage) const$/;"	f	class:starling_info
usage	./src/c++/lib/applications/strelka/strelka_info.cpp	/^usage(const char* xmessage) const$/;"	f	class:strelka_info
usage	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_info.cpp	/^usage($/;"	f	class:snoise_info
usage	./src/c++/lib/common/ProgramUtil.cpp	/^usage($/;"	f
used	./src/c++/lib/blt_common/blt_shared.hh	/^    unsigned used = 0;$/;"	m	struct:blt_read_counts
user	./src/c++/lib/blt_util/time_util.hh	/^    double user = 0.;$/;"	m	struct:CpuTimes
userIndex	./src/c++/lib/starling_common/HtsMergeStreamer.hh	/^        unsigned userIndex = 0;$/;"	m	struct:HtsMergeStreamer::OrderData
user_genome_size	./src/c++/lib/starling_common/starling_base_shared.hh	/^    uint32_t user_genome_size = 0; \/\/ genome size specified by user for the indel calling model -- actual value used is in deriv_options.$/;"	m	struct:starling_base_options
val	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyError.cpp	/^    virtual double val(const double* in)$/;"	f	struct:__anon22::error_minfunc
val	./src/c++/lib/applications/EstimateParametersFromErrorCounts/indelModelVariantAndIndyErrorNoOverlap.cpp	/^    virtual double val(const double* in)$/;"	f	struct:__anon21::error_minfunc
val	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndBinomialMixtureError.cpp	/^    virtual double val(const double* in)$/;"	f	struct:__anon19::error_minfunc
val	./src/c++/lib/applications/EstimateParametersFromErrorCounts/snvModelVariantAndIndyError.cpp	/^    virtual double val(const double* in)$/;"	f	struct:__anon24::error_minfunc
val	./src/c++/lib/applications/strelka/strelka_digt_states.hh	/^    std::vector<bool> val;$/;"	m	struct:DDIGT_GRID::is_nonsom_maker_t
val	./src/c++/lib/blt_common/position_loghood_minfunc.cpp	/^val(const double nonref_freq) const$/;"	f	class:position_nonref_freq_loghood_minfunc
val	./src/c++/lib/blt_common/position_loghood_minfunc.cpp	/^val(const double* allele_distro_in)$/;"	f	class:position_allele_distro_loghood_minfunc
val	./src/c++/lib/blt_common/sample_range_impl.hh	/^    blt_float_t val;$/;"	m	struct:fval
val	./src/c++/lib/blt_util/basic_matrix.hh	/^    val(const unsigned row,$/;"	f	struct:basic_matrix
val	./src/c++/lib/blt_util/depth_buffer.hh	/^    val(const pos_t pos) const$/;"	f	struct:depth_buffer
val	./src/c++/lib/blt_util/depth_buffer.hh	/^    val(const pos_t pos) const$/;"	f	struct:depth_buffer_compressible
val	./src/c++/lib/blt_util/test/observer_test.cpp	/^    int val;$/;"	m	struct:observer_test	file:
val	./src/c++/lib/strelka_common/het_ratio_cache.hh	/^    std::array<blt_float_t,NVAL> val;$/;"	m	struct:cache_val
validate	./src/c++/lib/blt_common/blt_shared.hh	/^    validate() const$/;"	f	struct:blt_options
validate	./src/c++/lib/blt_util/PrettyFloat.hh	/^void validate(boost::any& v,$/;"	f
validate	./src/c++/lib/starling_common/IndelKey.cpp	/^validate() const$/;"	f	class:IndelKey
validateBamHeaderChromSync	./src/c++/lib/htsapi/vcf_streamer.cpp	/^validateBamHeaderChromSync($/;"	f	class:vcf_streamer
validate_blt_opt	./src/c++/lib/blt_common/blt_arg_validate.cpp	/^validate_blt_opt($/;"	f
validate_new_pos_value	./src/c++/lib/blt_util/stage_manager.cpp	/^validate_new_pos_value(const pos_t pos,$/;"	f	class:stage_manager
variance	./src/c++/lib/blt_util/depth_stream_stat.hh	/^    double variance() const$/;"	f	struct:depth_stream_stat
variance	./src/c++/lib/blt_util/depth_stream_stat_range.hh	/^    double variance() const$/;"	f	struct:depth_stream_stat_range
variance	./src/c++/lib/blt_util/stream_stat.hh	/^    double variance() const$/;"	f	struct:stream_stat
variantStatus	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    GENOTYPE_STATUS::genotype_t variantStatus = GENOTYPE_STATUS::UNKNOWN;$/;"	m	struct:ExportedIndelObservations
variantStatus	./src/c++/lib/errorAnalysis/IndelErrorCounts.hh	/^    GENOTYPE_STATUS::genotype_t variantStatus;$/;"	m	struct:IndelErrorContextObservation
variant_pipe_stage_base	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^    explicit variant_pipe_stage_base(const std::shared_ptr<variant_pipe_stage_base>& sink) : _sink(sink) {}$/;"	f	class:variant_pipe_stage_base
variant_pipe_stage_base	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^    variant_pipe_stage_base() : _sink(nullptr) {}$/;"	f	class:variant_pipe_stage_base
variant_pipe_stage_base	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^class variant_pipe_stage_base$/;"	c
variant_prefilter_stage	./src/c++/lib/applications/starling/variant_prefilter_stage.hh	/^    variant_prefilter_stage($/;"	f	struct:variant_prefilter_stage
variant_prefilter_stage	./src/c++/lib/applications/starling/variant_prefilter_stage.hh	/^struct variant_prefilter_stage : public variant_pipe_stage_base$/;"	s
variant_window_first_stage	./src/c++/lib/starling_common/starling_base_shared.hh	/^    unsigned variant_window_first_stage;$/;"	m	struct:starling_base_deriv_options
variant_window_last_stage	./src/c++/lib/starling_common/starling_base_shared.hh	/^    unsigned variant_window_last_stage;$/;"	m	struct:starling_base_deriv_options
vcfAltSeq	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    std::string vcfAltSeq;$/;"	m	struct:OrthogonalAlleleSetLocusReportInfoAlleleDetails
vcfCigar	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    ALIGNPATH::path_t vcfCigar;$/;"	m	struct:OrthogonalAlleleSetLocusReportInfoAlleleDetails
vcfPos	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    pos_t vcfPos = 0;$/;"	m	struct:OrthogonalAlleleSetLocusReportInfo
vcfRefSeq	./src/c++/lib/applications/starling/gvcfAlleleInfo.hh	/^    std::string vcfRefSeq;$/;"	m	struct:OrthogonalAlleleSetLocusReportInfo
vcf_col_label	./src/c++/lib/htsapi/vcf_util.hh	/^vcf_col_label()$/;"	f
vcf_fileDate	./src/c++/lib/htsapi/vcf_util.cpp	/^vcf_fileDate(std::ostream& os)$/;"	f
vcf_indel_seq	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    std::string vcf_indel_seq; \/\/\/< vcf ALT string$/;"	m	struct:SomaticIndelVcfInfo
vcf_record	./src/c++/lib/htsapi/vcf_record.hh	/^    vcf_record()$/;"	f	struct:vcf_record
vcf_record	./src/c++/lib/htsapi/vcf_record.hh	/^struct vcf_record$/;"	s
vcf_ref_seq	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.hh	/^    std::string vcf_ref_seq; \/\/\/< vcf REF string$/;"	m	struct:SomaticIndelVcfInfo
vcf_streamer	./src/c++/lib/htsapi/vcf_streamer.cpp	/^vcf_streamer($/;"	f	class:vcf_streamer
vcf_streamer	./src/c++/lib/htsapi/vcf_streamer.hh	/^struct vcf_streamer : public hts_streamer$/;"	s
vcfr	./src/c++/lib/blt_util/RecordTracker.hh	/^    vcf_record vcfr;$/;"	m	struct:IndelGenotype
verbosity	./src/c++/lib/blt_common/blt_shared.hh	/^    LOG_LEVEL::index_t verbosity = LOG_LEVEL::DEFAULT;$/;"	m	struct:blt_options
version	./src/c++/lib/calibration/IndelErrorModelMetadata.hh	/^    std::string version;$/;"	m	struct:IndelErrorModelMetadata
version	./src/c++/lib/common/Program.cpp	/^version() const$/;"	f	class:illumina::Program
version	./src/c++/lib/starling_common/prog_info_base.cpp	/^version() const$/;"	f	class:prog_info_base
vgen_t	./src/c++/lib/applications/starling/starling_sim_test.cpp	/^typedef boost::variate_generator<gen_t&,dist_t> vgen_t;$/;"	t	file:
vgen_t	./src/c++/lib/applications/strelka/strelka_sim_test.cpp	/^typedef boost::variate_generator<gen_t&,dist_t> vgen_t;$/;"	t	file:
vote	./src/c++/lib/calibration/RandomForestModel.hh	/^        TreeNode<double,double> vote;$/;"	m	struct:RandomForestModel::DecisionTreeNode
walk	./src/c++/lib/assembly/IterativeAssembler.cpp	/^walk(const IterativeAssemblerOptions& opt,$/;"	f	file:
walk	./src/c++/lib/assembly/SmallAssembler.cpp	/^walk(const SmallAssemblerOptions& opt,$/;"	f	file:
wall	./src/c++/lib/blt_util/time_util.hh	/^    double wall = 0.;$/;"	m	struct:CpuTimes
watch	./src/c++/lib/blt_util/test/observer_test.cpp	/^    watch(const notifier<int>& n)$/;"	f	struct:observer_test
wav	./src/c++/lib/starling_common/starling_pos_processor_base.hh	/^        pos_win_avgs wav;$/;"	m	struct:starling_pos_processor_base::sample_info
which_interfering_indel	./src/c++/lib/starling_common/starling_read_align_score_indels.cpp	/^which_interfering_indel($/;"	f	file:
win_avg_set	./src/c++/lib/starling_common/starling_pos_processor_win_avg_set.hh	/^    win_avg_set(const unsigned size)$/;"	f	struct:win_avg_set
win_avg_set	./src/c++/lib/starling_common/starling_pos_processor_win_avg_set.hh	/^struct win_avg_set$/;"	s
window_average	./src/c++/lib/blt_util/window_util.hh	/^    window_average(const int32_t init_full_size)$/;"	f	struct:window_average
window_average	./src/c++/lib/blt_util/window_util.hh	/^struct window_average$/;"	s
word	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    char* word[MAX_WORD_COUNT];$/;"	m	struct:istream_line_splitter
wordStepSize	./src/c++/lib/options/IterativeAssemblerOptions.hh	/^    unsigned wordStepSize = 5;$/;"	m	struct:IterativeAssemblerOptions
wordStepSize	./src/c++/lib/options/SmallAssemblerOptions.hh	/^    unsigned wordStepSize = 5;$/;"	m	struct:SmallAssemblerOptions
workerData	./src/c++/lib/applications/starling/starling_run.cpp	/^typedef struct workerData$/;"	s	file:
workerData	./src/c++/lib/applications/starling/starling_run.cpp	/^}workerData;$/;"	t	typeref:struct:workerData	file:
write	./src/c++/lib/applications/starling/gvcf_locus_info.cpp	/^write(std::ostream& os) const$/;"	f	class:GermlineFilterKeeper
write	./src/c++/lib/applications/strelka/strelka_vcf_locus_info.hh	/^    write($/;"	f	struct:strelka_filter_keeper
writeAllNonVariantBlockRecords	./src/c++/lib/applications/starling/gvcf_writer.hh	/^    writeAllNonVariantBlockRecords()$/;"	f	struct:gvcf_writer
writeExtendedFeatureSet	./src/c++/lib/calibration/featuresetUtil.cpp	/^writeExtendedFeatureSet($/;"	f
writeGenotype	./src/c++/lib/htsapi/vcf_util.cpp	/^writeGenotype($/;"	f	class:VcfGenotypeUtil
writeGenotype	./src/c++/lib/htsapi/vcf_util.hh	/^    writeGenotype($/;"	f	struct:VcfGenotypeUtil
writeLowEVSFilter	./src/c++/lib/applications/strelka/strelka_streams.cpp	/^writeLowEVSFilter($/;"	f	file:
writeSampleNonVariantBlockRecord	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^writeSampleNonVariantBlockRecord($/;"	f	class:gvcf_writer
writeSiteVcfAltField	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^writeSiteVcfAltField($/;"	f	file:
writeSomaticIndelVcfGrid	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.cpp	/^writeSomaticIndelVcfGrid($/;"	f	file:
writeValues	./src/c++/lib/calibration/featuresetUtil.hh	/^    writeValues($/;"	f	struct:VariantScoringFeatureKeeper
write_alt_alleles	./src/c++/lib/applications/strelka/strelka_digt_states.cpp	/^write_alt_alleles(char normal_alt_base,$/;"	f	namespace:DDIGT
write_bam	./src/c++/lib/starling_common/starling_read.cpp	/^write_bam(bam_dumper& bamd)$/;"	f	class:starling_read
write_diploid_genotype	./src/c++/lib/applications/strelka/strelka_digt_states.cpp	/^write_diploid_genotype($/;"	f	namespace:DDIGT
write_indel_record	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^write_indel_record($/;"	f	class:gvcf_writer
write_indel_record_instance	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^write_indel_record_instance($/;"	f	class:gvcf_writer
write_indel_state	./src/c++/lib/applications/strelka/strelka_digt_states.cpp	/^write_indel_state(const DDIGT::index_t dgt,$/;"	f	namespace:DDIGT
write_line	./src/c++/lib/blt_util/istream_line_splitter.cpp	/^write_line(std::ostream& os) const$/;"	f	class:istream_line_splitter
write_nonref_2allele_test	./src/c++/lib/blt_common/position_nonref_2allele_test.cpp	/^write_nonref_2allele_test(const snp_pos_info& pi,$/;"	f
write_nonref_test	./src/c++/lib/blt_common/position_nonref_test.cpp	/^write_nonref_test(const blt_options& \/*opt*\/,$/;"	f
write_reads	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^write_reads(const pos_t pos)$/;"	f	class:starling_pos_processor_base
write_shared_vcf_header_info	./src/c++/lib/applications/strelka/strelka_streams.cpp	/^write_shared_vcf_header_info($/;"	f	file:
write_site_record	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^write_site_record($/;"	f	class:gvcf_writer
write_site_record_instance	./src/c++/lib/applications/starling/gvcf_writer.cpp	/^write_site_record_instance($/;"	f	class:gvcf_writer
write_snv_state	./src/c++/lib/applications/strelka/strelka_digt_states.cpp	/^write_snv_state(const DDIGT::index_t dgt,$/;"	f	namespace:DDIGT
write_starling_legacy_options	./src/c++/lib/starling_common/starling_base_option_parser.cpp	/^write_starling_legacy_options($/;"	f
write_vcf_audit	./src/c++/lib/starling_common/starling_streams_base.cpp	/^write_vcf_audit($/;"	f	file:
write_vcf_audit	./src/c++/lib/starling_common/starling_streams_base.cpp	/^write_vcf_audit(const starling_base_options& opt,$/;"	f	class:starling_streams_base
write_vcf_filter	./src/c++/lib/htsapi/vcf_util.cpp	/^write_vcf_filter($/;"	f
write_vcf_isri_tiers	./src/c++/lib/applications/strelka/SomaticIndelVcfWriter.cpp	/^write_vcf_isri_tiers($/;"	f	file:
write_vcf_sample_info	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid_vcf.cpp	/^write_vcf_sample_info($/;"	f	file:
write_vcf_somatic_snv_genotype_strand_grid	./src/c++/lib/applications/strelka/position_somatic_snv_strand_grid_vcf.cpp	/^write_vcf_somatic_snv_genotype_strand_grid($/;"	f
x	./src/c++/lib/blt_common/sample_range_impl.hh	/^    blt_float_t x;$/;"	m	struct:fval
zeroCount	./src/c++/lib/blt_common/MapqTracker.hh	/^    unsigned zeroCount = 0;$/;"	m	struct:MapqTracker
~GermlineIndelLocusInfo	./src/c++/lib/applications/starling/gvcf_locus_info.hh	/^    virtual ~GermlineIndelLocusInfo() {}$/;"	f	struct:GermlineIndelLocusInfo
~GetSequenceErrorCountsInfo	./src/c++/lib/applications/GetSequenceErrorCounts/GetSequenceErrorCountsInfo.hh	/^    virtual ~GetSequenceErrorCountsInfo() {}$/;"	f	struct:GetSequenceErrorCountsInfo
~OutStream	./src/c++/lib/common/OutStream.cpp	/^~OutStream() {}$/;"	f	class:OutStream
~RegionProcessor	./src/c++/lib/blt_util/RegionProcessor.hh	/^    ~RegionProcessor()$/;"	f	struct:RegionProcessor
~RunStatsManager	./src/c++/lib/appstats/RunStatsManager.cpp	/^~RunStatsManager()$/;"	f	class:RunStatsManager
~SampleSetSummary	./src/c++/lib/starling_common/SampleSetSummary.hh	/^    ~SampleSetSummary() {}$/;"	f	struct:SampleSetSummary
~SegmentTimeTracker	./src/c++/lib/common/SegmentTimeTracker.cpp	/^~SegmentTimeTracker()$/;"	f	class:SegmentTimeTracker
~StreamScoper	./src/c++/lib/blt_util/io_util.cpp	/^~StreamScoper()$/;"	f	class:StreamScoper
~TimeScoper	./src/c++/lib/blt_util/time_util.hh	/^    ~TimeScoper()$/;"	f	struct:TimeScoper
~bam_dumper	./src/c++/lib/htsapi/bam_dumper.cpp	/^~bam_dumper()$/;"	f	class:bam_dumper
~bam_record	./src/c++/lib/htsapi/bam_record.hh	/^    ~bam_record()$/;"	f	struct:bam_record
~bam_streamer	./src/c++/lib/htsapi/bam_streamer.cpp	/^~bam_streamer()$/;"	f	class:bam_streamer
~blt_deriv_options	./src/c++/lib/blt_common/blt_shared.cpp	/^~blt_deriv_options() {}$/;"	f	class:blt_deriv_options
~flyweight_observer	./src/c++/lib/blt_util/flyweight_observer.hh	/^    virtual ~flyweight_observer() {}$/;"	f	struct:flyweight_observer
~gvcf_aggregator	./src/c++/lib/applications/starling/gvcf_aggregator.cpp	/^gvcf_aggregator::~gvcf_aggregator()$/;"	f	class:gvcf_aggregator
~hts_streamer	./src/c++/lib/htsapi/hts_streamer.cpp	/^~hts_streamer()$/;"	f	class:hts_streamer
~istream_line_splitter	./src/c++/lib/blt_util/istream_line_splitter.hh	/^    ~istream_line_splitter()$/;"	f	struct:istream_line_splitter
~notifier	./src/c++/lib/blt_util/observer.hh	/^    virtual ~notifier()$/;"	f	struct:notifier
~observer	./src/c++/lib/blt_util/observer.hh	/^    virtual ~observer()$/;"	f	struct:observer
~pos_processor_base	./src/c++/lib/blt_util/pos_processor_base.hh	/^    ~pos_processor_base() {}$/;"	f	struct:pos_processor_base
~prog_info	./src/c++/lib/blt_util/prog_info.hh	/^    virtual ~prog_info() {}$/;"	f	struct:prog_info
~read_record	./src/c++/lib/blt_util/read_record.hh	/^    virtual ~read_record() {}$/;"	f	struct:read_record
~read_streamer	./src/c++/lib/blt_util/read_streamer.hh	/^    virtual ~read_streamer() {}$/;"	f	struct:read_streamer
~scan_result	./src/c++/lib/applications/countFastaBases/countFastaBases.cpp	/^    ~scan_result()$/;"	f	struct:scan_result
~snoise_info	./src/c++/lib/applications/strelkaNoiseExtractor/snoise_info.hh	/^    virtual ~snoise_info() {}$/;"	f	struct:snoise_info
~starling_base_deriv_options	./src/c++/lib/starling_common/starling_base_shared.cpp	/^~starling_base_deriv_options() {}$/;"	f	class:starling_base_deriv_options
~starling_info	./src/c++/lib/applications/starling/starling_info.hh	/^    virtual ~starling_info() {}$/;"	f	struct:starling_info
~starling_pos_processor_base	./src/c++/lib/starling_common/starling_pos_processor_base.cpp	/^~starling_pos_processor_base()$/;"	f	class:starling_pos_processor_base
~starling_read_buffer	./src/c++/lib/starling_common/starling_read_buffer.cpp	/^~starling_read_buffer()$/;"	f	class:starling_read_buffer
~strelka_deriv_options	./src/c++/lib/applications/strelka/strelka_shared.cpp	/^~strelka_deriv_options() {}$/;"	f	class:strelka_deriv_options
~strelka_info	./src/c++/lib/applications/strelka/strelka_info.hh	/^    virtual ~strelka_info() {}$/;"	f	struct:strelka_info
~variant_pipe_stage_base	./src/c++/lib/applications/starling/variant_pipe_stage_base.hh	/^    virtual ~variant_pipe_stage_base() {}$/;"	f	class:variant_pipe_stage_base
~vcf_streamer	./src/c++/lib/htsapi/vcf_streamer.cpp	/^~vcf_streamer()$/;"	f	class:vcf_streamer
